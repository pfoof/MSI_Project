// Generated by Haxe 4.0.2
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var priori_event_PriEventDispatcher = function() {
	this._isKilled = false;
	this.___event_dispatcher_listeners = [];
	this.___event_dispatcher_events = [];
};
priori_event_PriEventDispatcher.__name__ = true;
priori_event_PriEventDispatcher.prototype = {
	hasEvent: function(event) {
		if(this.___event_dispatcher_events.indexOf(event) > -1) {
			return true;
		}
		return false;
	}
	,addEventListener: function(event,listener) {
		this.___event_dispatcher_events.push(event);
		this.___event_dispatcher_listeners.push(listener);
	}
	,removeEventListener: function(event,listener) {
		var i = 0;
		var n = this.___event_dispatcher_events.length;
		while(i < n) {
			if(this.___event_dispatcher_events[i] == event && this.___event_dispatcher_listeners[i] == listener) {
				this.___event_dispatcher_events.splice(i,1);
				this.___event_dispatcher_listeners.splice(i,1);
				--n;
			}
			++i;
		}
	}
	,removeAllEventListenersFromType: function(event) {
		var i = 0;
		var n = this.___event_dispatcher_events.length;
		while(i < n) {
			if(this.___event_dispatcher_events[i] == event) {
				this.___event_dispatcher_events.splice(i,1);
				this.___event_dispatcher_listeners.splice(i,1);
				--n;
			}
			++i;
		}
	}
	,dispatchEvent: function(event) {
		if(this.isKilled()) {
			return;
		}
		var tempEvent = this.___event_dispatcher_events.slice();
		var tempListener = this.___event_dispatcher_listeners.slice();
		var clone = null;
		if(event.currentTarget == null) {
			event.currentTarget = this;
		}
		var _g = 0;
		var _g1 = tempEvent.length;
		while(_g < _g1) {
			var i = _g++;
			if(tempEvent[i] == event.type) {
				clone = event.clone();
				event.target = this;
				tempListener[i](clone);
				if(clone.propagate) {
					var c = clone.clone();
					c.bubble = false;
					this.propagateEvent(c);
				}
				if(clone.bubble) {
					var c1 = clone.clone();
					c1.propagate = false;
					this.bubbleEvent(c1);
				}
			}
		}
		if(clone == null && event.propagate) {
			clone = event.clone();
			clone.bubble = false;
			this.propagateEvent(clone);
			clone = null;
		}
		if(clone == null && event.bubble) {
			clone = event.clone();
			clone.propagate = false;
			this.bubbleEvent(clone);
		}
	}
	,bubbleEvent: function(event) {
		if(this.isKilled()) {
			return;
		}
		if(this.bubbleTo != null) {
			this.bubbleTo.dispatchEvent(event);
		} else if(((this) instanceof priori_view_PriDisplay)) {
			var display = this;
			if(display.get_parent() != null) {
				display.get_parent().dispatchEvent(event);
			}
		}
	}
	,propagateEvent: function(event) {
		if(!this.isKilled() && ((this) instanceof priori_view_container_PriContainer)) {
			var container = this;
			var childList = container._childList.slice();
			var _g = 0;
			var _g1 = childList.length;
			while(_g < _g1) {
				var i = _g++;
				childList[i].dispatchEvent(event);
			}
		}
	}
	,isKilled: function() {
		return this._isKilled;
	}
	,kill: function() {
		this.bubbleTo = null;
		this.___event_dispatcher_events = [];
		this.___event_dispatcher_listeners = [];
		this._isKilled = true;
	}
	,__class__: priori_event_PriEventDispatcher
};
var priori_view_PriDisplay = function() {
	this.dh = { bgColor : null, x : 0, y : 0, width : 100, height : 100, clipping : true, depth : 1000, pointer : false, focusable : false, dragdata : null, anchorX : 0.5, anchorY : 0.5, rotation : 0, scaleX : 1, scaleY : 1, alpha : 1, disabled : false, element : null, elementBorder : null, jselement : null, parent : null, eventHelper : new helper_browser_BrowserEventEngine()};
	priori_event_PriEventDispatcher.call(this);
	this.createElement();
	this.dh.eventHelper.jqel = this.dh.element;
	this.dh.eventHelper.jsel = this.dh.jselement;
	this.dh.eventHelper.display = this;
	this.addEventListener("prievent_base_addedToApp",($_=this.dh.eventHelper,$bind($_,$_.onAddedToApp)));
	this.addEventListener("prievent_base_addedToContainer",$bind(this,this.__onAdded));
};
priori_view_PriDisplay.__name__ = true;
priori_view_PriDisplay.__super__ = priori_event_PriEventDispatcher;
priori_view_PriDisplay.prototype = $extend(priori_event_PriEventDispatcher.prototype,{
	__onAdded: function(e) {
		this.updateDepth();
		helper_browser_DomHelper.borderUpdate(this.dh.elementBorder,this.dh);
	}
	,set_corners: function(value) {
		if(value == null || value.length == 0) {
			this.corners = value == null ? null : [];
			this.dh.jselement.style.borderRadius = "";
		} else {
			this.corners = value.slice();
			if(value.length > 4) {
				var tmp = value.slice().splice(0,4).join("px ");
				this.dh.jselement.style.borderRadius = tmp + "px";
			}
			var tmp1 = value.join("px ");
			this.dh.jselement.style.borderRadius = tmp1 + "px";
		}
		helper_browser_DomHelper.borderUpdate(this.dh.elementBorder,this.dh);
		return value;
	}
	,set_tooltip: function(value) {
		if(this.tooltip == value) {
			return value;
		}
		this.tooltip = value;
		if(value == "" || value == null) {
			this.dh.jselement.removeAttribute("title");
		} else {
			this.dh.jselement.setAttribute("title",value);
		}
		return value;
	}
	,set_border: function(value) {
		this.border = value;
		if(value == null) {
			this.removeBorder();
		} else {
			this.applyBorder();
		}
		return value;
	}
	,set_shadow: function(value) {
		this.shadow = value;
		var shadowString = "";
		if(value != null && value.length > 0) {
			shadowString = value.join(",");
		}
		this.dh.jselement.style.boxShadow = shadowString;
		this.dh.jselement.style.setProperty("-moz-box-shadow",shadowString);
		this.dh.jselement.style.setProperty("-webkit-box-shadow",shadowString);
		return value;
	}
	,set_filter: function(value) {
		this.filter = value;
		var filterString = "";
		if(value != null) {
			filterString = value.toString();
		}
		this.dh.jselement.style.filter = filterString;
		this.dh.jselement.style.setProperty("-moz-filter",filterString);
		this.dh.jselement.style.setProperty("-webkit-filter",filterString);
		this.dh.jselement.style.setProperty("-o-filter",filterString);
		this.dh.jselement.style.setProperty("-ms-filter",filterString);
		return value;
	}
	,applyBorder: function() {
		if(this.dh.elementBorder == null) {
			this.dh.elementBorder = window.document.createElement("div");
			this.dh.elementBorder.className = "priori_stylebase";
			this.dh.elementBorder.style.cssText = "box-sizing:border-box !important;position:absolute;left:0px;right:0px;bottom:0px;top:0px;pointer-events:none;";
			this.dh.jselement.appendChild(this.dh.elementBorder);
		}
		this.dh.elementBorder.style.border = this.border.toString();
		helper_browser_DomHelper.borderUpdate(this.dh.elementBorder,this.dh);
	}
	,removeBorder: function() {
		if(this.dh.elementBorder != null) {
			this.dh.jselement.removeChild(this.dh.elementBorder);
			this.dh.elementBorder = null;
		}
	}
	,get_clipping: function() {
		return this.dh.clipping;
	}
	,set_clipping: function(value) {
		if(value) {
			this.dh.clipping = true;
			this.dh.jselement.style.overflow = "hidden";
		} else {
			this.dh.clipping = false;
			this.dh.jselement.style.overflow = "";
		}
		return value;
	}
	,getRandomId: function(len) {
		if(len == null) {
			len = 7;
		}
		var length = len;
		var charactersToUse = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
		var result = "";
		result = "";
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var i = _g++;
			result += charactersToUse.charAt(Math.floor(charactersToUse.length * Math.random()));
		}
		result += "_" + new Date().getTime();
		return result;
	}
	,getOutDOMDimensions: function() {
		var clone = this.dh.element.clone(false);
		var body = $("body");
		body.append(clone);
		var box = helper_browser_DomHelper.getBoundingClientRect(clone[0]);
		clone.remove();
		clone = null;
		return box;
	}
	,get_widthScaled: function() {
		return this.get_width() * this.dh.scaleX;
	}
	,set_widthScaled: function(value) {
		this.set_scaleX(value / this.get_width());
		return value;
	}
	,get_heightScaled: function() {
		return this.get_height() * this.dh.scaleY;
	}
	,set_heightScaled: function(value) {
		this.set_scaleY(value / this.get_height());
		return value;
	}
	,set_width: function(value) {
		if(value == null) {
			this.dh.width = null;
			this.dh.jselement.style.width = "";
		} else {
			this.dh.width = Math.max(0,value);
			this.dh.jselement.style.width = this.dh.width + "px";
		}
		return value;
	}
	,get_width: function() {
		var result = this.dh.width;
		if(result == null) {
			result = helper_browser_DomHelper.getBoundingClientRect(this.dh.jselement).width;
			if(result == 0 && !this.hasApp()) {
				result = this.getOutDOMDimensions().width;
			}
			if(this.dh.scaleX != 0 && this.dh.scaleX != 1) {
				result /= this.dh.scaleX;
			}
		}
		return result;
	}
	,set_height: function(value) {
		if(value == null) {
			this.dh.height = null;
			this.dh.jselement.style.height = "";
		} else {
			this.dh.height = Math.max(0,value);
			this.dh.jselement.style.height = this.dh.height + "px";
		}
		return value;
	}
	,get_height: function() {
		var result = this.dh.height;
		if(result == null) {
			result = helper_browser_DomHelper.getBoundingClientRect(this.dh.jselement).height;
			result = result;
			if(result == 0 && !this.hasApp()) {
				result = this.getOutDOMDimensions().height;
			}
			if(this.dh.scaleY != 0 && this.dh.scaleY != 1) {
				result /= this.dh.scaleY;
			}
		}
		return result;
	}
	,set_maxX: function(value) {
		this.set_x(value - this.get_widthScaled());
		return value;
	}
	,set_maxY: function(value) {
		this.set_y(value - this.get_heightScaled());
		return value;
	}
	,set_centerX: function(value) {
		this.set_x(value - this.get_widthScaled() / 2);
		return value;
	}
	,set_centerY: function(value) {
		this.set_y(value - this.get_heightScaled() / 2);
		return value;
	}
	,set_x: function(value) {
		this.dh.x = value;
		this.dh.jselement.style.left = value + "px";
		return value;
	}
	,set_y: function(value) {
		this.dh.y = value;
		this.dh.jselement.style.top = value + "px";
		return value;
	}
	,get_x: function() {
		return this.dh.x;
	}
	,get_y: function() {
		return this.dh.y;
	}
	,get_maxX: function() {
		return this.get_x() + this.get_widthScaled();
	}
	,get_maxY: function() {
		return this.get_y() + this.get_heightScaled();
	}
	,get_centerX: function() {
		return this.get_x() + this.get_widthScaled() / 2;
	}
	,get_centerY: function() {
		return this.get_y() + this.get_heightScaled() / 2;
	}
	,get_scaleX: function() {
		return this.dh.scaleX;
	}
	,set_scaleX: function(value) {
		this.dh.scaleX = value == null ? 1 : value;
		helper_browser_DomHelper.apply2dTransformation(this.dh.jselement,this.dh.scaleX,this.dh.scaleY,this.dh.rotation,this.dh.anchorX,this.dh.anchorY);
		return value;
	}
	,get_scaleY: function() {
		return this.dh.scaleY;
	}
	,set_scaleY: function(value) {
		this.dh.scaleY = value == null ? 1 : value;
		helper_browser_DomHelper.apply2dTransformation(this.dh.jselement,this.dh.scaleX,this.dh.scaleY,this.dh.rotation,this.dh.anchorX,this.dh.anchorY);
		return value;
	}
	,get_anchorX: function() {
		return this.dh.anchorX;
	}
	,set_anchorX: function(value) {
		this.dh.anchorX = value == null ? 0 : value;
		helper_browser_DomHelper.apply2dTransformation(this.dh.jselement,this.dh.scaleX,this.dh.scaleY,this.dh.rotation,this.dh.anchorX,this.dh.anchorY);
		return value;
	}
	,get_anchorY: function() {
		return this.dh.anchorY;
	}
	,set_anchorY: function(value) {
		this.dh.anchorY = value == null ? 0 : value;
		helper_browser_DomHelper.apply2dTransformation(this.dh.jselement,this.dh.scaleX,this.dh.scaleY,this.dh.rotation,this.dh.anchorX,this.dh.anchorY);
		return value;
	}
	,get_rotation: function() {
		return this.dh.rotation;
	}
	,set_rotation: function(value) {
		this.dh.rotation = value == null ? 0 : value;
		helper_browser_DomHelper.apply2dTransformation(this.dh.jselement,this.dh.scaleX,this.dh.scaleY,this.dh.rotation,this.dh.anchorX,this.dh.anchorY);
		return value;
	}
	,get_alpha: function() {
		return this.dh.alpha;
	}
	,set_alpha: function(value) {
		this.dh.alpha = value;
		if(this.dh.alpha == 1) {
			this.dh.jselement.style.opacity = "";
		} else {
			this.dh.jselement.style.opacity = value == null ? "null" : "" + value;
		}
		return value;
	}
	,hasApp: function() {
		try {
			var app = priori_app_PriApp.g();
			var tree = this.getTreeList();
			if(tree[tree.length - 1] == app) {
				return true;
			}
			return false;
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			return false;
		}
	}
	,get_parent: function() {
		return this.dh.parent;
	}
	,updateDepth: function() {
		this.dh.depth = this.dh.parent.dh.depth - 1;
		this.dh.jselement.style.zIndex = Std.string(this.dh.depth);
		if(this.dh.elementBorder != null) {
			this.dh.elementBorder.style.zIndex = Std.string(this.dh.depth);
		}
	}
	,getJSElement: function() {
		return this.dh.jselement;
	}
	,getElement: function() {
		return this.dh.element;
	}
	,setCSS: function(property,value) {
		this.dh.element.css(property,value);
	}
	,getCSS: function(property) {
		return this.getElement().css(property);
	}
	,get_bgColor: function() {
		return this.dh.bgColor;
	}
	,set_bgColor: function(value) {
		this.dh.bgColor = value;
		if(value == null) {
			this.dh.jselement.style.backgroundColor = "";
		} else {
			var tmp = StringTools.hex(value,6);
			this.dh.jselement.style.backgroundColor = "#" + tmp;
		}
		return value;
	}
	,addEventListener: function(event,listener) {
		this.dh.eventHelper.registerEvent(event);
		if(event == "click") {
			this.set_pointer(true);
		}
		priori_event_PriEventDispatcher.prototype.addEventListener.call(this,event,listener);
	}
	,removeEventListener: function(event,listener) {
		priori_event_PriEventDispatcher.prototype.removeEventListener.call(this,event,listener);
		if(!this.hasEvent(event)) {
			this.dh.eventHelper.removeEvent(event);
		}
		if(event == "click" && this.hasEvent("click") == false) {
			this.set_pointer(false);
		}
	}
	,createElement: function() {
		var jsElement = window.document.createElement("div");
		jsElement.className = "priori_stylebase";
		jsElement.style.cssText = "left:0px;top:0px;width:" + this.dh.width + "px;height:" + this.dh.height + "px;overflow:hidden;";
		this.dh.jselement = jsElement;
		this.dh.element = $(jsElement);
	}
	,removeFromParent: function() {
		if(this.dh.parent != null) {
			this.dh.parent.removeChild(this);
		}
	}
	,kill: function() {
		this.dh.eventHelper.kill();
		this.getElement().off();
		this.getElement().find("*").off();
		priori_event_PriEventDispatcher.prototype.kill.call(this);
	}
	,get_visible: function() {
		if(this.dh.jselement.style.visibility == "hidden") {
			return false;
		}
		return true;
	}
	,set_visible: function(value) {
		if(value == true) {
			this.dh.jselement.style.visibility = "";
		} else {
			this.dh.jselement.style.visibility = "hidden";
		}
		return value;
	}
	,get_pointer: function() {
		return this.dh.pointer;
	}
	,set_pointer: function(value) {
		if(value == true) {
			this.dh.pointer = true;
			this.dh.jselement.style.cursor = "pointer";
		} else {
			this.dh.pointer = false;
			this.dh.jselement.style.cursor = "";
		}
		return value;
	}
	,get_mouseEnabled: function() {
		return this.dh.jselement.style.getPropertyValue("pointer-events") != "none";
	}
	,set_mouseEnabled: function(value) {
		if(!value) {
			this.dh.jselement.style.setProperty("pointer-events","none");
		} else {
			this.dh.jselement.style.removeProperty("pointer-events");
		}
		return value;
	}
	,hasDisabledParent: function() {
		if(this.get_parent() != null) {
			if(this.get_parent().get_disabled()) {
				return true;
			} else if(this.get_parent().hasDisabledParent()) {
				return true;
			}
		}
		return false;
	}
	,get_disabled: function() {
		if(this.dh.disabled || this.dh.jselement.hasAttribute("disabled")) {
			return true;
		}
		return false;
	}
	,set_disabled: function(value) {
		this.dh.disabled = value;
		if(value) {
			this.dh.jselement.setAttribute("priori-disabled","disabled");
			helper_browser_DomHelper.disableAll(this.dh.jselement);
		} else {
			this.dh.jselement.removeAttribute("priori-disabled");
			if(!this.hasDisabledParent()) {
				helper_browser_DomHelper.enableAllUpPrioriDisabled(this.dh.jselement);
			}
		}
		return value;
	}
	,getGlobalBox: function() {
		var result = new priori_geom_PriGeomBox();
		if(this.hasApp()) {
			var points = this.localToGlobal(new priori_geom_PriGeomPoint(this.get_x(),this.get_y()));
			result.x = points.x;
			result.y = points.y;
		}
		result.width = this.get_width();
		result.height = this.get_height();
		return result;
	}
	,getTreeList: function() {
		var result = [];
		result.push(this);
		var p = this.get_parent();
		while(p != null) {
			result.push(p);
			p = p.get_parent();
		}
		return result;
	}
	,get_mousePoint: function() {
		var app = priori_app_PriApp.g();
		return this.globalToLocal(new priori_geom_PriGeomPoint(app.get_mousePoint().x,app.get_mousePoint().y));
	}
	,globalToLocal: function(point) {
		var result = point.clone();
		var list = this.getTreeList();
		list.reverse();
		var _g = 0;
		while(_g < list.length) {
			var display = list[_g];
			++_g;
			result.x -= display.get_x() + display.getJSElement().scrollLeft;
			result.y -= display.get_y() + display.getJSElement().scrollTop;
		}
		return result;
	}
	,localToGlobal: function(point) {
		var result = point.clone();
		var list = this.getTreeList();
		list.shift();
		var _g = 0;
		while(_g < list.length) {
			var display = list[_g];
			++_g;
			result.x += display.get_x() - display.getJSElement().scrollLeft;
			result.y += display.get_y() - display.getJSElement().scrollTop;
		}
		return result;
	}
	,startDrag: function(lockCenter,bounds) {
		if(lockCenter == null) {
			lockCenter = false;
		}
		var _gthis = this;
		this.stopDrag();
		if(lockCenter) {
			if(this.get_parent() != null) {
				var parentMouse = this.get_parent().get_mousePoint();
				this.set_centerX(parentMouse.x);
				this.set_centerY(parentMouse.y);
				this.dispatchEvent(new priori_event_PriEvent("prievent_base_drag"));
			}
		}
		var tmp = priori_app_PriApp.g().get_mousePoint();
		var tmp1 = new priori_geom_PriGeomPoint(this.get_x(),this.get_y());
		var tmp2 = this.get_x();
		var tmp3 = this.get_y();
		this.dh.dragdata = { originalPointMouse : tmp, originalPosition : tmp1, lastPosition : new priori_geom_PriGeomPoint(tmp2,tmp3)};
		var runFunction = function() {
			var curPoint = priori_app_PriApp.g().get_mousePoint();
			var diffx = curPoint.x - _gthis.dh.dragdata.originalPointMouse.x;
			var diffy = curPoint.y - _gthis.dh.dragdata.originalPointMouse.y;
			if(bounds == null) {
				_gthis.set_x(_gthis.dh.dragdata.originalPosition.x + diffx);
				_gthis.set_y(_gthis.dh.dragdata.originalPosition.y + diffy);
			} else {
				_gthis.set_x(Math.max(Math.min(_gthis.dh.dragdata.originalPosition.x + diffx,bounds.x + bounds.width),bounds.x));
				_gthis.set_y(Math.max(Math.min(_gthis.dh.dragdata.originalPosition.y + diffy,bounds.y + bounds.height),bounds.y));
			}
			if(_gthis.dh.dragdata.lastPosition.x != _gthis.get_x() || _gthis.dh.dragdata.lastPosition.y != _gthis.get_y()) {
				_gthis.dispatchEvent(new priori_event_PriEvent("prievent_base_drag"));
				_gthis.dh.dragdata.lastPosition.x = _gthis.get_x();
				_gthis.dh.dragdata.lastPosition.y = _gthis.get_y();
			}
		};
		var timer = new haxe_Timer(30);
		timer.run = runFunction;
		this.dh.dragdata.t = timer;
		runFunction();
	}
	,stopDrag: function() {
		if(this.dh.dragdata != null) {
			this.dh.dragdata.t.stop();
			this.dh.dragdata = null;
		}
	}
	,get_focusable: function() {
		return this.dh.focusable;
	}
	,set_focusable: function(value) {
		if(this.dh.focusable != value) {
			this.dh.focusable = value;
			this.dh.jselement.tabIndex = value ? 0 : null;
		}
		return value;
	}
	,setFocus: function() {
		if(this.get_focusable()) {
			this.dh.jselement.focus();
		}
	}
	,removeFocus: function() {
		if(this.get_focusable()) {
			this.dh.jselement.blur();
		}
	}
	,hasFocus: function() {
		try {
			var curEl = window.document.activeElement;
			var hasAppFocus = false;
			try {
				hasAppFocus = priori_app_PriApp.g().hasFocus();
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			if(curEl != null && hasAppFocus && helper_browser_DomHelper.hasChild(this.dh.jselement,curEl)) {
				return true;
			}
		} catch( e2 ) {
			var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
		}
		return false;
	}
	,__class__: priori_view_PriDisplay
	,__properties__: {set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_anchorY:"set_anchorY",get_anchorY:"get_anchorY",set_anchorX:"set_anchorX",get_anchorX:"get_anchorX",set_filter:"set_filter",set_shadow:"set_shadow",set_border:"set_border",set_bgColor:"set_bgColor",get_bgColor:"get_bgColor",set_tooltip:"set_tooltip",set_corners:"set_corners",set_alpha:"set_alpha",get_alpha:"get_alpha",set_focusable:"set_focusable",get_focusable:"get_focusable",set_rotation:"set_rotation",get_rotation:"get_rotation",set_clipping:"set_clipping",get_clipping:"get_clipping",set_pointer:"set_pointer",get_pointer:"get_pointer",set_mouseEnabled:"set_mouseEnabled",get_mouseEnabled:"get_mouseEnabled",set_disabled:"set_disabled",get_disabled:"get_disabled",set_visible:"set_visible",get_visible:"get_visible",get_parent:"get_parent",set_maxY:"set_maxY",get_maxY:"get_maxY",set_maxX:"set_maxX",get_maxX:"get_maxX",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",get_mousePoint:"get_mousePoint",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_heightScaled:"set_heightScaled",get_heightScaled:"get_heightScaled",set_height:"set_height",get_height:"get_height",set_widthScaled:"set_widthScaled",get_widthScaled:"get_widthScaled",set_width:"set_width",get_width:"get_width"}
});
var priori_view_container_PriContainer = function() {
	this._migratingView = false;
	this._childList = [];
	priori_view_PriDisplay.call(this);
};
priori_view_container_PriContainer.__name__ = true;
priori_view_container_PriContainer.__super__ = priori_view_PriDisplay;
priori_view_container_PriContainer.prototype = $extend(priori_view_PriDisplay.prototype,{
	get_numChildren: function() {
		return this._childList.length;
	}
	,getChild: function(index) {
		var result = null;
		if(index < this._childList.length) {
			result = this._childList[index];
		}
		return result;
	}
	,addChildList: function(childList) {
		var realItens = [];
		var _g = 0;
		while(_g < childList.length) {
			var item = childList[_g];
			++_g;
			var value = item;
			if((((value) instanceof priori_view_PriDisplay) ? value : null) != null) {
				realItens.push(item);
			}
		}
		var thisHasApp = this.hasApp();
		var thisDisabled = this.get_disabled();
		var thisHasDisabledParent = this.hasDisabledParent();
		var docFrag = window.document.createDocumentFragment();
		var _g1 = 0;
		while(_g1 < realItens.length) {
			var child = realItens[_g1];
			++_g1;
			child.removeFromParent();
			this._childList.push(child);
			child.dh.parent = this;
			if(thisHasApp) {
				if(thisDisabled) {
					helper_browser_DomHelper.disableAll(child.getJSElement());
				} else if(!thisHasDisabledParent) {
					helper_browser_DomHelper.enableAllUpPrioriDisabled(child.getJSElement());
				}
			}
			docFrag.appendChild(child.getJSElement());
		}
		this.dh.jselement.appendChild(docFrag);
		var _g2 = 0;
		var _g3 = realItens.length;
		while(_g2 < _g3) {
			var i = _g2++;
			var child1 = realItens[i];
			if(thisHasApp) {
				child1.dispatchEvent(new priori_event_PriEvent("prievent_base_addedToApp",true));
			}
			child1.dispatchEvent(new priori_event_PriEvent("prievent_base_addedToContainer",true));
		}
	}
	,removeChildList: function(childList) {
		var realItens = [];
		var _g = 0;
		while(_g < childList.length) {
			var item = childList[_g];
			++_g;
			var value = item;
			if((((value) instanceof priori_view_PriDisplay) ? value : null) != null) {
				realItens.push(item);
			}
		}
		var hasAppBefore = this.hasApp();
		var _g1 = 0;
		while(_g1 < realItens.length) {
			var child = realItens[_g1];
			++_g1;
			if(child.get_parent() == this) {
				HxOverrides.remove(this._childList,child);
				this.dh.jselement.removeChild(child.getJSElement());
				child.dh.parent = null;
				if(hasAppBefore) {
					child.dispatchEvent(new priori_event_PriEvent("prievent_base_removedFromApp",true));
				}
				child.dispatchEvent(new priori_event_PriEvent("prievent_base_removedFromContainer",true));
			}
		}
	}
	,addChild: function(child) {
		this.addChildList([child]);
	}
	,removeChild: function(child) {
		this.removeChildList([child]);
	}
	,kill: function() {
		var _g = 0;
		var _g1 = this._childList.length;
		while(_g < _g1) {
			var i = _g++;
			this._childList[i].kill();
		}
		this._childList = [];
		priori_view_PriDisplay.prototype.kill.call(this);
	}
	,getContentBox: function() {
		var result = new priori_geom_PriGeomBox();
		var i = 0;
		var n = this.get_numChildren();
		while(i < n) {
			result.x = Math.min(result.x,this.getChild(i).get_x());
			result.y = Math.min(result.y,this.getChild(i).get_y());
			result.width = Math.max(result.width,this.getChild(i).get_maxX());
			result.height = Math.max(result.height,this.getChild(i).get_maxY());
			++i;
		}
		return result;
	}
	,set_width: function(value) {
		if(value != this.get_width()) {
			priori_view_PriDisplay.prototype.set_width.call(this,value);
			this.dispatchEvent(new priori_event_PriEvent("prievent_base_resize",false));
		}
		return value;
	}
	,set_height: function(value) {
		if(value != this.get_height()) {
			priori_view_PriDisplay.prototype.set_height.call(this,value);
			this.dispatchEvent(new priori_event_PriEvent("prievent_base_resize",false));
		}
		return value;
	}
	,__class__: priori_view_container_PriContainer
	,__properties__: $extend(priori_view_PriDisplay.prototype.__properties__,{get_numChildren:"get_numChildren"})
});
var priori_view_container_PriGroup = function() {
	priori_view_container_PriContainer.call(this);
	this._setupCalled = false;
	this._invalid = false;
	this.addEventListener("prievent_base_addedToApp",$bind(this,this._onAddedToApp));
	this.addEventListener("prievent_base_resize",$bind(this,this._onPriResizeGroup));
};
priori_view_container_PriGroup.__name__ = true;
priori_view_container_PriGroup.__super__ = priori_view_container_PriContainer;
priori_view_container_PriGroup.prototype = $extend(priori_view_container_PriContainer.prototype,{
	_onPriResizeGroup: function(e) {
		this.invalidate();
	}
	,kill: function() {
		if(this._invalidateTimer != null) {
			this._invalidateTimer.stop();
			this._invalidateTimer = null;
		}
		priori_view_container_PriContainer.prototype.kill.call(this);
	}
	,addChildList: function(childList) {
		priori_view_container_PriContainer.prototype.addChildList.call(this,childList);
		this.invalidate();
	}
	,removeChildList: function(childList) {
		priori_view_container_PriContainer.prototype.removeChildList.call(this,childList);
		this.invalidate();
	}
	,addChild: function(view) {
		priori_view_container_PriContainer.prototype.addChild.call(this,view);
		this.invalidate();
	}
	,removeChild: function(view) {
		priori_view_container_PriContainer.prototype.removeChild.call(this,view);
		this.invalidate();
	}
	,_onAddedToApp: function(e) {
		this.removeEventListener("prievent_base_addedToApp",$bind(this,this._onAddedToApp));
		if(this._setupCalled == false) {
			this._setupCalled = true;
			this.setup();
		}
		this.validate();
	}
	,setup: function() {
	}
	,paint: function() {
	}
	,isInvalid: function() {
		return this._invalid;
	}
	,canPaint: function() {
		return this._setupCalled;
	}
	,revalidate: function() {
		this.invalidate();
		this.validate();
	}
	,validate: function() {
		if(this._invalidateTimer != null) {
			this._invalidateTimer.stop();
			this._invalidateTimer = null;
		}
		if(!this._isKilled && this._invalid && this.canPaint()) {
			var child;
			this.paint();
			var _g = 0;
			var _g1 = this.get_numChildren();
			while(_g < _g1) {
				var i = _g++;
				child = this.getChild(i);
				if(child.validate != null) {
					child.validate();
				}
			}
			this._invalid = false;
		}
	}
	,invalidate: function() {
		this._invalid = true;
		if(this._invalidateTimer != null) {
			this._invalidateTimer.stop();
			this._invalidateTimer = null;
		}
		this._invalidateTimer = haxe_Timer.delay($bind(this,this.validate),33);
	}
	,invalidateChildren: function() {
		var _g = 0;
		var _g1 = this._childList.length;
		while(_g < _g1) {
			var i = _g++;
			if(((this._childList[i]) instanceof priori_view_container_PriGroup)) {
				(js_Boot.__cast(this._childList[i] , priori_view_container_PriGroup)).invalidateChildren();
			}
		}
		this.invalidate();
	}
	,getContentBox: function() {
		this.validate();
		return priori_view_container_PriContainer.prototype.getContentBox.call(this);
	}
	,__class__: priori_view_container_PriGroup
});
var priori_app_PriApp = function() {
	this.___hasFocus = false;
	this.___ymouse = 0;
	this.___xmouse = 0;
	if(priori_app_PriApp._g != null) {
		throw new js__$Boot_HaxeError("Do not create PriApp instance");
	} else {
		priori_app_PriApp._g = this;
	}
	this._fps = 60;
	priori_view_container_PriGroup.call(this);
	this.set_focusable(true);
	this.dh.jselement.style.width = "100%";
	this.dh.jselement.style.height = "100%";
	this.dh.jselement.style.position = "fixed";
	helper_browser_StyleHelper.applyFontStyle(this.dh.jselement,new priori_style_font_PriFontStyle());
	window.document.body.style.border = "0px";
	window.document.body.style.margin = "0px";
	if(window.document.addEventListener != null) {
		window.document.addEventListener("mousemove",$bind(this,this.___onPointerMove),true);
		window.document.addEventListener("touchmove",$bind(this,this.___onPointerMove),true);
		window.document.addEventListener("focus",$bind(this,this.___onAppFocusIn),true);
		window.document.addEventListener("blur",$bind(this,this.___onAppFocusOut),true);
	} else {
		window.document.onmousemove = $bind(this,this.___onPointerMove);
		window.document.ontouchmove = $bind(this,this.___onPointerMove);
		window.document.onfocus = $bind(this,this.___onAppFocusIn);
		window.document.onblur = $bind(this,this.___onAppFocusOut);
	}
	window.onresize = $bind(this,this.___onWindowResize);
	window.onmouseup = $bind(this,this.___onWindowMouseUp);
	this.___applyPreventBackspace();
	window.document.body.appendChild(this.dh.jselement);
	this.dispatchEvent(new priori_event_PriEvent("prievent_base_addedToApp",true));
	this.dispatchEvent(new priori_event_PriEvent("prievent_base_resize",false));
	this.invalidate();
	this.validate();
};
priori_app_PriApp.__name__ = true;
priori_app_PriApp.g = function() {
	if(priori_app_PriApp._g == null) {
		throw new js__$Boot_HaxeError("Application not yet created");
	}
	return priori_app_PriApp._g;
};
priori_app_PriApp.__super__ = priori_view_container_PriGroup;
priori_app_PriApp.prototype = $extend(priori_view_container_PriGroup.prototype,{
	get_mousePoint: function() {
		return new priori_geom_PriGeomPoint(this.___xmouse,this.___ymouse);
	}
	,___onPointerMove: function(e) {
		if(e.touches != null) {
			if(e.touches.length > 0) {
				this.___xmouse = e.touches[0].pageX;
				this.___ymouse = e.touches[0].pageY;
			}
		} else {
			this.___xmouse = e.pageX;
			this.___ymouse = e.pageY;
		}
	}
	,___onWindowResize: function() {
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_resize",false));
	}
	,___onWindowMouseUp: function(e) {
		this.dispatchEvent(new priori_event_PriTapEvent("mouseup",false));
	}
	,set_width: function(value) {
		return value;
	}
	,get_width: function() {
		return this.getAppSize().width;
	}
	,set_height: function(value) {
		return value;
	}
	,get_height: function() {
		return this.getAppSize().height;
	}
	,set_x: function(value) {
		return 0;
	}
	,get_x: function() {
		return 0;
	}
	,set_y: function(value) {
		return 0;
	}
	,get_y: function() {
		return 0;
	}
	,getMSUptate: function() {
		return 1000 / this._fps | 0;
	}
	,___applyPreventBackspace: function() {
		if(!priori_system_PriDevice.isMobileDevice()) {
			this.getDocument().keydown(function(e) {
				if(e.which == 8 && !$(e.target).is("input:not([readonly]):not([type=radio]):not([type=checkbox]), textarea, [contentEditable], [contentEditable=true]")) {
					e.preventDefault();
				}
			});
		}
	}
	,getAppSize: function() {
		var b = new priori_geom_PriGeomBox();
		var e = this.getWindow();
		b.width = e.width();
		b.height = e.height();
		b.x = 0;
		b.y = 0;
		return b;
	}
	,getDocument: function() {
		if(this._document == null) {
			this._document = $(window.document);
		}
		return this._document;
	}
	,getWindow: function() {
		if(this._window == null) {
			this._window = $(window);
		}
		return this._window;
	}
	,getBody: function() {
		if(this._body == null) {
			this._body = $("body");
		}
		return this._body;
	}
	,___onAppFocusIn: function() {
		this.___hasFocus = true;
	}
	,___onAppFocusOut: function() {
		this.___hasFocus = false;
	}
	,hasFocus: function() {
		return this.___hasFocus;
	}
	,__class__: priori_app_PriApp
});
var Main = function() {
	priori_app_PriApp.call(this);
};
Main.__name__ = true;
Main.__super__ = priori_app_PriApp;
Main.prototype = $extend(priori_app_PriApp.prototype,{
	setup: function() {
		client_views_ContentManager.getManager().addScene("itemlist",new client_views_ItemList()).addScene("login",new client_views_LoginForm()).addScene("register",new client_views_RegisterForm()).addScene("additem",new client_views_AddItemForm());
		this.addChild(client_views_ContentManager.getManager());
		if(window.location.hash != null) {
			if(window.location.hash.indexOf("token=") >= 0) {
				var newtoken = window.location.hash.substring(window.location.hash.indexOf("token=") + "token=".length);
				if(newtoken.length > 10) {
					js_Browser.getLocalStorage().setItem(client_Constants.TOKEN_HEADER,newtoken);
				}
			}
		}
		var token = client_Utils.getToken();
		if(token == null || token.length <= 1 || token == "undefined" || token == null || token == "null") {
			client_views_ContentManager.getManager().switchContent("login");
		} else if(client_Utils.ping()) {
			var _headers = { };
			_headers[client_Constants.TOKEN_HEADER] = token;
			var xhr = $.ajax(client_Constants.SERVER_DEST + "/authorize",{ headers : _headers, method : "GET", async : false});
			if(xhr.status < 100 || xhr.status >= 400) {
				client_Utils.logout();
			} else {
				if(xhr.responseType == "json" && Object.prototype.hasOwnProperty.call(xhr.response,"level")) {
					js_Browser.getLocalStorage().setItem("level",xhr.response.level);
				}
				client_views_ContentManager.getManager().switchContent("itemlist");
			}
		} else {
			var tmp = client_views_ContentManager.getManager();
			var _g = new haxe_ds_StringMap();
			if(__map_reserved["warn"] != null) {
				_g.setReserved("warn","Offline mode!");
			} else {
				_g.h["warn"] = "Offline mode!";
			}
			tmp.switchContent("itemlist",_g);
		}
	}
	,paint: function() {
		client_views_ContentManager.getManager().set_width(this.get_width());
		client_views_ContentManager.getManager().set_height(this.get_height());
	}
	,__class__: Main
});
Math.__name__ = true;
var Priori_$auto_$main_$builder = function() { };
Priori_$auto_$main_$builder.__name__ = true;
Priori_$auto_$main_$builder.main = function() {
	$(function() {
		var appclass = Main;
		var instance = Type.createInstance(Main,[]);
	});
};
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var Type = function() { };
Type.__name__ = true;
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
var client_Access = function() { };
client_Access.__name__ = true;
client_Access.registerCallback = function(callback) {
	client_Access.getRemote().addBroadcast(callback);
	client_Access.getLocal().addBroadcast(callback);
};
client_Access.getRemote = function() {
	if(client_Access.remote == null) {
		client_Access.remote = new client_Remote();
	}
	return client_Access.remote;
};
client_Access.getLocal = function() {
	if(client_Access.local == null) {
		client_Access.local = new client_Local();
	}
	return client_Access.local;
};
client_Access.getAccessTarget = function() {
	if(window.navigator.onLine) {
		return client_Access.getRemote();
	} else {
		return client_Access.getLocal();
	}
};
client_Access.prototype = {
	addProduct: function(token,name,manufact,price,quant,time) {
	}
	,deleteProduct: function(token,item,time) {
	}
	,editProduct: function(token,item,name,manufact,price,time) {
	}
	,addRemoveQuantity: function(token,item,delta,time) {
	}
	,retrieveItems: function(token) {
	}
	,addBroadcast: function(callback) {
	}
	,getUserActions: function(token) {
		return [client_Constants.ACTION_EDIT];
	}
	,__class__: client_Access
};
var client_Signal = $hxEnums["client.Signal"] = { __ename__ : true, __constructs__ : ["Add","Retrieve","Delete","Edit","Quantity"]
	,Add: {_hx_index:0,__enum__:"client.Signal",toString:$estr}
	,Retrieve: {_hx_index:1,__enum__:"client.Signal",toString:$estr}
	,Delete: {_hx_index:2,__enum__:"client.Signal",toString:$estr}
	,Edit: {_hx_index:3,__enum__:"client.Signal",toString:$estr}
	,Quantity: {_hx_index:4,__enum__:"client.Signal",toString:$estr}
};
var client_Constants = function() { };
client_Constants.__name__ = true;
client_Constants.hasConnection = function() {
	return window.navigator.onLine;
};
client_Constants.getTimestamp = function() {
	return new Date().getTime();
};
var client_ItemModel = function() {
};
client_ItemModel.__name__ = true;
client_ItemModel.prototype = {
	__class__: client_ItemModel
};
var client_Local = function() {
};
client_Local.__name__ = true;
client_Local.__super__ = client_Access;
client_Local.prototype = $extend(client_Access.prototype,{
	addProduct: function(token,name,manufact,price,quant,time) {
		var log = client_Log.getLog();
	}
	,__class__: client_Local
});
var client_ItemChange = $hxEnums["client.ItemChange"] = { __ename__ : true, __constructs__ : ["Add","Quantity","Edit","Delete"]
	,Add: {_hx_index:0,__enum__:"client.ItemChange",toString:$estr}
	,Quantity: {_hx_index:1,__enum__:"client.ItemChange",toString:$estr}
	,Edit: {_hx_index:2,__enum__:"client.ItemChange",toString:$estr}
	,Delete: {_hx_index:3,__enum__:"client.ItemChange",toString:$estr}
};
var client_Log = function() {
	this.records = [];
};
client_Log.__name__ = true;
client_Log.getLog = function() {
	var log = new client_Log();
	var storage = js_Browser.getLocalStorage();
	var currentLogJson = storage.getItem(client_Constants.LOCAL_STORAGE_LOG);
	if(currentLogJson.length <= 0) {
		return log;
	}
	log.records = JSON.parse(currentLogJson);
	return log;
};
client_Log.saveLog = function(log) {
	var jsonLog = JSON.stringify(log.records);
	js_Browser.getLocalStorage().setItem(client_Constants.LOCAL_STORAGE_LOG,jsonLog);
};
client_Log.findById = function(items,id) {
	var _g = 0;
	var _g1 = items.length;
	while(_g < _g1) {
		var i = _g++;
		if(items[i].ID == id) {
			return i;
		}
	}
	return -1;
};
client_Log.prototype = {
	getQuantity: function(item) {
		var q = 0;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.records;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v.item == item) {
				_g.push(v);
			}
		}
		var sublist = _g;
		sublist.sort(function(x,y) {
			return js_Boot.__cast(x.time - y.time , Int);
		});
		var _g3 = 0;
		while(_g3 < sublist.length) {
			var x1 = sublist[_g3];
			++_g3;
			if(x1.context == client_ItemChange.Delete) {
				q = 0;
				return 0;
			} else if(x1.context == client_ItemChange.Quantity) {
				q += x1.data.change;
			}
		}
		return 0;
	}
	,getNewItems: function() {
		var items = [];
		var _g = [];
		var _g1 = 0;
		var _g2 = this.records;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v.context == client_ItemChange.Add || v.context == client_ItemChange.Delete) {
				_g.push(v);
			}
		}
		var sublist = _g;
		sublist.sort(function(x,y) {
			return js_Boot.__cast(x.time - y.time , Int);
		});
		var _g3 = 0;
		while(_g3 < sublist.length) {
			var x1 = sublist[_g3];
			++_g3;
			if(x1.context == client_ItemChange.Delete) {
				var _g4 = [];
				var _g11 = 0;
				var _g21 = items;
				while(_g11 < _g21.length) {
					var v1 = _g21[_g11];
					++_g11;
					if(v1.ID != x1.item) {
						_g4.push(v1);
					}
				}
				items = _g4;
			} else if(x1.context == client_ItemChange.Add) {
				var newItem = new client_ItemModel();
				newItem.ID = x1.item;
				newItem.name = x1.data.name;
				newItem.prod = x1.data.prod;
				newItem.quantity = x1.data.quantity;
				newItem.price = x1.data.price;
			}
		}
		return items;
	}
	,filterChanges: function(items) {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.records;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v.context == client_ItemChange.Edit) {
				_g.push(v);
			}
		}
		var sublist = _g;
		sublist.sort(function(x,y) {
			return js_Boot.__cast(x.time - y.time , Int);
		});
		var _g3 = 0;
		while(_g3 < sublist.length) {
			var x1 = sublist[_g3];
			++_g3;
			var target = client_Log.findById(items,x1.item);
			if(target > -1) {
				items[target].name = x1.data.name;
				items[target].prod = x1.data.prod;
				items[target].price = x1.data.price;
			}
		}
		return items;
	}
	,filterItems: function(items) {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.records;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v.context == client_ItemChange.Delete) {
				_g.push(v);
			}
		}
		var sublist = _g;
		sublist.sort(function(x,y) {
			return js_Boot.__cast(x.time - y.time , Int);
		});
		var _g3 = 0;
		while(_g3 < sublist.length) {
			var x1 = sublist[_g3];
			++_g3;
			var _g4 = [];
			var _g11 = 0;
			var _g21 = items;
			while(_g11 < _g21.length) {
				var v1 = _g21[_g11];
				++_g11;
				if(v1.ID != x1.item) {
					_g4.push(v1);
				}
			}
			items = _g4;
		}
		return this.filterChanges(items.concat(this.getNewItems()));
	}
	,getItem: function(item,currentItem) {
		return null;
	}
	,logQuantity: function(time,item,change) {
		var record = { time : time, item : item, data : { change : change}, context : client_ItemChange.Quantity};
		this.records.push(record);
	}
	,__class__: client_Log
};
var client_Remote = function() {
	this.broadcasts = [];
};
client_Remote.__name__ = true;
client_Remote.itemChange = function(user,item,change) {
	var req = new priori_net_PriURLRequest("https://localhost:8080");
	req.method = "POST";
	req.contentType = "application/json";
	req.requestHeader.push(new priori_net_PriURLHeader("X-User-Key",user));
	req.data = { item : item, change : change};
	new priori_net_PriURLLoader(req);
};
client_Remote.__super__ = client_Access;
client_Remote.prototype = $extend(client_Access.prototype,{
	addBroadcast: function(callback) {
		this.broadcasts.push(callback);
	}
	,triggerBroadcasts: function(signal,object) {
		console.log("src/client/Remote.hx:26:","Broadcasts");
		var _g = 0;
		var _g1 = this.broadcasts;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b(signal,object);
			console.log("src/client/Remote.hx:29:","Triggered a broadcast");
		}
	}
	,request: function(data,method,headers,callback,signal) {
		var _headers = { };
		if(headers != null) {
			var _g = new haxe_iterators_MapKeyValueIterator(headers);
			while(_g.hasNext()) {
				var _g1 = _g.next();
				var k = _g1.key;
				var v = _g1.value;
				_headers[k] = v;
			}
		}
		$.support.cors = true;
		if(typeof(data) != "string") {
			data = JSON.stringify(data);
		}
		$.ajax({ url : client_Constants.SERVER_DEST, headers : _headers, contentType : "application/json", async : true, method : method, dataType : "text", data : data, success : function(_data,status,e) {
			if(callback != null) {
				callback(signal,{ data : _data, e : e});
			}
		}, error : function(e1,status1,err) {
			if(callback != null) {
				callback(signal,{ data : err, e : e1});
			}
		}});
	}
	,addProduct: function(token,name,manufact,price,quant,time) {
		var data = JSON.stringify({ name : name, prod : manufact, price : price, quantity : quant});
		var _g = new haxe_ds_StringMap();
		var key = client_Constants.TOKEN_HEADER;
		if(__map_reserved[key] != null) {
			_g.setReserved(key,token);
		} else {
			_g.h[key] = token;
		}
		var headers = _g;
		console.log("src/client/Remote.hx:85:","Sending POST request");
		this.request(data,"POST",headers,$bind(this,this.triggerBroadcasts),client_Signal.Add);
	}
	,editProduct: function(token,item,name,manufact,price,time) {
		var data = JSON.stringify({ item : item, name : name, prod : manufact, price : price});
		var _g = new haxe_ds_StringMap();
		var key = client_Constants.TOKEN_HEADER;
		if(__map_reserved[key] != null) {
			_g.setReserved(key,token);
		} else {
			_g.h[key] = token;
		}
		var headers = _g;
		console.log("src/client/Remote.hx:97:","Sending PUT request");
		this.request(data,"PUT",headers,$bind(this,this.triggerBroadcasts),client_Signal.Edit);
	}
	,deleteProduct: function(token,item,time) {
		var data = JSON.stringify({ item : item});
		var _g = new haxe_ds_StringMap();
		var key = client_Constants.TOKEN_HEADER;
		if(__map_reserved[key] != null) {
			_g.setReserved(key,token);
		} else {
			_g.h[key] = token;
		}
		var headers = _g;
		this.request(data,"DELETE",headers,$bind(this,this.triggerBroadcasts),client_Signal.Delete);
	}
	,addRemoveQuantity: function(token,item,delta,time) {
		var data = JSON.stringify({ item : item, change : delta});
		var _g = new haxe_ds_StringMap();
		var key = client_Constants.TOKEN_HEADER;
		if(__map_reserved[key] != null) {
			_g.setReserved(key,token);
		} else {
			_g.h[key] = token;
		}
		var headers = _g;
		this.request(data,"PUT",headers,$bind(this,this.triggerBroadcasts),client_Signal.Quantity);
	}
	,retrieveItems: function(token) {
		var _g = new haxe_ds_StringMap();
		var key = client_Constants.TOKEN_HEADER;
		if(__map_reserved[key] != null) {
			_g.setReserved(key,token);
		} else {
			_g.h[key] = token;
		}
		var headers = _g;
		this.request("","GET",headers,$bind(this,this.triggerBroadcasts),client_Signal.Retrieve);
	}
	,itemInsert: function() {
	}
	,__class__: client_Remote
});
var client_Utils = function() { };
client_Utils.__name__ = true;
client_Utils.addAllChildren = function(target,children) {
	var _g = 0;
	while(_g < children.length) {
		var v = children[_g];
		++_g;
		target.addChild(v);
	}
};
client_Utils.getToken = function() {
	return js_Browser.getLocalStorage().getItem(client_Constants.TOKEN_HEADER);
};
client_Utils.ping = function() {
	if(!window.navigator.onLine) {
		return false;
	}
	var jqxhr = $.ajax(client_Constants.SERVER_DEST,{ method : "GET", async : false});
	return jqxhr.state() == "resolved";
};
client_Utils.verifyToken = function(s) {
	return false;
};
client_Utils.logout = function() {
	js_Browser.getLocalStorage().removeItem(client_Constants.TOKEN_HEADER);
	var tmp = client_views_ContentManager.getManager();
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["error"] != null) {
		_g.setReserved("error","Please log in again!");
	} else {
		_g.h["error"] = "Please log in again!";
	}
	tmp.switchContent("login",_g);
};
client_Utils.getUserLevel = function() {
	var lev = js_Browser.getLocalStorage().getItem("level");
	if(lev == null || lev == "" || lev == "undefined") {
		if(!client_Utils.ping()) {
			return 0;
		}
		var tok = client_Utils.getToken();
		if(tok == null || tok == "" || tok == "undefined") {
			return 0;
		}
		var _headers = { };
		_headers[client_Constants.TOKEN_HEADER] = tok;
		var xhr = $.ajax(client_Constants.SERVER_DEST + "/authorize",{ headers : _headers, method : "GET", async : false});
		if(xhr.status < 100 || xhr.status >= 400) {
			client_Utils.logout();
		} else if(xhr.responseType == "json" && Object.prototype.hasOwnProperty.call(xhr.response,"level")) {
			js_Browser.getLocalStorage().setItem("level",xhr.response.level);
		}
		return 0;
	} else {
		return Std.parseInt(lev);
	}
};
var client_views_PriGroupWithState = function() {
	priori_view_container_PriGroup.call(this);
};
client_views_PriGroupWithState.__name__ = true;
client_views_PriGroupWithState.__super__ = priori_view_container_PriGroup;
client_views_PriGroupWithState.prototype = $extend(priori_view_container_PriGroup.prototype,{
	reset: function(data) {
	}
	,addChildHere: function(view) {
		var _g = 0;
		while(_g < view.length) {
			var v = view[_g];
			++_g;
			priori_view_container_PriGroup.prototype.addChild.call(this,v);
		}
		return this;
	}
	,__class__: client_views_PriGroupWithState
});
var client_views_AddItemForm = function() {
	this.itemID = 0;
	client_views_PriGroupWithState.call(this);
};
client_views_AddItemForm.__name__ = true;
client_views_AddItemForm.__super__ = client_views_PriGroupWithState;
client_views_AddItemForm.prototype = $extend(client_views_PriGroupWithState.prototype,{
	setup: function() {
		var _gthis = this;
		client_views_PriGroupWithState.prototype.setup.call(this);
		this.header = new priori_view_layout_PriHorizontalLayout();
		this.header.set_autoSizeContainer(true);
		this.header.set_autoSizeElements(false);
		this.backButton = new priori_bootstrap_PriBSImage();
		this.backButton.load("images/back.png");
		this.backButton.addEventListener("click",function(_) {
			client_views_ContentManager.getManager().switchContent("itemlist");
			return;
		});
		this.idLabel = new priori_bootstrap_PriBSLabel();
		this.idLabel.set_text("ID: <new item>");
		this.header.addChildList([this.backButton,this.idLabel]);
		this.saveButton = new priori_bootstrap_PriBSImage();
		this.saveButton.load("images/save.png");
		this.saveButton.addEventListener("click",function(_1) {
			_gthis.save();
			return;
		});
		this.layout = new priori_view_layout_PriVerticalLayout();
		this.layout.set_alignType(priori_view_layout_PriLayoutAlignType.CENTER);
		this.layout.set_autoSizeContainer(this.layout.set_autoSizeElements(false));
		this.layout.set_gap(8);
		this.nameLabel = new priori_bootstrap_PriBSLabel();
		this.prodLabel = new priori_bootstrap_PriBSLabel();
		this.quantityLabel = new priori_bootstrap_PriBSLabel();
		this.priceLabel = new priori_bootstrap_PriBSLabel();
		this.errorLabel = new priori_bootstrap_PriBSLabel();
		this.nameLabel.set_text("Name");
		this.prodLabel.set_text("Manufacturer");
		this.quantityLabel.set_text("Quantity:");
		this.priceLabel.set_text("Price:");
		this.errorLabel.set_text("");
		this.errorLabel.set_context(priori_bootstrap_type_PriBSContextualType.DANGER);
		this.errorLabel.set_visible(false);
		this.nameInput = new priori_bootstrap_PriBSFormInputText();
		this.prodInput = new priori_bootstrap_PriBSFormInputText();
		this.quantityInput = new priori_bootstrap_PriBSFormInputText();
		this.priceInput = new priori_bootstrap_PriBSFormInputText();
		this.quantityInput.set_fieldType("number");
		this.quantityInput.getJSElement().setAttribute("step","1");
		this.priceInput.set_fieldType("number");
		this.priceInput.getJSElement().setAttribute("step","0.01");
		this.addChild(this.layout);
		this.layout.addChildList([this.header,this.nameLabel,this.nameInput,this.prodLabel,this.prodInput,this.priceLabel,this.priceInput,this.quantityLabel,this.quantityInput,this.saveButton]);
		this.validate();
		client_Access.registerCallback(function(signal,data) {
			switch(signal._hx_index) {
			case 0:case 3:
				console.log("src/client/views/AddItemForm.hx:101:",Object.prototype.hasOwnProperty.call(data,"e"));
				var req = data.e;
				if(req.status >= client_Constants.RESPONSE_STATUS_OK && req.status < 300) {
					client_views_ContentManager.getManager().switchContent("itemlist");
				} else if(req.status == 401) {
					client_Utils.logout();
				} else if(req.status >= 400 || req.state() != "resolved" && req.state() != "nocontent" && req.state() != "success") {
					_gthis.errorLabel.set_visible(true);
					_gthis.errorLabel.set_text(data.data);
					_gthis.nameInput.set_disabled(false);
					_gthis.prodInput.set_disabled(false);
					_gthis.priceInput.set_disabled(false);
					_gthis.quantityInput.set_disabled(signal != client_Signal.Add);
				}
				break;
			default:
			}
			return;
		});
	}
	,paint: function() {
		client_views_PriGroupWithState.prototype.paint.call(this);
		this.layout.set_x(24);
		this.layout.set_y(24);
		this.layout.set_width(this.get_width() - 48);
		this.layout.set_height(this.get_height() - 48);
	}
	,reset: function(data) {
		this.errorLabel.set_visible(false);
		var tmp;
		var tmp1;
		var tmp2;
		if(data != null) {
			var key = client_Constants.RESET_FORM_DATA_ID;
			tmp2 = !(__map_reserved[key] != null ? data.existsReserved(key) : data.h.hasOwnProperty(key));
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			var key1 = client_Constants.RESET_FORM_DATA_ID;
			tmp1 = Std.parseInt(__map_reserved[key1] != null ? data.getReserved(key1) : data.h[key1]) == null;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			var key2 = client_Constants.RESET_FORM_DATA_ID;
			tmp = Std.parseInt(__map_reserved[key2] != null ? data.getReserved(key2) : data.h[key2]) <= 0;
		} else {
			tmp = true;
		}
		if(tmp) {
			this.idLabel.set_text("ID: <new item>");
			this.nameInput.set_value("");
			this.prodInput.set_value("");
			this.priceInput.set_value("1.00");
			this.quantityInput.set_value("1");
			this.quantityInput.set_disabled(false);
			this.itemID = 0;
		} else {
			var key3 = client_Constants.RESET_FORM_DATA_ID;
			var id = Std.parseInt(__map_reserved[key3] != null ? data.getReserved(key3) : data.h[key3]);
			this.idLabel.set_text("ID: " + id);
			this.itemID = id;
			var key4 = client_Constants.RESET_FORM_DATA_NAME;
			if(__map_reserved[key4] != null ? data.existsReserved(key4) : data.h.hasOwnProperty(key4)) {
				var key5 = client_Constants.RESET_FORM_DATA_NAME;
				this.nameInput.set_value(__map_reserved[key5] != null ? data.getReserved(key5) : data.h[key5]);
			} else {
				this.nameInput.set_value("");
			}
			var key6 = client_Constants.RESET_FORM_DATA_PROD;
			if(__map_reserved[key6] != null ? data.existsReserved(key6) : data.h.hasOwnProperty(key6)) {
				var key7 = client_Constants.RESET_FORM_DATA_PROD;
				this.prodInput.set_value(__map_reserved[key7] != null ? data.getReserved(key7) : data.h[key7]);
			} else {
				this.prodInput.set_value("");
			}
			var key8 = client_Constants.RESET_FORM_DATA_QUANTITY;
			if(__map_reserved[key8] != null ? data.existsReserved(key8) : data.h.hasOwnProperty(key8)) {
				var key9 = client_Constants.RESET_FORM_DATA_QUANTITY;
				this.quantityInput.set_value(__map_reserved[key9] != null ? data.getReserved(key9) : data.h[key9]);
			} else {
				this.quantityInput.set_value("1");
			}
			this.quantityInput.set_disabled(true);
			var key10 = client_Constants.RESET_FORM_DATA_PRICE;
			if(__map_reserved[key10] != null ? data.existsReserved(key10) : data.h.hasOwnProperty(key10)) {
				var key11 = client_Constants.RESET_FORM_DATA_PRICE;
				this.priceInput.set_value(__map_reserved[key11] != null ? data.getReserved(key11) : data.h[key11]);
			} else {
				this.priceInput.set_value("1.00");
			}
		}
	}
	,save: function() {
		var name = this.nameInput.get_value();
		var prod = this.prodInput.get_value();
		var price = parseFloat(this.priceInput.get_value());
		var quant = Std.parseInt(this.quantityInput.get_value());
		this.nameInput.set_disabled(true);
		this.prodInput.set_disabled(true);
		this.priceInput.set_disabled(true);
		this.quantityInput.set_disabled(true);
		this.errorLabel.set_visible(false);
		if(this.itemID <= 0) {
			client_Access.getAccessTarget().addProduct(client_Utils.getToken(),name,prod,price,quant);
		} else {
			client_Access.getAccessTarget().editProduct(client_Utils.getToken(),this.itemID,name,prod,price);
		}
	}
	,__class__: client_views_AddItemForm
});
var client_views_ContentManager = function() {
	priori_view_container_PriGroup.call(this);
	this.contents = new haxe_ds_StringMap();
};
client_views_ContentManager.__name__ = true;
client_views_ContentManager.getManager = function() {
	if(client_views_ContentManager.contentManager == null || client_views_ContentManager.contentManager.isKilled()) {
		client_views_ContentManager.contentManager = new client_views_ContentManager();
	}
	return client_views_ContentManager.contentManager;
};
client_views_ContentManager.__super__ = priori_view_container_PriGroup;
client_views_ContentManager.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
		priori_view_container_PriGroup.prototype.setup.call(this);
	}
	,addScene: function(name,scene) {
		var _this = this.contents;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,scene);
		} else {
			_this.h[name] = scene;
		}
		return this;
	}
	,switchContent: function(scene,data) {
		var _this = this.contents;
		if(__map_reserved[scene] != null ? _this.existsReserved(scene) : _this.h.hasOwnProperty(scene)) {
			if(this.current != null) {
				this.removeChild(this.current);
				this.current = null;
			}
			var _this1 = this.contents;
			this.current = __map_reserved[scene] != null ? _this1.getReserved(scene) : _this1.h[scene];
			this.addChild(this.current);
			this.current.reset(data);
			this.validate();
		}
	}
	,paint: function() {
		priori_view_container_PriGroup.prototype.paint.call(this);
		if(this.current != null) {
			this.current.set_width(this.get_width());
			this.current.set_height(this.get_height());
			this.current.set_x(this.get_x());
			this.current.set_y(this.get_y());
		}
	}
	,__class__: client_views_ContentManager
});
var client_views_ItemList = function() {
	client_views_PriGroupWithState.call(this);
};
client_views_ItemList.__name__ = true;
client_views_ItemList.__super__ = client_views_PriGroupWithState;
client_views_ItemList.prototype = $extend(client_views_PriGroupWithState.prototype,{
	setup: function() {
		client_views_PriGroupWithState.prototype.setup.call(this);
		this.errorLabel = new priori_bootstrap_PriBSLabel();
		this.errorLabel.set_text("");
		this.errorLabel.set_context(priori_bootstrap_type_PriBSContextualType.DANGER);
		this.errorLabel.set_visible(false);
		this.warningLabel = new priori_bootstrap_PriBSLabel();
		this.warningLabel.set_text("");
		this.warningLabel.set_visible(false);
		this.warningLabel.set_context(priori_bootstrap_type_PriBSContextualType.WARNING);
		this.toolbuttons = new client_views_Toolbuttons();
		this.refreshButton = new priori_bootstrap_PriBSFormButton();
		this.refreshButton.set_text("Refresh");
		this.refreshButton.addEventListener("click",$bind(this,this.refresh));
		this.list = new priori_view_grid_PriDataGrid();
		this.list.set_columns([new priori_view_grid_column_PriGridColumn("ID","item",null,null,priori_view_grid_column_PriGridColumnSizeType.FIXED,48,null,null,true),new priori_view_grid_column_PriGridColumn("Manufacturer","prod",null,null,priori_view_grid_column_PriGridColumnSizeType.FIT,null,null,null,false),new priori_view_grid_column_PriGridColumn("Product","name",null,null,priori_view_grid_column_PriGridColumnSizeType.FIT,null,null,null,false),new priori_view_grid_column_PriGridColumn("Price","price",null,null,priori_view_grid_column_PriGridColumnSizeType.FIXED,54,null,null,true),new priori_view_grid_column_PriGridColumn("Quantity","quantity",null,null,priori_view_grid_column_PriGridColumnSizeType.FIXED,48,null,null,true),new priori_view_grid_column_PriGridColumn("","actions",client_views_ItemListActionRenderer,null,priori_view_grid_column_PriGridColumnSizeType.FIXED,64,null,null,false)]);
		this.list.set_data([{ item : 100, prod : "htc", name : "polaris", price : 160.99, quantity : 32, actions : { item : 100, prod : "htc", name : "polaris", price : 160.99, quantity : 32, actions : ["edit"]}}]);
		this.addChild(this.list);
		this.addChild(this.toolbuttons);
		this.addChild(this.errorLabel);
		this.addChild(this.warningLabel);
		client_Access.registerCallback($bind(this,this.accessCallback));
		this.refresh();
		this.validate();
	}
	,showError: function(s) {
		var _gthis = this;
		this.errorLabel.set_text(s);
		this.errorLabel.set_visible(true);
		this.validate();
		window.clearTimeout(this.errorTimeout);
		this.errorTimeout = window.setTimeout(function() {
			_gthis.errorLabel.set_visible(false);
		},3500);
	}
	,showWarning: function(s) {
		this.warningLabel.set_text(s);
		this.warningLabel.set_visible(true);
		this.validate();
	}
	,accessCallback: function(signal,data) {
		switch(signal._hx_index) {
		case 1:
			if(Object.prototype.hasOwnProperty.call(data,"e") && (data.e.state() == "resolved" || data.e.state() == "success") && (data.e.status >= 200 && data.e.status < 300)) {
				this.onLoad(data);
				console.log("src/client/views/ItemList.hx:119:","Loaded!");
			} else {
				console.log("src/client/views/ItemList.hx:121:","Retrieve has statusCode != 200");
				var _statusCode = -1;
				var _state = "...";
				var _data = "";
				if(Object.prototype.hasOwnProperty.call(data,"e")) {
					_statusCode = data.e.status;
					_state = data.e.state();
				}
				if(Object.prototype.hasOwnProperty.call(data,"data") && data.data != null) {
					if(data.data.length > 100) {
						_data = data.data.substr(0,100);
					} else {
						_data = data.data;
					}
				}
				this.showError("Error (" + _statusCode + "/" + _state + "): " + _data);
			}
			break;
		case 0:case 2:case 3:case 4:
			this.refresh();
			break;
		}
	}
	,paint: function() {
		client_views_PriGroupWithState.prototype.paint.call(this);
		this.toolbuttons.set_x(0);
		this.toolbuttons.set_height(64);
		this.toolbuttons.set_width(this.get_width());
		this.toolbuttons.set_y(this.get_height() - this.toolbuttons.get_height());
		this.toolbuttons.validate();
		this.refreshButton.set_x(48);
		this.refreshButton.set_y(48);
		this.list.set_x(48);
		this.list.set_width(this.get_width() - 96);
		this.list.set_y(24);
		this.list.set_height(this.get_height() - this.list.get_y() - 24);
		this.errorLabel.set_centerX(this.get_width() / 2);
		this.errorLabel.set_y(48);
	}
	,refresh: function(e) {
		console.log("src/client/views/ItemList.hx:164:","Starting request");
		client_Access.getAccessTarget().retrieveItems(client_Utils.getToken());
	}
	,addActions: function(data) {
		var newData = [];
		var _g = 0;
		while(_g < data.length) {
			var d = data[_g];
			++_g;
			newData.push(d);
		}
		return newData;
	}
	,onLoad: function(e) {
		var ddata = js_Boot.__cast(JSON.parse(e.data) , Array);
		var newData = [];
		var _g = 0;
		while(_g < ddata.length) {
			var i = ddata[_g];
			++_g;
			var actions = { item : i.item, prod : i.prod, name : i.name, quantity : i.quantity, price : i.price, actions : ["edit"]};
			i["actions"] = actions;
			newData.push(i);
		}
		this.list.set_data(newData);
	}
	,itemAction: function(item,change) {
		if(window.navigator.onLine) {
			var t = client_Access.getAccessTarget();
		} else {
			var log = client_Log.getLog();
			log.logQuantity(new Date().getTime(),item,change);
			client_Log.saveLog(log);
		}
	}
	,reset: function(data) {
		client_views_PriGroupWithState.prototype.reset.call(this,data);
		this.warningLabel.set_visible(false);
		if(data != null && (__map_reserved["warn"] != null ? data.existsReserved("warn") : data.h.hasOwnProperty("warn"))) {
			this.showWarning(__map_reserved["warn"] != null ? data.getReserved("warn") : data.h["warn"]);
		}
	}
	,__class__: client_views_ItemList
});
var priori_view_grid_cell_PriGridCellRenderer = function() {
	priori_view_container_PriGroup.call(this);
	this.addEventListener("prievent_base_change",$bind(this,this.__onCellDataChange));
	this.addEventListener("click",$bind(this,this.__onTap));
	this.addEventListener("mouseenter",$bind(this,this.__onMouse));
	this.set_pointer(false);
	this.set_clipping(false);
};
priori_view_grid_cell_PriGridCellRenderer.__name__ = true;
priori_view_grid_cell_PriGridCellRenderer.__super__ = priori_view_container_PriGroup;
priori_view_grid_cell_PriGridCellRenderer.prototype = $extend(priori_view_container_PriGroup.prototype,{
	__onTap: function(e) {
		var event = new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.GRID_CLICK,false,true,this.get_data());
		event.colIndex = this.get_colIndex();
		event.rowIndex = this.get_rowIndex();
		this.dispatchEvent(event);
	}
	,__onMouse: function(e) {
		var event = new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.CELL_OVER,false,true,this.get_data());
		event.colIndex = this.get_colIndex();
		event.rowIndex = this.get_rowIndex();
		this.dispatchEvent(event);
	}
	,update: function() {
	}
	,__onCellDataChange: function(e) {
		this.__data = e.data.data;
		this.__column = e.data.column;
		this.__rowIndex = e.data.rowIndex;
		this.__colIndex = e.data.colIndex;
		this.invalidate();
		this.update();
	}
	,get_data: function() {
		return this.__data;
	}
	,get_rowIndex: function() {
		return this.__rowIndex;
	}
	,get_colIndex: function() {
		return this.__colIndex;
	}
	,get_dataField: function() {
		var result = "";
		if(this.__column != null && this.__column.dataField != null) {
			result = this.__column.dataField;
		}
		return result;
	}
	,get_value: function() {
		var result = null;
		if(this.__column == null) {
			return null;
		}
		if(this.__column.dataField == priori_view_grid_cell_PriGridCellRenderer.SPECIAL_COLUMN_INDEX) {
			result = this.get_rowIndex();
		} else if(this.__column.dataField == priori_view_grid_cell_PriGridCellRenderer.SPECIAL_ROW_LINE) {
			result = this.get_rowIndex() + 1;
		} else if(this.__data != null) {
			result = Reflect.getProperty(this.__data,this.__column.dataField);
		}
		return result;
	}
	,kill: function() {
	}
	,__class__: priori_view_grid_cell_PriGridCellRenderer
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{get_colIndex:"get_colIndex",get_rowIndex:"get_rowIndex",get_dataField:"get_dataField",get_value:"get_value",get_data:"get_data"})
});
var client_views_ItemListActionRenderer = function() {
	priori_view_grid_cell_PriGridCellRenderer.call(this);
};
client_views_ItemListActionRenderer.__name__ = true;
client_views_ItemListActionRenderer.__super__ = priori_view_grid_cell_PriGridCellRenderer;
client_views_ItemListActionRenderer.prototype = $extend(priori_view_grid_cell_PriGridCellRenderer.prototype,{
	setup: function() {
		priori_view_grid_cell_PriGridCellRenderer.prototype.setup.call(this);
		this.layout = new priori_view_layout_PriHorizontalLayout();
		this.layout.set_alignType(priori_view_layout_PriLayoutAlignType.CENTER);
		this.editButton = new priori_bootstrap_PriBSImage();
		this.editButton.load("images/edit.png");
		this.deleteButton = new priori_bootstrap_PriBSImage();
		this.deleteButton.load("images/delete.png");
		this.editButton.addEventListener("click",$bind(this,this.editEvent));
		this.deleteButton.addEventListener("click",$bind(this,this.deleteEvent));
		this.layout.addChildList([this.editButton,this.deleteButton]);
		this.addChild(this.layout);
		this.update();
		this.validate();
	}
	,update: function() {
		priori_view_grid_cell_PriGridCellRenderer.prototype.update.call(this);
		var val = this.get_value();
		if(val == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(val,"name")) {
			this.name = val.name;
		}
		if(Object.prototype.hasOwnProperty.call(val,"item")) {
			this.item = val.item;
		}
		if(Object.prototype.hasOwnProperty.call(val,"price")) {
			this.price = val.price;
		}
		if(Object.prototype.hasOwnProperty.call(val,"quantity")) {
			this.quantity = val.quantity;
		}
		if(Object.prototype.hasOwnProperty.call(val,"prod")) {
			this.prod = val.prod;
		}
		if(this.editButton == null || this.deleteButton == null) {
			return;
		}
		this.editButton.set_visible(false);
		this.deleteButton.set_visible(false);
		if(Object.prototype.hasOwnProperty.call(val,"actions")) {
			if(val.actions.indexOf(client_Constants.ACTION_DELETE) > -1) {
				this.deleteButton.set_visible(true);
			}
			if(val.actions.indexOf(client_Constants.ACTION_EDIT) > -1) {
				this.editButton.set_visible(true);
			}
		}
	}
	,paint: function() {
		priori_view_grid_cell_PriGridCellRenderer.prototype.paint.call(this);
		this.layout.set_x(this.layout.set_y(0));
		this.layout.set_width(this.get_width());
		this.layout.set_height(this.get_height());
	}
	,editEvent: function(e) {
		var tmp = client_views_ContentManager.getManager();
		var _g = new haxe_ds_StringMap();
		var value = this.name;
		var key = client_Constants.RESET_FORM_DATA_NAME;
		if(__map_reserved[key] != null) {
			_g.setReserved(key,value);
		} else {
			_g.h[key] = value;
		}
		var value1 = this.prod;
		var key1 = client_Constants.RESET_FORM_DATA_PROD;
		if(__map_reserved[key1] != null) {
			_g.setReserved(key1,value1);
		} else {
			_g.h[key1] = value1;
		}
		var value2 = "" + this.quantity;
		var key2 = client_Constants.RESET_FORM_DATA_QUANTITY;
		if(__map_reserved[key2] != null) {
			_g.setReserved(key2,value2);
		} else {
			_g.h[key2] = value2;
		}
		var value3 = "" + this.price;
		var key3 = client_Constants.RESET_FORM_DATA_PRICE;
		if(__map_reserved[key3] != null) {
			_g.setReserved(key3,value3);
		} else {
			_g.h[key3] = value3;
		}
		var value4 = "" + this.item;
		var key4 = client_Constants.RESET_FORM_DATA_ID;
		if(__map_reserved[key4] != null) {
			_g.setReserved(key4,value4);
		} else {
			_g.h[key4] = value4;
		}
		tmp.switchContent("additem",_g);
	}
	,deleteEvent: function(e) {
	}
	,__class__: client_views_ItemListActionRenderer
});
var client_views_ItemListActionRendererModel = function(name,prod,quantity,price,id,actions) {
	this.name = name;
	this.prod = prod;
	this.quantity = Std.parseInt(quantity);
	this.price = parseFloat(price);
	this.id = Std.parseInt(id);
	this.actions = actions;
};
client_views_ItemListActionRendererModel.__name__ = true;
client_views_ItemListActionRendererModel.prototype = {
	__class__: client_views_ItemListActionRendererModel
};
var client_views_LoginForm = function() {
	client_views_PriGroupWithState.call(this);
};
client_views_LoginForm.__name__ = true;
client_views_LoginForm.__super__ = client_views_PriGroupWithState;
client_views_LoginForm.prototype = $extend(client_views_PriGroupWithState.prototype,{
	setup: function() {
		client_views_PriGroupWithState.prototype.setup.call(this);
		this.error = new priori_bootstrap_PriBSLabel();
		this.error.set_visible(false);
		this.error.set_text("");
		this.error.set_context(priori_bootstrap_type_PriBSContextualType.DANGER);
		this.title = new priori_bootstrap_PriBSFormLabel();
		this.title.set_text("Login options");
		this.layout = new priori_view_layout_PriVerticalLayout();
		this.layout.set_autoSizeContainer(false);
		this.layout.set_autoSizeElements(false);
		this.githubButton = new priori_bootstrap_PriBSFormButton();
		this.githubButton.set_text("Login with GitHub");
		this.localButton = new priori_bootstrap_PriBSFormButton();
		this.localButton.set_text("Login locally");
		this.layout.addChild(this.error);
		this.layout.addChild(this.title);
		this.layout.addChild(this.githubButton);
		this.layout.addChild(this.localButton);
		this.addChild(this.layout);
		this.githubButton.addEventListener("click",function(_) {
			window.location.replace("https://myhost:8000/login/github");
			return;
		});
		this.localButton.addEventListener("click",function(_1) {
			window.location.replace("https://myhost:8000/login/local");
			return;
		});
		this.usernameLabel = new priori_bootstrap_PriBSFormLabel();
		this.usernameLabel.set_text("Username");
		this.passwordLabel = new priori_bootstrap_PriBSFormLabel();
		this.passwordLabel.set_text("Password");
		this.usernameInput = new priori_bootstrap_PriBSFormInputText();
		this.passwordInput = new priori_bootstrap_PriBSFormInputText();
		this.passwordInput.set_password(true);
		this.validate();
	}
	,paint: function() {
		var margin = 20;
		client_views_PriGroupWithState.prototype.paint.call(this);
		this.layout.set_x(this.layout.set_y(margin));
		this.layout.set_width(this.get_width() - margin * 2);
		this.layout.set_height(this.get_height() - margin * 2);
		this.usernameLabel.set_width(this.usernameInput.set_width(this.passwordLabel.set_width(this.passwordInput.set_width(this.get_width() * 0.9))));
		this.usernameLabel.set_centerX(this.usernameInput.set_centerX(this.passwordInput.set_centerX(this.passwordLabel.set_centerX(this.get_width() / 2))));
		this.usernameLabel.set_y(margin);
		this.usernameInput.set_y(this.usernameLabel.get_maxY() + margin);
		this.passwordLabel.set_y(this.usernameInput.get_maxY() + margin);
		this.passwordInput.set_y(this.passwordLabel.get_maxY() + margin);
	}
	,reset: function(data) {
		client_views_PriGroupWithState.prototype.reset.call(this,data);
		this.error.set_visible(false);
		if(__map_reserved["error"] != null ? data.existsReserved("error") : data.h.hasOwnProperty("error")) {
			this.error.set_visible(true);
			this.error.set_text(__map_reserved["error"] != null ? data.getReserved("error") : data.h["error"]);
		}
	}
	,__class__: client_views_LoginForm
});
var client_views_RegisterForm = function() {
	this.errorLabels = new haxe_ds_ObjectMap();
	this.inSpacing = 24;
	this.spacing = 32;
	this.margin = 48;
	client_views_PriGroupWithState.call(this);
};
client_views_RegisterForm.__name__ = true;
client_views_RegisterForm.__super__ = client_views_PriGroupWithState;
client_views_RegisterForm.prototype = $extend(client_views_PriGroupWithState.prototype,{
	setup: function() {
		client_views_PriGroupWithState.prototype.setup.call(this);
		this.usernameLabel = new priori_bootstrap_PriBSFormLabel();
		this.usernameLabel.set_text("Username");
		this.usernameInput = new priori_bootstrap_PriBSFormInputText();
		this.usernameInput.set_placeholder("Username");
		this.passwordLabel = new priori_bootstrap_PriBSFormLabel();
		this.passwordLabel.set_text("Password");
		this.passwordInput = new priori_bootstrap_PriBSFormInputText();
		this.passwordInput.set_password(true);
		this.passwordInput.set_placeholder("Password");
		this.passwordInput.addEventListener("prievent_base_change",$bind(this,this.passwordChanged));
		this.repeatLabel = new priori_bootstrap_PriBSFormLabel();
		this.repeatLabel.set_text("Repeat password");
		this.repeatInput = new priori_bootstrap_PriBSFormInputText();
		this.repeatInput.set_password(true);
		this.repeatInput.set_placeholder("Repeat");
		this.repeatInput.addEventListener("prievent_base_change",$bind(this,this.passwordChanged));
		this.emailLabel = new priori_bootstrap_PriBSFormLabel();
		this.emailLabel.set_text("E-mail");
		this.emailInput = new priori_bootstrap_PriBSFormInputText();
		this.emailInput.set_placeholder("E-mail");
		this.registerButton = new priori_bootstrap_PriBSFormButton();
		this.registerButton.set_text("Register");
		this.addChild(this.usernameLabel);
		this.addChild(this.usernameInput);
		this.addChild(this.passwordLabel);
		this.addChild(this.passwordInput);
		this.addChild(this.repeatLabel);
		this.addChild(this.repeatInput);
		this.addChild(this.emailLabel);
		this.addChild(this.emailInput);
		this.addChild(this.registerButton);
	}
	,paint: function() {
		client_views_PriGroupWithState.prototype.paint.call(this);
		this.passwordInput.set_x(this.passwordLabel.set_x(this.usernameInput.set_x(this.usernameLabel.set_x(this.repeatLabel.set_x(this.repeatInput.set_x(this.emailInput.set_x(this.emailLabel.set_x(this.margin))))))));
		this.passwordInput.set_width(this.usernameInput.set_width(this.repeatInput.set_width(this.emailInput.set_width(this.get_width() - this.margin * 2 - this.spacing * 2))));
		this.usernameLabel.set_width(this.get_width() / 2 - 2 * this.margin);
		this.usernameLabel.set_y(this.margin);
		this.usernameInput.set_y(this.usernameLabel.get_maxY() + this.inSpacing);
		this.passwordLabel.set_y(this.usernameInput.get_maxY() + this.spacing);
		this.passwordInput.set_y(this.passwordLabel.get_maxY() + this.inSpacing);
		this.repeatLabel.set_y(this.passwordInput.get_maxY() + this.spacing);
		this.repeatInput.set_y(this.repeatLabel.get_maxY() + this.inSpacing);
		this.emailLabel.set_y(this.repeatInput.get_maxY() + this.spacing);
		this.emailInput.set_y(this.emailLabel.get_maxY() + this.inSpacing);
		this.registerButton.set_y(this.emailInput.get_maxY() + this.spacing);
		this.registerButton.set_centerX(this.get_width() / 2);
		this.updateErrorLabelsPaint();
	}
	,updateErrorLabelsPaint: function() {
		var _g = new haxe_iterators_MapKeyValueIterator(this.errorLabels);
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var key = _g1.key;
			var value = _g1.value;
			value.set_centerY(key.get_centerY());
			value.set_x(this.margin);
			key.set_x(value.get_maxX() + this.spacing);
		}
	}
	,setError: function(p,text) {
		var e = new priori_bootstrap_PriBSLabel();
		e.set_x(this.margin);
		e.set_text(text);
		e.set_context(priori_bootstrap_type_PriBSContextualType.DANGER);
		e.set_centerY(p.get_centerY());
		p.set_x(e.get_maxX() + this.spacing);
		this.addChild(e);
		this.errorLabels.set(p,e);
	}
	,unsetError: function(p) {
		p.set_x(this.margin);
		if(this.errorLabels.h.__keys__[p.__id__] != null) {
			var e = this.errorLabels.h[p.__id__];
			if(e != null) {
				this.removeChild(e);
				e.set_visible(false);
			}
			this.errorLabels.remove(p);
		}
	}
	,passwordChanged: function(e) {
		if(this.passwordInput.get_value() != this.repeatInput.get_value()) {
			var border = new priori_style_border_PriBorderStyle();
			var rgb = "#EE1111";
			if(rgb.charAt(0) == "#") {
				rgb = "0x" + rgb.substring(1);
			}
			var colorInt = Std.parseInt(rgb);
			if(colorInt == null) {
				colorInt = 0;
			}
			var color = colorInt;
			if(color == null) {
				color = 0;
			}
			var this1 = color;
			border.setColor(this1).setType(priori_style_border_PriBorderType.SOLID).setWidth(2.0);
			this.repeatInput.set_border(this.passwordInput.set_border(border));
			this.setError(this.repeatLabel,"Password do not match!");
		} else {
			this.passwordInput.set_border(this.repeatInput.set_border(null));
			this.unsetError(this.repeatLabel);
		}
	}
	,__class__: client_views_RegisterForm
});
var client_views_Toolbuttons = function() {
	priori_view_container_PriGroup.call(this);
};
client_views_Toolbuttons.__name__ = true;
client_views_Toolbuttons.__super__ = priori_view_container_PriGroup;
client_views_Toolbuttons.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
		var _gthis = this;
		priori_view_container_PriGroup.prototype.setup.call(this);
		this.imageAdd = new priori_bootstrap_PriBSImage();
		this.imageAdd.set_imageStyle(priori_bootstrap_type_PriBSImageStyle.CIRCLE);
		this.imageAdd.load("images/add.png");
		this.imageRefresh = new priori_bootstrap_PriBSImage();
		this.imageRefresh.set_imageStyle(priori_bootstrap_type_PriBSImageStyle.CIRCLE);
		this.imageRefresh.load("images/refresh.png");
		this.imageAdd.addEventListener("click",function(_) {
			client_views_ContentManager.getManager().switchContent("additem");
			return;
		});
		this.imageRefresh.addEventListener("click",function(_1) {
			(js_Boot.__cast(_gthis.get_parent() , client_views_ItemList)).refresh();
			return;
		});
		this.addChild(this.imageAdd);
		this.addChild(this.imageRefresh);
	}
	,paint: function() {
		priori_view_container_PriGroup.prototype.paint.call(this);
		this.imageAdd.set_y(this.imageRefresh.set_y(0));
		this.imageAdd.set_width(this.imageRefresh.set_width(this.get_height()));
		this.imageAdd.set_imageScaleY(this.imageAdd.get_imageScaleX());
		this.imageRefresh.set_imageScaleY(this.imageRefresh.get_imageScaleX());
		this.imageRefresh.set_x(this.get_width() - this.imageRefresh.get_width() - 12);
		this.imageAdd.set_x(this.imageRefresh.get_x() - 12 - this.imageAdd.get_width());
	}
	,__class__: client_views_Toolbuttons
});
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = $global.$haxeUID++);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_iterators_MapKeyValueIterator = function(map) {
	this.map = map;
	this.keys = map.keys();
};
haxe_iterators_MapKeyValueIterator.__name__ = true;
haxe_iterators_MapKeyValueIterator.prototype = {
	hasNext: function() {
		return this.keys.hasNext();
	}
	,next: function() {
		var key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
	,__class__: haxe_iterators_MapKeyValueIterator
};
var helper_browser_BrowserEventEngine = function() {
	this.registeredEvent = [];
};
helper_browser_BrowserEventEngine.__name__ = true;
helper_browser_BrowserEventEngine.prototype = {
	onAddedToApp: function(e) {
		this.addAllActions();
		this.display.addEventListener("prievent_base_removedFromApp",$bind(this,this.onRemovedFromApp));
		this.display.removeEventListener("prievent_base_addedToApp",$bind(this,this.onAddedToApp));
	}
	,onRemovedFromApp: function(e) {
		this.removeAllActions();
		this.display.removeEventListener("prievent_base_removedFromApp",$bind(this,this.onRemovedFromApp));
		this.display.addEventListener("prievent_base_addedToApp",$bind(this,this.onAddedToApp));
	}
	,removeEvent: function(event) {
		if(helper_browser_BrowserEventEngine.SPECIAL_EVENT_LIST.indexOf(event) <= -1) {
			return;
		}
		HxOverrides.remove(this.registeredEvent,event);
		this.dettachFromElement(event);
	}
	,registerEvent: function(event) {
		if(helper_browser_BrowserEventEngine.SPECIAL_EVENT_LIST.indexOf(event) <= -1) {
			return;
		}
		if(this.registeredEvent.indexOf(event) == -1) {
			this.registeredEvent.push(event);
			if(window.document.documentElement.contains(this.jsel)) {
				this.attachToElement(event);
			}
		}
	}
	,removeAllActions: function() {
		var _g = 0;
		var _g1 = this.registeredEvent.length;
		while(_g < _g1) {
			var i = _g++;
			this.dettachFromElement(this.registeredEvent[i]);
		}
	}
	,addAllActions: function() {
		var _g = 0;
		var _g1 = this.registeredEvent.length;
		while(_g < _g1) {
			var i = _g++;
			this.attachToElement(this.registeredEvent[i]);
		}
	}
	,isOnDom: function() {
		return window.document.documentElement.contains(this.jsel);
	}
	,isSpecial: function(event) {
		return helper_browser_BrowserEventEngine.SPECIAL_EVENT_LIST.indexOf(event) > -1;
	}
	,attachToElement: function(event) {
		switch(event) {
		case "click":
			this.jsel.onclick = $bind(this,this.on_mouse_click);
			break;
		case "focusin":
			this.jqel.on("focusin",null,$bind(this,this.on_focus_in));
			break;
		case "focusout":
			this.jqel.on("focusout",null,$bind(this,this.on_focus_out));
			break;
		case "keydown":
			this.jqel.on("keydown",null,$bind(this,this.on_keyboard_down));
			break;
		case "keyup":
			this.jqel.on("keyup",null,$bind(this,this.on_keyboard_up));
			break;
		case "mousedown":
			this.jsel.onmousedown = $bind(this,this.on_mouse_down);
			break;
		case "mouseenter":
			this.jsel.onmouseenter = $bind(this,this.on_mouse_enter);
			break;
		case "mouseleave":
			this.jsel.onmouseleave = $bind(this,this.on_mouse_leave);
			break;
		case "mousemove":
			this.jsel.onmousemove = $bind(this,this.on_mouse_move);
			break;
		case "mouseup":
			this.jsel.onmouseup = $bind(this,this.on_mouse_up);
			break;
		case "prievent_base_scroll":
			this.jsel.onscroll = $bind(this,this.on_scroll);
			break;
		}
	}
	,dettachFromElement: function(event) {
		switch(event) {
		case "click":
			this.jsel.onclick = null;
			break;
		case "focusin":
			this.jqel.off("focusin",null,$bind(this,this.on_focus_in));
			break;
		case "focusout":
			this.jqel.off("focusout",null,$bind(this,this.on_focus_out));
			break;
		case "keydown":
			this.jqel.off("keydown",null,$bind(this,this.on_keyboard_down));
			break;
		case "keyup":
			this.jqel.off("keyup",null,$bind(this,this.on_keyboard_up));
			break;
		case "mousedown":
			this.jsel.onmousedown = null;
			break;
		case "mouseenter":
			this.jsel.onmouseenter = null;
			break;
		case "mouseleave":
			this.jsel.onmouseleave = null;
			break;
		case "mousemove":
			this.jsel.onmousemove = null;
			break;
		case "mouseup":
			this.jsel.onmouseup = null;
			break;
		case "prievent_base_scroll":
			this.jsel.onscroll = null;
			break;
		}
	}
	,on_scroll: function(e) {
		e.stopPropagation();
		this.display.dispatchEvent(new priori_event_PriEvent("prievent_base_scroll"));
	}
	,on_focus_in: function(e) {
		if(!this.display.get_visible() || this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriFocusEvent("focusin");
		this.display.dispatchEvent(pe);
	}
	,on_focus_out: function(e) {
		if(!this.display.get_visible() || this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriFocusEvent("focusout");
		this.display.dispatchEvent(pe);
	}
	,on_keyboard_up: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriKeyboardEvent("keyup");
		pe.keycode = e.which;
		pe.altKey = e.altKey;
		pe.ctrlKey = e.ctrlKey || e.metaKey;
		pe.shiftKey = e.shiftKey;
		this.display.dispatchEvent(pe);
	}
	,on_keyboard_down: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriKeyboardEvent("keydown");
		pe.keycode = e.which;
		pe.altKey = e.altKey;
		pe.ctrlKey = e.ctrlKey || e.metaKey;
		pe.shiftKey = e.shiftKey;
		this.display.dispatchEvent(pe);
	}
	,on_mouse_down: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriTapEvent("mousedown");
		this.display.dispatchEvent(pe);
	}
	,on_mouse_up: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriTapEvent("mouseup");
		this.display.dispatchEvent(pe);
	}
	,on_mouse_click: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriTapEvent("click");
		this.display.dispatchEvent(pe);
	}
	,on_mouse_enter: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriMouseEvent("mouseenter");
		this.display.dispatchEvent(pe);
	}
	,on_mouse_leave: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriMouseEvent("mouseleave");
		this.display.dispatchEvent(pe);
	}
	,on_mouse_move: function(e) {
		if(this.display.get_disabled()) {
			return;
		}
		var pe = new priori_event_PriMouseEvent("mousemove");
		this.display.dispatchEvent(pe);
	}
	,kill: function() {
		this.removeAllActions();
		this.registeredEvent = [];
		this.display.removeEventListener("prievent_base_removedFromApp",$bind(this,this.onRemovedFromApp));
		this.display.removeEventListener("prievent_base_addedToApp",$bind(this,this.onAddedToApp));
	}
	,__class__: helper_browser_BrowserEventEngine
};
var helper_browser_DomHelper = function() { };
helper_browser_DomHelper.__name__ = true;
helper_browser_DomHelper.disableAll = function(el) {
	el.setAttribute("disabled","disabled");
	var _g = 0;
	var _g1 = el.children.length;
	while(_g < _g1) {
		var i = _g++;
		helper_browser_DomHelper.disableAll(el.children.item(i));
	}
};
helper_browser_DomHelper.enableAllUpPrioriDisabled = function(el) {
	if(!el.hasAttribute("priori-disabled")) {
		el.removeAttribute("disabled");
		var _g = 0;
		var _g1 = el.children.length;
		while(_g < _g1) {
			var i = _g++;
			helper_browser_DomHelper.enableAllUpPrioriDisabled(el.children.item(i));
		}
	}
};
helper_browser_DomHelper.hasChild = function(el,seekChild) {
	if(el == seekChild) {
		return true;
	} else {
		var _g = 0;
		var _g1 = el.children.length;
		while(_g < _g1) {
			var i = _g++;
			if(helper_browser_DomHelper.hasChild(el.children.item(i),seekChild)) {
				return true;
			}
		}
	}
	return false;
};
helper_browser_DomHelper.getBoundingClientRect = function(el) {
	try {
		var domRect = el.getBoundingClientRect();
		return new priori_geom_PriGeomBox(domRect.x,domRect.y,domRect.width,domRect.height);
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return new priori_geom_PriGeomBox();
	}
};
helper_browser_DomHelper.borderUpdate = function(borderElement,displayHelper) {
	if(borderElement != null && displayHelper.jselement != null) {
		borderElement.style.borderRadius = displayHelper.jselement.style.borderRadius;
		borderElement.style.zIndex = displayHelper.jselement.style.zIndex;
	}
};
helper_browser_DomHelper.apply2dTransformation = function(el,sx,sy,rot,anchorX,anchorY) {
	anchorX *= 100;
	anchorY *= 100;
	var valOrigin = "";
	var valMatrix = "";
	if((sx != 1 || sy != 1) && rot == 0) {
		valOrigin = "" + anchorX + "% " + anchorY + "%";
		valMatrix = "matrix(" + sx + ", 0, 0, " + sy + ", 0, 0)";
	} else if(sx != 1 || sy != 1 || rot != 0) {
		var angle = rot * 0.017453292519943295;
		var aSin = Math.sin(angle);
		var aCos = Math.cos(angle);
		var m1 = [[aCos,-aSin,0],[aSin,aCos,0],[0,0,1]];
		var m2_2;
		var m2_1;
		var m2_0 = [sx,0,0];
		m2_1 = [0,sy,0];
		m2_2 = [0,0,1];
		var calc = function(row,col) {
			return m1[row][0] * m2_0[col] + m1[row][1] * m2_1[col] + m1[row][2] * m2_2[col];
		};
		valOrigin = "" + anchorX + "% " + anchorY + "%";
		valMatrix = "matrix(" + calc(0,0) + ", " + calc(1,0) + ", " + calc(0,1) + ", " + calc(1,1) + ", " + calc(0,2) + ", " + calc(1,2) + ")";
	}
	el.style.transformOrigin = valOrigin;
	el.style.transform = valMatrix;
	var browser = priori_system_PriDevice.browser();
	if(browser == priori_system_PriDeviceBrowser.CHROME || browser == priori_system_PriDeviceBrowser.WEBKIT) {
		el.style.setProperty("-webkit-transform-origin",valOrigin);
		el.style.setProperty("-webkit-transform",valMatrix);
	} else if(browser == priori_system_PriDeviceBrowser.MSIE) {
		el.style.setProperty("-ms-transform-origin",valOrigin);
		el.style.setProperty("-ms-transform",valMatrix);
	}
};
var helper_browser_StyleHelper = function() { };
helper_browser_StyleHelper.__name__ = true;
helper_browser_StyleHelper.applyFontStyle = function(element,fontStyle) {
	helper_browser_StyleHelper.runApplyFontStyle(element,fontStyle.getFontStyleObject());
};
helper_browser_StyleHelper.applyCleanFontStyle = function(element) {
	helper_browser_StyleHelper.runApplyFontStyle(element,priori_style_font_PriFontStyle.getFontStyleObjectBase());
};
helper_browser_StyleHelper.runApplyFontStyle = function(element,values) {
	element.style.fontFamily = values.fontFamily;
	element.style.fontWeight = values.fontWeight;
	element.style.fontVariant = values.fontVariant;
	element.style.fontStyle = values.fontStyle;
	element.style.textAlign = values.textAlign;
	element.style.color = values.color;
	element.style.textDecoration = values.textDecoration;
};
var helper_display_DisplayHelperIgnition = function() { };
helper_display_DisplayHelperIgnition.__name__ = true;
helper_display_DisplayHelperIgnition.getDisplayTextHelper = function() {
	return { text : "", fontSize : 14, autoSize : true, multiLine : false, selectable : false, ellipsis : true, editable : false};
};
helper_display_DisplayHelperIgnition.getDisplayHerlper = function() {
	return { bgColor : null, x : 0, y : 0, width : 100, height : 100, clipping : true, depth : 1000, pointer : false, focusable : false, dragdata : null, anchorX : 0.5, anchorY : 0.5, rotation : 0, scaleX : 1, scaleY : 1, alpha : 1, disabled : false, element : null, elementBorder : null, jselement : null, parent : null, eventHelper : new helper_browser_BrowserEventEngine()};
};
var helper_pool_PoolGridCell = function() {
	this.poolAvailable = new helper_pool_PoolMap();
	this.poolUsed = new helper_pool_PoolMap();
};
helper_pool_PoolGridCell.__name__ = true;
helper_pool_PoolGridCell.prototype = {
	createCell: function(cellClass,cellParams) {
		var cell = null;
		if(cellParams == null || cellParams.length == 0) {
			cell = this.poolAvailable.get(cellClass);
			this.poolUsed.add(cellClass,cell);
		}
		if(cell == null) {
			cell = Type.createInstance(cellClass,cellParams == null ? [] : cellParams);
			if(cellParams == null || cellParams.length == 0) {
				this.poolUsed.add(cellClass,cell);
			}
		}
		return cell;
	}
	,returnCell: function(cell) {
		var cellClass = this.poolUsed.getKeyOff(cell);
		if(cellClass != null) {
			this.poolUsed.remove(cellClass,cell);
			this.poolAvailable.add(cellClass,cell);
		} else {
			cell.kill();
		}
	}
	,__class__: helper_pool_PoolGridCell
};
var helper_pool_PoolGridHead = function() {
	this.poolAvailable = new helper_pool_PoolMap();
	this.poolUsed = new helper_pool_PoolMap();
};
helper_pool_PoolGridHead.__name__ = true;
helper_pool_PoolGridHead.prototype = {
	createCell: function(cellClass,cellParams) {
		var cell = null;
		if(cellParams == null || cellParams.length == 0) {
			cell = this.poolAvailable.get(cellClass);
			this.poolUsed.add(cellClass,cell);
		}
		if(cell == null) {
			cell = Type.createInstance(cellClass,cellParams == null ? [] : cellParams);
			if(cellParams == null || cellParams.length == 0) {
				this.poolUsed.add(cellClass,cell);
			}
		}
		return cell;
	}
	,returnCell: function(cell) {
		var cellClass = this.poolUsed.getKeyOff(cell);
		if(cellClass != null) {
			this.poolUsed.remove(cellClass,cell);
			this.poolAvailable.add(cellClass,cell);
		} else {
			cell.kill();
		}
	}
	,__class__: helper_pool_PoolGridHead
};
var helper_pool_PoolMap = function() {
	this.values = [];
	this.keys = [];
};
helper_pool_PoolMap.__name__ = true;
helper_pool_PoolMap.prototype = {
	getKeyIndex: function(key) {
		return this.keys.indexOf(key);
	}
	,getKeyOff: function(value) {
		var _g = 0;
		var _g1 = this.values.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.values[i].indexOf(value) > -1) {
				return this.keys[i];
			}
		}
		return null;
	}
	,remove: function(key,value) {
		var index = this.keys.indexOf(key);
		if(index == -1) {
			return;
		}
		HxOverrides.remove(this.values[index],value);
	}
	,exists: function(value) {
		var _g = 0;
		var _g1 = this.values.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.values[i].indexOf(value) > -1) {
				return true;
			}
		}
		return false;
	}
	,add: function(key,value) {
		if(key == null || value == null) {
			return;
		}
		var index = this.keys.indexOf(key);
		if(index == -1) {
			this.keys.push(key);
			this.values.push([value]);
		} else if(this.values[index].indexOf(value) == -1) {
			this.values[index].push(value);
		}
	}
	,get: function(key) {
		var index = this.keys.indexOf(key);
		if(index == -1) {
			return null;
		}
		var itens = this.values[index];
		if(itens.length == 0) {
			return null;
		}
		return itens.shift();
	}
	,__class__: helper_pool_PoolMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		if(s.length == 0) {
			var key = "_hx_" + Math.random();
			s.setItem(key,key);
			s.removeItem(key);
		}
		return s;
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
var js_jquery_JqEltsIterator = function(j) {
	this.i = 0;
	this.j = j;
};
js_jquery_JqEltsIterator.__name__ = true;
js_jquery_JqEltsIterator.prototype = {
	hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return $(this.j[this.i++]);
	}
	,__class__: js_jquery_JqEltsIterator
};
var js_jquery_JqIterator = function(j) {
	this.i = 0;
	this.j = j;
};
js_jquery_JqIterator.__name__ = true;
js_jquery_JqIterator.prototype = {
	hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return this.j[this.i++];
	}
	,__class__: js_jquery_JqIterator
};
var priori_assets_Asset = function(id,url) {
	priori_event_PriEventDispatcher.call(this);
	this.id = id;
	this.url = url;
};
priori_assets_Asset.__name__ = true;
priori_assets_Asset.__super__ = priori_event_PriEventDispatcher;
priori_assets_Asset.prototype = $extend(priori_event_PriEventDispatcher.prototype,{
	load: function() {
	}
	,getElement: function() {
		return $();
	}
	,__class__: priori_assets_Asset
});
var priori_assets_AssetImage = function(id,url) {
	this.imageHeight = 0;
	this.imageWidth = 0;
	this._isLoaded = false;
	this._isLoading = false;
	priori_assets_Asset.call(this,id,url);
};
priori_assets_AssetImage.__name__ = true;
priori_assets_AssetImage.__super__ = priori_assets_Asset;
priori_assets_AssetImage.prototype = $extend(priori_assets_Asset.prototype,{
	load: function() {
		if(this._isLoaded == false && this._isLoading == false) {
			this._isLoading = true;
			this._element = $("<img>",{ src : this.url});
			this._element.bind("load",{ },$bind(this,this.onImageLoad));
			this._element.bind("error",{ },$bind(this,this.onImageError));
		} else if(this._isLoaded) {
			this.dispatchEvent(new priori_event_PriEvent("prievent_base_complete"));
		}
	}
	,getElement: function() {
		if(this._isLoaded == false) {
			throw new js__$Boot_HaxeError("Asset not loaded");
		}
		return this._element.clone();
	}
	,onImageError: function(e) {
		this._isLoading = false;
		this._isLoaded = false;
		this._element.unbind();
		this._element = null;
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_error"));
	}
	,onImageLoad: function(e) {
		this._isLoading = false;
		this._isLoaded = true;
		this._element.unbind();
		this._element.css("display","none");
		var body = $("body");
		body.append(this._element);
		this.imageWidth = this._element.width() | 0;
		this.imageHeight = this._element.height() | 0;
		this._element.remove();
		this._element.css("display","");
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_complete"));
	}
	,__class__: priori_assets_AssetImage
});
var priori_assets_AssetManager = function() {
	this._totalErrors = 0;
	this.maxError = 10;
	this.loadedList = [];
	this.queueList = [];
	priori_event_PriEventDispatcher.call(this);
	if(priori_assets_AssetManager._g != null) {
		throw new js__$Boot_HaxeError("Use static g()");
	}
	this._isLoading = false;
	this._isLoaded = false;
};
priori_assets_AssetManager.__name__ = true;
priori_assets_AssetManager.g = function() {
	if(priori_assets_AssetManager._g == null) {
		priori_assets_AssetManager._g = new priori_assets_AssetManager();
	}
	return priori_assets_AssetManager._g;
};
priori_assets_AssetManager.__super__ = priori_event_PriEventDispatcher;
priori_assets_AssetManager.prototype = $extend(priori_event_PriEventDispatcher.prototype,{
	getAsset: function(id) {
		var i = 0;
		var n = this.loadedList.length;
		var result = null;
		while(i < n) {
			if(this.loadedList[i].id == id) {
				result = this.loadedList[i];
			}
			++i;
		}
		return result;
	}
	,addToQueue: function(asset) {
		if(this.queueList.indexOf(asset) == -1 && this.loadedList.indexOf(asset) == -1) {
			asset.addEventListener("prievent_base_complete",$bind(this,this.onAssetComplete));
			asset.addEventListener("prievent_base_error",$bind(this,this.onAssetError));
			this.queueList.push(asset);
		}
	}
	,load: function() {
		if(this._isLoaded == false && this._isLoading == false) {
			this._totalErrors = 0;
			this.tryLoadNextAsset();
		}
	}
	,tryLoadNextAsset: function() {
		if(this.queueList.length == 0) {
			this._isLoading = false;
			this._isLoaded = true;
			this.dispatchEvent(new priori_assets_AssetManagerEvent(priori_assets_AssetManagerEvent.ASSET_COMPLETE,this.getPercentCompleted()));
		} else {
			this.queueList[0].load();
		}
	}
	,getPercentCompleted: function() {
		var total = this.queueList.length + this.loadedList.length;
		var loaded = this.loadedList.length;
		var percent;
		if(total == 0) {
			percent = 1;
		} else {
			percent = loaded / total;
		}
		return percent;
	}
	,onAssetComplete: function(e) {
		var asset = js_Boot.__cast(e.currentTarget , priori_assets_Asset);
		HxOverrides.remove(this.queueList,asset);
		this.loadedList.push(asset);
		asset.removeEventListener("prievent_base_complete",$bind(this,this.onAssetComplete));
		asset.removeEventListener("prievent_base_error",$bind(this,this.onAssetError));
		this.dispatchEvent(new priori_assets_AssetManagerEvent(priori_assets_AssetManagerEvent.ASSET_PROGRESS,this.getPercentCompleted()));
		this.tryLoadNextAsset();
	}
	,onAssetError: function(e) {
		var asset = js_Boot.__cast(e.currentTarget , priori_assets_Asset);
		this._totalErrors++;
		if(this._totalErrors < this.maxError) {
			HxOverrides.remove(this.queueList,asset);
			this.queueList.push(asset);
			this.tryLoadNextAsset();
		} else {
			this._isLoaded = false;
			this._isLoading = false;
			this.dispatchEvent(new priori_assets_AssetManagerEvent(priori_assets_AssetManagerEvent.ASSET_ERROR,this.getPercentCompleted()));
		}
	}
	,__class__: priori_assets_AssetManager
});
var priori_event_PriEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	if(bubble == null) {
		bubble = false;
	}
	this.type = type;
	this.propagate = propagate;
	this.bubble = bubble;
	this.data = data;
};
priori_event_PriEvent.__name__ = true;
priori_event_PriEvent.prototype = {
	stopBubble: function() {
		this.bubble = false;
	}
	,stopPropagation: function() {
		this.propagate = false;
	}
	,clone: function() {
		var clone = new priori_event_PriEvent(this.type,this.propagate,this.bubble,this.data);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		return clone;
	}
	,__class__: priori_event_PriEvent
};
var priori_assets_AssetManagerEvent = function(type,percentLoaded) {
	priori_event_PriEvent.call(this,type);
	this.percentLoaded = percentLoaded;
};
priori_assets_AssetManagerEvent.__name__ = true;
priori_assets_AssetManagerEvent.__super__ = priori_event_PriEvent;
priori_assets_AssetManagerEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_assets_AssetManagerEvent(this.type,this.percentLoaded);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = null;
		return clone;
	}
	,__class__: priori_assets_AssetManagerEvent
});
var priori_view_component_PriExtendable = function() {
	priori_view_PriDisplay.call(this);
	this.createBaseElement();
	this.set_width(null);
	this.set_height(null);
	this.addEventListener("prievent_base_addedToApp",$bind(this,this.__appAdd));
};
priori_view_component_PriExtendable.__name__ = true;
priori_view_component_PriExtendable.__super__ = priori_view_PriDisplay;
priori_view_component_PriExtendable.prototype = $extend(priori_view_PriDisplay.prototype,{
	onAddedToApp: function() {
	}
	,onRemovedFromApp: function() {
	}
	,__appAdd: function(e) {
		this.removeEventListener("prievent_base_addedToApp",$bind(this,this.__appAdd));
		this.addEventListener("prievent_base_removedFromApp",$bind(this,this.__appRemove));
		this.onAddedToApp();
	}
	,__appRemove: function(e) {
		this.onRemovedFromApp();
		this.addEventListener("prievent_base_addedToApp",$bind(this,this.__appAdd));
		this.removeEventListener("prievent_base_removedFromApp",$bind(this,this.__appRemove));
	}
	,set_width: function(value) {
		if(this._baseElement != null) {
			if(value == null) {
				this._baseElement.css("width","");
			} else {
				this._baseElement.css("width","100%");
			}
		}
		priori_view_PriDisplay.prototype.set_width.call(this,value);
		return value;
	}
	,set_height: function(value) {
		if(this._baseElement != null) {
			if(value == null) {
				this._baseElement.css("height","");
			} else {
				this._baseElement.css("height","100%");
			}
		}
		priori_view_PriDisplay.prototype.set_height.call(this,value);
		return value;
	}
	,createBaseElement: function() {
		this._baseElement = $(this.getComponentCode());
		this.getElement().append(this._baseElement);
	}
	,getComponentCode: function() {
		return "<div></div>";
	}
	,kill: function() {
		this.getElement().off();
		priori_view_PriDisplay.prototype.kill.call(this);
	}
	,__class__: priori_view_component_PriExtendable
});
var priori_view_form_PriFormElementBase = function() {
	this.__fontSize = 14;
	priori_view_component_PriExtendable.call(this);
};
priori_view_form_PriFormElementBase.__name__ = true;
priori_view_form_PriFormElementBase.__super__ = priori_view_component_PriExtendable;
priori_view_form_PriFormElementBase.prototype = $extend(priori_view_component_PriExtendable.prototype,{
	get_fontSize: function() {
		return this.__fontSize;
	}
	,set_fontSize: function(value) {
		if(this.__fontSize != value) {
			if(value == null) {
				this.__fontSize = 14;
				this.dh.jselement.style.fontSize = "${INITIAL_FONT_SIZE}px";
			} else {
				this.__fontSize = value;
				this.dh.jselement.style.fontSize = (value | 0) + "px";
			}
		}
		return value;
	}
	,set_fontStyle: function(value) {
		this.fontStyle = value;
		if(value == null) {
			helper_browser_StyleHelper.applyCleanFontStyle(this.dh.jselement);
		} else {
			helper_browser_StyleHelper.applyFontStyle(this.dh.jselement,value);
		}
		return value;
	}
	,onAddedToApp: function() {
		priori_view_component_PriExtendable.prototype.onAddedToApp.call(this);
		if(this.hasEvent("prievent_base_pressenter")) {
			this._baseElement.off("keydown",null,$bind(this,this._onPressEnter));
			this._baseElement.on("keydown",null,$bind(this,this._onPressEnter));
		}
	}
	,onRemovedFromApp: function() {
		priori_view_component_PriExtendable.prototype.onRemovedFromApp.call(this);
		this._baseElement.off("keydown",null,$bind(this,this._onPressEnter));
	}
	,_onPressEnter: function(event) {
		if(event.which == 13) {
			this.dispatchEvent(new priori_event_PriEvent("prievent_base_pressenter"));
		}
	}
	,addEventListener: function(event,listener) {
		priori_view_component_PriExtendable.prototype.addEventListener.call(this,event,listener);
		if(event == "prievent_base_pressenter") {
			this._baseElement.off("keydown",null,$bind(this,this._onPressEnter));
			this._baseElement.on("keydown",null,$bind(this,this._onPressEnter));
		}
	}
	,suspendDisabled: function() {
		this.getElement().removeAttr("disabled");
		this.getElement().find("*").removeAttr("disabled");
	}
	,reactivateDisable: function() {
		this.getElement().attr("disabled","disabled");
		this.getElement().find("*").attr("disabled","disabled");
	}
	,applyIdToFormElement: function() {
		this._fieldId = "field_" + this.getRandomId(4);
		this._baseElement.attr("id",this.get_fieldId());
	}
	,createBaseElement: function() {
		priori_view_component_PriExtendable.prototype.createBaseElement.call(this);
		this.applyIdToFormElement();
	}
	,setFocus: function() {
		var el = window.document.getElementById(this.get_fieldId());
		if(el != null) {
			el.focus();
		}
	}
	,removeFocus: function() {
		var el = window.document.getElementById(this.get_fieldId());
		if(el != null) {
			el.blur();
		}
	}
	,get_fieldId: function() {
		return this._fieldId;
	}
	,__class__: priori_view_form_PriFormElementBase
	,__properties__: $extend(priori_view_component_PriExtendable.prototype.__properties__,{set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",get_fieldId:"get_fieldId",set_fontStyle:"set_fontStyle"})
});
var priori_view_form_PriFormButton = function() {
	priori_view_form_PriFormElementBase.call(this);
	this.set_text("Button");
	this.dh.jselement.style.textAlign = "center";
};
priori_view_form_PriFormButton.__name__ = true;
priori_view_form_PriFormButton.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormButton.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	set_pointer: function(value) {
		var result = priori_view_form_PriFormElementBase.prototype.set_pointer.call(this,value);
		if(value == true) {
			this._baseElement.css("cursor","pointer");
		} else {
			this._baseElement.css("cursor","");
		}
		return value;
	}
	,getComponentCode: function() {
		return "<button type=\"button\"></button>";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.text(value);
		return value;
	}
	,__class__: priori_view_form_PriFormButton
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_text:"set_text"})
});
var priori_bootstrap_PriBSFormButton = function() {
	priori_view_form_PriFormButton.call(this);
	this.set_size(priori_bootstrap_type_PriBSSize.NORMAL);
	this.set_context(priori_bootstrap_type_PriBSContextualType.DEFAULT);
	this.set_badge("");
};
priori_bootstrap_PriBSFormButton.__name__ = true;
priori_bootstrap_PriBSFormButton.__super__ = priori_view_form_PriFormButton;
priori_bootstrap_PriBSFormButton.prototype = $extend(priori_view_form_PriFormButton.prototype,{
	getComponentCode: function() {
		return "\r\n           <button type=\"button\" class=\"btn\">\r\n                <span class=\"bs_button_label\"></span>\r\n                <span class=\"badge\">10</span>\r\n            </button>\r\n        ";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.find(".bs_button_label").text(value);
		return value;
	}
	,set_badge: function(value) {
		this.badge = value;
		this._baseElement.find(".badge").text(value);
		return value;
	}
	,set_context: function(value) {
		this._baseElement.removeClass("btn-danger btn-default btn-info btn-link btn-primary btn-success btn-warning");
		if(value == priori_bootstrap_type_PriBSContextualType.DANGER) {
			this._baseElement.addClass("btn-danger");
		} else if(value == priori_bootstrap_type_PriBSContextualType.DEFAULT) {
			this._baseElement.addClass("btn-default");
		} else if(value == priori_bootstrap_type_PriBSContextualType.INFO) {
			this._baseElement.addClass("btn-info");
		} else if(value == priori_bootstrap_type_PriBSContextualType.LINK) {
			this._baseElement.addClass("btn-link");
		} else if(value == priori_bootstrap_type_PriBSContextualType.PRIMARY) {
			this._baseElement.addClass("btn-primary");
		} else if(value == priori_bootstrap_type_PriBSContextualType.SUCCESS) {
			this._baseElement.addClass("btn-success");
		} else if(value == priori_bootstrap_type_PriBSContextualType.WARNING) {
			this._baseElement.addClass("btn-warning");
		}
		return this.context = value;
	}
	,set_size: function(value) {
		this._baseElement.removeClass("btn-lg btn-sm btn-xs");
		if(value == priori_bootstrap_type_PriBSSize.LARGE) {
			this._baseElement.addClass("btn-lg");
		} else if(value == priori_bootstrap_type_PriBSSize.SMALL) {
			this._baseElement.addClass("btn-sm");
		} else if(value == priori_bootstrap_type_PriBSSize.EXTRA_SMALL) {
			this._baseElement.addClass("btn-xs");
		}
		return this.size = value;
	}
	,__class__: priori_bootstrap_PriBSFormButton
	,__properties__: $extend(priori_view_form_PriFormButton.prototype.__properties__,{set_badge:"set_badge",set_size:"set_size",set_context:"set_context"})
});
var priori_view_form_PriFormInputText = function() {
	this.fieldType = "text";
	this.password = false;
	this.placeholder = "";
	priori_view_form_PriFormElementBase.call(this);
	this.set_clipping(false);
	this.set_width(160);
};
priori_view_form_PriFormInputText.__name__ = true;
priori_view_form_PriFormInputText.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormInputText.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	set_fieldType: function(value) {
		this.fieldType = value;
		this._baseElement.attr("type",value);
		return value;
	}
	,set_marginLeft: function(value) {
		this.marginLeft = value;
		this._baseElement.css("padding-left",value == null ? "" : value + "px");
		return value;
	}
	,set_marginRight: function(value) {
		this.marginRight = value;
		this._baseElement.css("padding-right",value == null ? "" : value + "px");
		return value;
	}
	,getComponentCode: function() {
		return "<input type=\"text\" style=\"height:100%;padding:0px;box-sizing:border-box;\" />";
	}
	,onAddedToApp: function() {
		priori_view_form_PriFormElementBase.prototype.onAddedToApp.call(this);
		priori_app_PriApp.g().getBody().on("input","[id=" + this.get_fieldId() + "]",$bind(this,this._onChange));
	}
	,onRemovedFromApp: function() {
		priori_view_form_PriFormElementBase.prototype.onRemovedFromApp.call(this);
		priori_app_PriApp.g().getBody().off("input","[id=" + this.get_fieldId() + "]",$bind(this,this._onChange));
	}
	,_onChange: function(event) {
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_change"));
	}
	,set_value: function(value) {
		this.value = value;
		this._baseElement.val(value);
		return value;
	}
	,get_value: function() {
		var result = this.value;
		var isDisabled = this.get_disabled();
		if(isDisabled) {
			this.suspendDisabled();
		}
		result = this._baseElement.val();
		if(isDisabled) {
			this.reactivateDisable();
		}
		return result;
	}
	,set_placeholder: function(value) {
		this.placeholder = value;
		this._baseElement.attr("placeholder",value);
		return value;
	}
	,set_password: function(value) {
		this.password = value;
		if(value) {
			this.set_fieldType("password");
		} else {
			this.set_fieldType("text");
		}
		return value;
	}
	,__class__: priori_view_form_PriFormInputText
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_fieldType:"set_fieldType",set_marginRight:"set_marginRight",set_marginLeft:"set_marginLeft",set_password:"set_password",set_placeholder:"set_placeholder",set_value:"set_value",get_value:"get_value"})
});
var priori_bootstrap_PriBSFormInputText = function() {
	priori_view_form_PriFormInputText.call(this);
	this.set_clipping(false);
};
priori_bootstrap_PriBSFormInputText.__name__ = true;
priori_bootstrap_PriBSFormInputText.__super__ = priori_view_form_PriFormInputText;
priori_bootstrap_PriBSFormInputText.prototype = $extend(priori_view_form_PriFormInputText.prototype,{
	getComponentCode: function() {
		return "<input class=\"form-control\" type=\"text\">";
	}
	,__class__: priori_bootstrap_PriBSFormInputText
});
var priori_view_form_PriFormLabel = function() {
	this.__multiLine = true;
	priori_view_form_PriFormElementBase.call(this);
	this.set_text("label");
	this.set_fontSize(12);
};
priori_view_form_PriFormLabel.__name__ = true;
priori_view_form_PriFormLabel.__super__ = priori_view_form_PriFormElementBase;
priori_view_form_PriFormLabel.prototype = $extend(priori_view_form_PriFormElementBase.prototype,{
	getComponentCode: function() {
		return "<label style=\"margin:0px;padding:0px;\"></label>";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.text(value);
		return value;
	}
	,get_multiLine: function() {
		return this.__multiLine;
	}
	,set_multiLine: function(value) {
		if(this.__multiLine != value) {
			this.__multiLine = value;
			if(value) {
				this._baseElement.css("white-space","");
			} else {
				this._baseElement.css("white-space","nowrap");
			}
		}
		return value;
	}
	,set_formElement: function(value) {
		this.formElement = value;
		if(value == null) {
			this._baseElement.removeAttr("for");
		} else {
			this._baseElement.attr("for",this.formElement.get_fieldId());
		}
		return value;
	}
	,__class__: priori_view_form_PriFormLabel
	,__properties__: $extend(priori_view_form_PriFormElementBase.prototype.__properties__,{set_multiLine:"set_multiLine",get_multiLine:"get_multiLine",set_text:"set_text",set_formElement:"set_formElement"})
});
var priori_bootstrap_PriBSFormLabel = function() {
	priori_view_form_PriFormLabel.call(this);
	this.set_fontStyle(new priori_style_font_PriFontStyle(3355443,""));
	this.set_fontSize(14);
	this._baseElement.css("margin-bottom","0px");
};
priori_bootstrap_PriBSFormLabel.__name__ = true;
priori_bootstrap_PriBSFormLabel.__super__ = priori_view_form_PriFormLabel;
priori_bootstrap_PriBSFormLabel.prototype = $extend(priori_view_form_PriFormLabel.prototype,{
	__class__: priori_bootstrap_PriBSFormLabel
});
var priori_view_PriImage = function(assetId) {
	this._imageScaleY = 1;
	this._imageScaleX = 1;
	priori_view_PriDisplay.call(this);
	this._originalImageWidth = 0;
	this._originalImageHeight = 0;
	if(assetId != null && assetId != "") {
		var asset = priori_assets_AssetManager.g().getAsset(assetId);
		if(asset != null) {
			if(((asset) instanceof priori_assets_AssetImage)) {
				this.loadByAsset(js_Boot.__cast(asset , priori_assets_AssetImage));
			} else {
				throw new js__$Boot_HaxeError("Asset is not an AssetImage");
			}
		} else {
			throw new js__$Boot_HaxeError("Asset not found or not loaded yet.");
		}
	}
};
priori_view_PriImage.__name__ = true;
priori_view_PriImage.__super__ = priori_view_PriDisplay;
priori_view_PriImage.prototype = $extend(priori_view_PriDisplay.prototype,{
	clearCurrentImage: function() {
		if(this._imageObject != null) {
			this._imageObject.onload = null;
			this._imageObject.onerror = null;
			this._imageObject = null;
		}
		if(this._imageElement != null) {
			this._imageElement.remove();
			this._imageElement.off();
		}
		this.killImageLoader();
	}
	,killImageLoader: function() {
		if(this._loader != null) {
			this._loader.removeEventListener("prievent_base_complete",$bind(this,this.onAssetComplete));
			this._loader.removeEventListener("prievent_base_error",$bind(this,this.onAssetError));
			this._loader.kill();
			this._loader = null;
		}
	}
	,loadImageData: function(base64ImageData,type) {
		if(type == null) {
			type = "jpeg";
		}
		var _gthis = this;
		this.clearCurrentImage();
		this._imageObject = new Image();
		this._imageObject.onload = function() {
			_gthis._imageObject.onload = null;
			_gthis._imageObject.onerror = null;
			_gthis._originalImageWidth = _gthis._imageObject.naturalWidth;
			_gthis._originalImageHeight = _gthis._imageObject.naturalHeight;
			_gthis._imageElement = $(_gthis._imageObject);
			_gthis._imageObject = null;
			_gthis.startImageElement();
			_gthis.dispatchEvent(new priori_event_PriEvent("prievent_base_complete"));
		};
		this._imageObject.onerror = function() {
			_gthis._imageObject.onload = null;
			_gthis._imageObject.onerror = null;
			_gthis._imageObject = null;
			_gthis.dispatchEvent(new priori_event_PriEvent("prievent_base_error"));
		};
		this._imageObject.src = "data:image/" + type + ";base64," + base64ImageData;
	}
	,load: function(imageURL) {
		this.clearCurrentImage();
		this._loader = new priori_assets_AssetImage("_internalasset",imageURL);
		this._loader.addEventListener("prievent_base_complete",$bind(this,this.onAssetComplete));
		this._loader.addEventListener("prievent_base_error",$bind(this,this.onAssetError));
		this._loader.load();
	}
	,onAssetComplete: function(e) {
		this.loadByAsset(this._loader);
		this.killImageLoader();
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_complete"));
	}
	,onAssetError: function(e) {
		this.killImageLoader();
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_error"));
	}
	,loadByAsset: function(asset) {
		if(asset != null) {
			this.clearCurrentImage();
			this._originalImageWidth = asset.imageWidth;
			this._originalImageHeight = asset.imageHeight;
			this._imageElement = asset.getElement();
			this.startImageElement();
		}
	}
	,startImageElement: function() {
		this._imageElement.css("width","100%");
		this._imageElement.css("height","100%");
		this._imageElement.attr("onmousedown","if (event.preventDefault) event.preventDefault()");
		this._imageElement.attr("draggable","false");
		this.getElement().append(this._imageElement);
		this.set_width(this._originalImageWidth * this._imageScaleX);
		this.set_height(this._originalImageHeight * this._imageScaleY);
	}
	,get_imageScaleX: function() {
		if(this._originalImageWidth == 0) {
			return this._imageScaleX;
		}
		var result = this.get_width() / this._originalImageWidth;
		return result;
	}
	,set_imageScaleX: function(value) {
		var val = value == null ? 1 : value;
		this._imageScaleX = val;
		this.set_width(this._originalImageWidth * val);
		return value;
	}
	,get_imageScaleY: function() {
		if(this._originalImageHeight == 0) {
			return this._imageScaleY;
		}
		var result = this.get_height() / this._originalImageHeight;
		return result;
	}
	,set_imageScaleY: function(value) {
		var val = value == null ? 1 : value;
		this._imageScaleY = val;
		this.set_height(this._originalImageHeight * val);
		return value;
	}
	,resizeToWidth: function(width) {
		this.set_width(width);
		this.set_imageScaleY(this.get_imageScaleX());
	}
	,resizeToHeight: function(height) {
		this.set_height(height);
		this.set_imageScaleX(this.get_imageScaleY());
	}
	,resizeToLetterBox: function(width,height) {
		this.resizeToWidth(width);
		if(this.get_height() > height) {
			this.resizeToHeight(height);
		}
	}
	,resizeToZoom: function(width,height) {
		this.resizeToWidth(width);
		if(this.get_height() < height) {
			this.resizeToHeight(height);
		}
	}
	,__class__: priori_view_PriImage
	,__properties__: $extend(priori_view_PriDisplay.prototype.__properties__,{set_imageScaleY:"set_imageScaleY",get_imageScaleY:"get_imageScaleY",set_imageScaleX:"set_imageScaleX",get_imageScaleX:"get_imageScaleX"})
});
var priori_bootstrap_PriBSImage = function(assetId) {
	priori_view_PriImage.call(this,assetId);
	this.set_imageStyle(priori_bootstrap_type_PriBSImageStyle.NONE);
	this.set_info("");
	this.set_clipping(true);
};
priori_bootstrap_PriBSImage.__name__ = true;
priori_bootstrap_PriBSImage.__super__ = priori_view_PriImage;
priori_bootstrap_PriBSImage.prototype = $extend(priori_view_PriImage.prototype,{
	updateStyle: function() {
		if(this._imageElement != null) {
			this._imageElement.removeClass("img-rounded img-circle img-thumbnail");
			if(this.imageStyle == priori_bootstrap_type_PriBSImageStyle.ROUNDED) {
				this._imageElement.addClass("img-rounded");
			} else if(this.imageStyle == priori_bootstrap_type_PriBSImageStyle.CIRCLE) {
				this._imageElement.addClass("img-circle");
			}
			if(this.imageStyle == priori_bootstrap_type_PriBSImageStyle.THUMBNAIL) {
				this._imageElement.addClass("img-thumbnail");
			}
		}
	}
	,updateInfo: function() {
		if(this._imageElement != null) {
			this._imageElement.attr("alt",this.info);
		}
	}
	,set_imageStyle: function(value) {
		this.imageStyle = value;
		this.updateStyle();
		return value;
	}
	,set_info: function(value) {
		this.info = value;
		this.updateInfo();
		return value;
	}
	,loadByAsset: function(asset) {
		priori_view_PriImage.prototype.loadByAsset.call(this,asset);
		if(this._imageElement != null) {
			this.updateInfo();
			this.updateStyle();
		}
	}
	,__class__: priori_bootstrap_PriBSImage
	,__properties__: $extend(priori_view_PriImage.prototype.__properties__,{set_info:"set_info",set_imageStyle:"set_imageStyle"})
});
var priori_bootstrap_PriBSLabel = function() {
	priori_view_component_PriExtendable.call(this);
	this.set_text("Label");
	this.set_context(priori_bootstrap_type_PriBSContextualType.DEFAULT);
};
priori_bootstrap_PriBSLabel.__name__ = true;
priori_bootstrap_PriBSLabel.__super__ = priori_view_component_PriExtendable;
priori_bootstrap_PriBSLabel.prototype = $extend(priori_view_component_PriExtendable.prototype,{
	getComponentCode: function() {
		return "<span class=\"label\" />";
	}
	,set_text: function(value) {
		this.text = value;
		this._baseElement.text(value);
		return value;
	}
	,set_context: function(value) {
		this._baseElement.removeClass("label-danger label-default label-info label-link label-primary label-success label-warning");
		if(value == priori_bootstrap_type_PriBSContextualType.DANGER) {
			this._baseElement.addClass("label-danger");
		} else if(value == priori_bootstrap_type_PriBSContextualType.DEFAULT) {
			this._baseElement.addClass("label-default");
		} else if(value == priori_bootstrap_type_PriBSContextualType.INFO) {
			this._baseElement.addClass("label-info");
		} else if(value == priori_bootstrap_type_PriBSContextualType.LINK) {
			this._baseElement.addClass("label-link");
		} else if(value == priori_bootstrap_type_PriBSContextualType.PRIMARY) {
			this._baseElement.addClass("label-primary");
		} else if(value == priori_bootstrap_type_PriBSContextualType.SUCCESS) {
			this._baseElement.addClass("label-success");
		} else if(value == priori_bootstrap_type_PriBSContextualType.WARNING) {
			this._baseElement.addClass("label-warning");
		}
		return this.context = value;
	}
	,__class__: priori_bootstrap_PriBSLabel
	,__properties__: $extend(priori_view_component_PriExtendable.prototype.__properties__,{set_context:"set_context",set_text:"set_text"})
});
var priori_bootstrap_type_PriBSContextualType = $hxEnums["priori.bootstrap.type.PriBSContextualType"] = { __ename__ : true, __constructs__ : ["DEFAULT","PRIMARY","SUCCESS","INFO","WARNING","DANGER","LINK"]
	,DEFAULT: {_hx_index:0,__enum__:"priori.bootstrap.type.PriBSContextualType",toString:$estr}
	,PRIMARY: {_hx_index:1,__enum__:"priori.bootstrap.type.PriBSContextualType",toString:$estr}
	,SUCCESS: {_hx_index:2,__enum__:"priori.bootstrap.type.PriBSContextualType",toString:$estr}
	,INFO: {_hx_index:3,__enum__:"priori.bootstrap.type.PriBSContextualType",toString:$estr}
	,WARNING: {_hx_index:4,__enum__:"priori.bootstrap.type.PriBSContextualType",toString:$estr}
	,DANGER: {_hx_index:5,__enum__:"priori.bootstrap.type.PriBSContextualType",toString:$estr}
	,LINK: {_hx_index:6,__enum__:"priori.bootstrap.type.PriBSContextualType",toString:$estr}
};
var priori_bootstrap_type_PriBSImageStyle = $hxEnums["priori.bootstrap.type.PriBSImageStyle"] = { __ename__ : true, __constructs__ : ["ROUNDED","CIRCLE","THUMBNAIL","NONE"]
	,ROUNDED: {_hx_index:0,__enum__:"priori.bootstrap.type.PriBSImageStyle",toString:$estr}
	,CIRCLE: {_hx_index:1,__enum__:"priori.bootstrap.type.PriBSImageStyle",toString:$estr}
	,THUMBNAIL: {_hx_index:2,__enum__:"priori.bootstrap.type.PriBSImageStyle",toString:$estr}
	,NONE: {_hx_index:3,__enum__:"priori.bootstrap.type.PriBSImageStyle",toString:$estr}
};
var priori_bootstrap_type_PriBSSize = $hxEnums["priori.bootstrap.type.PriBSSize"] = { __ename__ : true, __constructs__ : ["NORMAL","LARGE","SMALL","EXTRA_SMALL"]
	,NORMAL: {_hx_index:0,__enum__:"priori.bootstrap.type.PriBSSize",toString:$estr}
	,LARGE: {_hx_index:1,__enum__:"priori.bootstrap.type.PriBSSize",toString:$estr}
	,SMALL: {_hx_index:2,__enum__:"priori.bootstrap.type.PriBSSize",toString:$estr}
	,EXTRA_SMALL: {_hx_index:3,__enum__:"priori.bootstrap.type.PriBSSize",toString:$estr}
};
var priori_event_PriFocusEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriFocusEvent.__name__ = true;
priori_event_PriFocusEvent.__super__ = priori_event_PriEvent;
priori_event_PriFocusEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriFocusEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		return clone;
	}
	,__class__: priori_event_PriFocusEvent
});
var priori_event_PriKeyboardEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriKeyboardEvent.__name__ = true;
priori_event_PriKeyboardEvent.__super__ = priori_event_PriEvent;
priori_event_PriKeyboardEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriKeyboardEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		clone.keycode = this.keycode;
		clone.altKey = this.altKey;
		clone.ctrlKey = this.ctrlKey;
		clone.shiftKey = this.shiftKey;
		return clone;
	}
	,toString: function() {
		return JSON.stringify({ keyCode : this.keycode, altKey : this.altKey, ctrlKey : this.ctrlKey, shiftKey : this.shiftKey});
	}
	,__class__: priori_event_PriKeyboardEvent
});
var priori_event_PriMouseEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriMouseEvent.__name__ = true;
priori_event_PriMouseEvent.__super__ = priori_event_PriEvent;
priori_event_PriMouseEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriMouseEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		return clone;
	}
	,__class__: priori_event_PriMouseEvent
});
var priori_event_PriTapEvent = function(type,propagate,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	if(propagate == null) {
		propagate = false;
	}
	priori_event_PriMouseEvent.call(this,type,propagate,bubble,data);
};
priori_event_PriTapEvent.__name__ = true;
priori_event_PriTapEvent.__super__ = priori_event_PriMouseEvent;
priori_event_PriTapEvent.prototype = $extend(priori_event_PriMouseEvent.prototype,{
	clone: function() {
		var clone = new priori_event_PriTapEvent(this.type,this.propagate,this.bubble);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		return clone;
	}
	,__class__: priori_event_PriTapEvent
});
var priori_geom__$PriColor_PriColor_$Impl_$ = {};
priori_geom__$PriColor_PriColor_$Impl_$.__name__ = true;
priori_geom__$PriColor_PriColor_$Impl_$.__properties__ = {set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red"};
priori_geom__$PriColor_PriColor_$Impl_$._new = function(color) {
	if(color == null) {
		color = 0;
	}
	var this1 = color;
	return this1;
};
priori_geom__$PriColor_PriColor_$Impl_$.mixWith = function(this1,color,percent) {
	if(percent == null) {
		percent = 0.5;
	}
	if(percent == null || percent < 0) {
		percent = 0;
	}
	if(percent > 1) {
		percent = 1;
	}
	var nr = (this1 >> 16 & 255) + Math.round(((color >> 16 & 255) - (this1 >> 16 & 255)) * percent);
	var ng = (this1 >> 8 & 255) + Math.round(((color >> 8 & 255) - (this1 >> 8 & 255)) * percent);
	var nb = (this1 & 255) + Math.round(((color & 255) - (this1 & 255)) * percent);
	var R = nr << 16;
	var G = ng << 8;
	var B = nb;
	this1 = R | G | B;
};
priori_geom__$PriColor_PriColor_$Impl_$.get_red = function(this1) {
	return this1 >> 16 & 255;
};
priori_geom__$PriColor_PriColor_$Impl_$.set_red = function(this1,value) {
	var g = this1 >> 8 & 255;
	var b = this1 & 255;
	var R = value << 16;
	var G = g << 8;
	var B = b;
	this1 = R | G | B;
	return value;
};
priori_geom__$PriColor_PriColor_$Impl_$.get_green = function(this1) {
	return this1 >> 8 & 255;
};
priori_geom__$PriColor_PriColor_$Impl_$.set_green = function(this1,value) {
	var r = this1 >> 16 & 255;
	var b = this1 & 255;
	var R = r << 16;
	var G = value << 8;
	var B = b;
	this1 = R | G | B;
	return value;
};
priori_geom__$PriColor_PriColor_$Impl_$.get_blue = function(this1) {
	return this1 & 255;
};
priori_geom__$PriColor_PriColor_$Impl_$.set_blue = function(this1,value) {
	var r = this1 >> 16 & 255;
	var g = this1 >> 8 & 255;
	var R = r << 16;
	var G = g << 8;
	var B = value;
	this1 = R | G | B;
	return value;
};
priori_geom__$PriColor_PriColor_$Impl_$.updateColor = function(this1,r,g,b) {
	var R = r << 16;
	var G = g << 8;
	var B = b;
	this1 = R | G | B;
	return this1;
};
priori_geom__$PriColor_PriColor_$Impl_$.toString = function(this1) {
	return "#" + StringTools.hex(this1,6);
};
priori_geom__$PriColor_PriColor_$Impl_$.fromString = function(rgb) {
	if(rgb.charAt(0) == "#") {
		rgb = "0x" + rgb.substring(1);
	}
	var colorInt = Std.parseInt(rgb);
	if(colorInt == null) {
		colorInt = 0;
	}
	var color = colorInt;
	if(color == null) {
		color = 0;
	}
	var this1 = color;
	return this1;
};
var priori_geom_PriGeomBox = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.height = height;
	this.width = width;
};
priori_geom_PriGeomBox.__name__ = true;
priori_geom_PriGeomBox.prototype = {
	__class__: priori_geom_PriGeomBox
};
var priori_geom_PriGeomPoint = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
priori_geom_PriGeomPoint.__name__ = true;
priori_geom_PriGeomPoint.prototype = {
	clone: function() {
		return new priori_geom_PriGeomPoint(this.x,this.y);
	}
	,__class__: priori_geom_PriGeomPoint
};
var priori_net_PriRequestContentType = function() { };
priori_net_PriRequestContentType.__name__ = true;
var priori_net_PriRequestMethod = function() { };
priori_net_PriRequestMethod.__name__ = true;
var priori_net_PriRequestURLEncodedValues = function() {
};
priori_net_PriRequestURLEncodedValues.__name__ = true;
priori_net_PriRequestURLEncodedValues.prototype = {
	toString: function() {
		var object = JSON.parse(JSON.stringify(this));
		return $.param(object);
	}
	,__class__: priori_net_PriRequestURLEncodedValues
};
var priori_net_PriURLHeader = function(header,value) {
	this.header = header;
	this.value = value;
};
priori_net_PriURLHeader.__name__ = true;
priori_net_PriURLHeader.prototype = {
	__class__: priori_net_PriURLHeader
};
var priori_net_PriURLLoader = function(request) {
	this.statusText = "";
	this.status = -1;
	this._responseHeaders = "";
	priori_event_PriEventDispatcher.call(this);
	this._isLoaded = false;
	this._isLoading = false;
	if(request != null) {
		this.load(request);
	}
};
priori_net_PriURLLoader.__name__ = true;
priori_net_PriURLLoader.__super__ = priori_event_PriEventDispatcher;
priori_net_PriURLLoader.prototype = $extend(priori_event_PriEventDispatcher.prototype,{
	getResponseHeaders: function() {
		if(this._responseHeaders == null) {
			return [];
		}
		var result = [];
		var lines = this._responseHeaders.split("\n");
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			var data = line.split(":");
			if(data.length > 1) {
				var header = StringTools.trim(data.shift());
				var value = StringTools.trim(data.join(":"));
				result.push(new priori_net_PriURLHeader(header,value));
			}
		}
		return result;
	}
	,getRequestHeaders: function(request) {
		var result = { };
		if(request.requestHeader != null) {
			var i = 0;
			var n = request.requestHeader.length;
			while(i < n) {
				result[request.requestHeader[i].header] = request.requestHeader[i].value;
				++i;
			}
		}
		return result;
	}
	,load: function(request) {
		if(this._isLoaded == false && this._isLoading == false) {
			this.status = -1;
			this.statusText = "";
			this._responseHeaders = "";
			this.data = null;
			var contentType = request.contentType;
			var value = request.data;
			if(((request.data) instanceof priori_net_PriRequestURLEncodedValues)) {
				contentType = priori_net_PriRequestContentType.FORM_URLENCODED;
				value = (js_Boot.__cast(request.data , priori_net_PriRequestURLEncodedValues)).toString();
			} else if(request.contentType == priori_net_PriRequestContentType.APPLICATION_JSON && typeof(request.data) != "string") {
				value = JSON.stringify(request.data);
			}
			var ajaxObject = { async : true, method : request.method, url : request.url, cache : request.cache, dataType : "text", contentType : contentType, data : value, headers : this.getRequestHeaders(request), error : $bind(this,this.onError), success : $bind(this,this.onSuccess)};
			$.support.cors = true;
			this.ajax = $.ajax(ajaxObject);
		}
	}
	,onSuccess: function(data,status,e) {
		this._isLoaded = true;
		this._isLoading = false;
		if(this.ajax == null) {
			this._responseHeaders = "";
			this.status = 200;
			this.statusText = "success";
		} else {
			this._responseHeaders = this.ajax.getAllResponseHeaders();
			this.status = this.ajax.status;
			this.statusText = this.ajax.statusText;
		}
		this.data = data;
		this.ajax = null;
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_complete",false,false,data));
	}
	,onError: function(data) {
		this._isLoaded = false;
		this._isLoading = false;
		if(this.ajax == null) {
			this._responseHeaders = "";
			this.status = -1;
			this.statusText = "undefined";
		} else {
			this._responseHeaders = this.ajax.getAllResponseHeaders();
			this.status = this.ajax.status;
			this.statusText = this.ajax.statusText;
		}
		this.data = data.responseText;
		this.ajax = null;
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_error",false,false,data.responseText));
	}
	,close: function() {
		if(this.ajax != null) {
			this.ajax.abort();
			this.ajax = null;
			this._isLoading = false;
			this._isLoaded = false;
		}
	}
	,kill: function() {
		this.close();
		priori_event_PriEventDispatcher.prototype.kill.call(this);
	}
	,__class__: priori_net_PriURLLoader
});
var priori_net_PriURLRequest = function(url) {
	this.url = url;
	this.method = priori_net_PriRequestMethod.POST;
	this.contentType = priori_net_PriRequestContentType.FORM_URLENCODED;
	this.cache = true;
};
priori_net_PriURLRequest.__name__ = true;
priori_net_PriURLRequest.prototype = {
	__class__: priori_net_PriURLRequest
};
var priori_style_border_PriBorderStyle = function(width,color,type) {
	if(color == null) {
		color = 13421772;
	}
	if(width == null) {
		width = 1;
	}
	this.width = width;
	this.color = color;
	this.type = type == null ? priori_style_border_PriBorderType.SOLID : type;
};
priori_style_border_PriBorderStyle.__name__ = true;
priori_style_border_PriBorderStyle.prototype = {
	setColor: function(color) {
		this.color = color;
		return this;
	}
	,setType: function(type) {
		this.type = type;
		return this;
	}
	,setWidth: function(width) {
		this.width = width;
		return this;
	}
	,toString: function() {
		var styleString = "";
		if(this.type == priori_style_border_PriBorderType.SOLID) {
			styleString = "solid";
		} else if(this.type == priori_style_border_PriBorderType.DOTTED) {
			styleString = "dotted";
		} else if(this.type == priori_style_border_PriBorderType.DASHED) {
			styleString = "dashed";
		}
		var result = "#" + StringTools.hex(this.color,6) + " " + styleString + " " + this.width + "px ";
		return result;
	}
	,__class__: priori_style_border_PriBorderStyle
};
var priori_style_border_PriBorderType = $hxEnums["priori.style.border.PriBorderType"] = { __ename__ : true, __constructs__ : ["SOLID","DOTTED","DASHED"]
	,SOLID: {_hx_index:0,__enum__:"priori.style.border.PriBorderType",toString:$estr}
	,DOTTED: {_hx_index:1,__enum__:"priori.style.border.PriBorderType",toString:$estr}
	,DASHED: {_hx_index:2,__enum__:"priori.style.border.PriBorderType",toString:$estr}
};
var priori_style_filter_PriFilterStyle = function() {
	this.blur = 0;
	this.brightness = 1;
	this.contrast = 1;
	this.grayscale = 0;
	this.hue = 0;
};
priori_style_filter_PriFilterStyle.__name__ = true;
priori_style_filter_PriFilterStyle.prototype = {
	setBlur: function(value) {
		this.blur = value;
		return this;
	}
	,setBrightness: function(value) {
		this.brightness = value;
		return this;
	}
	,setContrast: function(value) {
		this.contrast = value;
		return this;
	}
	,setGrayscale: function(value) {
		this.grayscale = value;
		return this;
	}
	,setHue: function(value) {
		this.hue = value;
		return this;
	}
	,setShadow: function(value) {
		this.shadow = value;
		return this;
	}
	,toString: function() {
		var result = "";
		if(this.blur > 0) {
			result += "blur(" + this.blur + "px) ";
		}
		if(this.brightness != 1) {
			result += "brightness(" + this.brightness * 100 + "%) ";
		}
		if(this.contrast != 1) {
			result += "contrast(" + this.contrast * 100 + "%) ";
		}
		if(this.grayscale > 0) {
			result += "grayscale" + this.grayscale * 100 + "%) ";
		}
		if(this.hue != 0) {
			result += "hue-rotate(" + 360 * this.hue + "deg) ";
		}
		if(this.saturate > 0) {
			result += "saturate(" + this.saturate * 100 + "%) ";
		}
		if(this.shadow != null && this.shadow.length > 0) {
			result += "drop-shadow(";
			var _g = 0;
			var _g1 = this.shadow.length;
			while(_g < _g1) {
				var i = _g++;
				if(i > 0) {
					result += ",";
				}
				result += this.shadow[i].toString(2);
			}
			result += ") ";
		}
		return result;
	}
	,__class__: priori_style_filter_PriFilterStyle
};
var priori_style_font_PriFontStyle = function(color,family,weight,italic,variant,align,decoration) {
	if(color != null) {
		this.color = color;
	} else {
		this.color = priori_style_font_PriFontStyle.DEFAULT_COLOR;
	}
	if(family != null) {
		this.family = family;
	} else {
		this.family = priori_style_font_PriFontStyle.DEFAULT_FAMILY;
	}
	if(weight != null) {
		this.weight = weight;
	} else {
		this.weight = priori_style_font_PriFontStyle.DEFAULT_WEIGHT;
	}
	if(italic != null) {
		this.italic = italic;
	} else {
		this.italic = priori_style_font_PriFontStyle.DEFAULT_ITALIC;
	}
	if(variant != null) {
		this.variant = variant;
	} else {
		this.variant = priori_style_font_PriFontStyle.DEFAULT_VARIANT;
	}
	if(align != null) {
		this.align = align;
	} else {
		this.align = priori_style_font_PriFontStyle.DEFAULT_ALIGN;
	}
	if(decoration != null) {
		this.decoration = decoration;
	} else {
		this.decoration = priori_style_font_PriFontStyle.DEFAULT_DECORATION;
	}
};
priori_style_font_PriFontStyle.__name__ = true;
priori_style_font_PriFontStyle.getFontStyleObjectBase = function() {
	return { fontFamily : "", fontWeight : "", fontVariant : "", fontStyle : "", textAlign : "", color : "", textDecoration : ""};
};
priori_style_font_PriFontStyle.prototype = {
	setColor: function(color) {
		this.color = color;
		return this;
	}
	,setFamily: function(family) {
		this.family = family;
		return this;
	}
	,setWeight: function(weight) {
		this.weight = weight;
		return this;
	}
	,setItalic: function(italic) {
		this.italic = italic;
		return this;
	}
	,setVariant: function(variant) {
		this.variant = variant;
		return this;
	}
	,setAlign: function(align) {
		this.align = align;
		return this;
	}
	,setDecoration: function(decoration) {
		this.decoration = decoration;
		return this;
	}
	,getFontStyleObject: function() {
		var weight = "";
		var italic = "";
		var variant = "";
		var align = "";
		var family = this.family == null ? "" : this.family;
		var color = this.color == null ? "" : "#" + StringTools.hex(this.color,6);
		var decoration = "";
		if(this.weight != null) {
			switch(this.weight._hx_index) {
			case 0:
				weight = "normal";
				break;
			case 1:
				weight = "bold";
				break;
			case 2:
				weight = "bolder";
				break;
			case 3:
				weight = "lighter";
				break;
			case 4:
				weight = "100";
				break;
			case 5:
				weight = "200";
				break;
			case 6:
				weight = "300";
				break;
			case 7:
				weight = "400";
				break;
			case 8:
				weight = "500";
				break;
			case 9:
				weight = "600";
				break;
			case 10:
				weight = "700";
				break;
			case 11:
				weight = "800";
				break;
			case 12:
				weight = "900";
				break;
			}
		}
		if(this.italic != null) {
			switch(this.italic._hx_index) {
			case 0:
				italic = "normal";
				break;
			case 1:
				italic = "italic";
				break;
			case 2:
				italic = "oblique";
				break;
			}
		}
		if(this.variant != null) {
			switch(this.variant._hx_index) {
			case 0:
				variant = "normal";
				break;
			case 1:
				variant = "small-caps";
				break;
			}
		}
		if(this.align != null) {
			switch(this.align._hx_index) {
			case 0:
				align = "left";
				break;
			case 1:
				align = "center";
				break;
			case 2:
				align = "right";
				break;
			}
		}
		if(this.decoration != null) {
			switch(this.decoration._hx_index) {
			case 0:
				decoration = "none";
				break;
			case 1:
				decoration = "underline";
				break;
			case 2:
				decoration = "overline";
				break;
			case 3:
				decoration = "line-through";
				break;
			}
		}
		var styleData = priori_style_font_PriFontStyle.getFontStyleObjectBase();
		styleData.fontFamily = family;
		styleData.fontWeight = weight;
		styleData.fontStyle = italic;
		styleData.fontVariant = variant;
		styleData.textAlign = align;
		styleData.color = color;
		styleData.textDecoration = decoration;
		return styleData;
	}
	,toString: function() {
		return JSON.stringify(this.getFontStyleObject());
	}
	,__class__: priori_style_font_PriFontStyle
};
var priori_style_font_PriFontStyleAlign = $hxEnums["priori.style.font.PriFontStyleAlign"] = { __ename__ : true, __constructs__ : ["LEFT","CENTER","RIGHT"]
	,LEFT: {_hx_index:0,__enum__:"priori.style.font.PriFontStyleAlign",toString:$estr}
	,CENTER: {_hx_index:1,__enum__:"priori.style.font.PriFontStyleAlign",toString:$estr}
	,RIGHT: {_hx_index:2,__enum__:"priori.style.font.PriFontStyleAlign",toString:$estr}
};
var priori_style_font_PriFontStyleDecoration = $hxEnums["priori.style.font.PriFontStyleDecoration"] = { __ename__ : true, __constructs__ : ["NONE","UNDERLINE","OVERLINE","LINE_THROUGH"]
	,NONE: {_hx_index:0,__enum__:"priori.style.font.PriFontStyleDecoration",toString:$estr}
	,UNDERLINE: {_hx_index:1,__enum__:"priori.style.font.PriFontStyleDecoration",toString:$estr}
	,OVERLINE: {_hx_index:2,__enum__:"priori.style.font.PriFontStyleDecoration",toString:$estr}
	,LINE_THROUGH: {_hx_index:3,__enum__:"priori.style.font.PriFontStyleDecoration",toString:$estr}
};
var priori_style_font_PriFontStyleItalic = $hxEnums["priori.style.font.PriFontStyleItalic"] = { __ename__ : true, __constructs__ : ["NORMAL","ITALIC","OBLIQUE"]
	,NORMAL: {_hx_index:0,__enum__:"priori.style.font.PriFontStyleItalic",toString:$estr}
	,ITALIC: {_hx_index:1,__enum__:"priori.style.font.PriFontStyleItalic",toString:$estr}
	,OBLIQUE: {_hx_index:2,__enum__:"priori.style.font.PriFontStyleItalic",toString:$estr}
};
var priori_style_font_PriFontStyleVariant = $hxEnums["priori.style.font.PriFontStyleVariant"] = { __ename__ : true, __constructs__ : ["NORMAL","SMALL_CAPS"]
	,NORMAL: {_hx_index:0,__enum__:"priori.style.font.PriFontStyleVariant",toString:$estr}
	,SMALL_CAPS: {_hx_index:1,__enum__:"priori.style.font.PriFontStyleVariant",toString:$estr}
};
var priori_style_font_PriFontStyleWeight = $hxEnums["priori.style.font.PriFontStyleWeight"] = { __ename__ : true, __constructs__ : ["NORMAL","BOLD","BOLDER","LIGHTER","THICK100","THICK200","THICK300","THICK400","THICK500","THICK600","THICK700","THICK800","THICK900"]
	,NORMAL: {_hx_index:0,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,BOLD: {_hx_index:1,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,BOLDER: {_hx_index:2,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,LIGHTER: {_hx_index:3,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK100: {_hx_index:4,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK200: {_hx_index:5,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK300: {_hx_index:6,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK400: {_hx_index:7,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK500: {_hx_index:8,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK600: {_hx_index:9,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK700: {_hx_index:10,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK800: {_hx_index:11,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
	,THICK900: {_hx_index:12,__enum__:"priori.style.font.PriFontStyleWeight",toString:$estr}
};
var priori_style_shadow_PriShadowStyle = function() {
	this.type = priori_style_shadow_PriShadowType.OUTLINE;
	this.opacity = 0.7;
	this.color = 0;
	this.spread = -5;
	this.blur = 30;
	this.verticalOffset = 8;
	this.horizontalOffset = 0;
};
priori_style_shadow_PriShadowStyle.__name__ = true;
priori_style_shadow_PriShadowStyle.prototype = {
	setHorizontalOffset: function(value) {
		this.horizontalOffset = value;
		return this;
	}
	,setVerticalOffset: function(value) {
		this.verticalOffset = value;
		return this;
	}
	,setBlur: function(value) {
		this.blur = value;
		return this;
	}
	,setSpread: function(value) {
		this.spread = value;
		return this;
	}
	,setColor: function(value) {
		this.color = value;
		return this;
	}
	,setOpacity: function(value) {
		this.opacity = value;
		return this;
	}
	,setType: function(value) {
		this.type = value;
		return this;
	}
	,toString: function(mode) {
		if(mode == null) {
			mode = 0;
		}
		return this.horizontalOffset + "px " + (this.verticalOffset + "px ") + (this.blur + "px ") + (mode > 0 ? "" : this.spread + "px ") + ("rgba(" + (this.color >> 16 & 255) + "," + (this.color >> 8 & 255) + "," + (this.color >> 16 & 255) + "," + this.opacity + ")") + (mode > 0 ? "" : this.type == priori_style_shadow_PriShadowType.INSET ? "inset" : "");
	}
	,__class__: priori_style_shadow_PriShadowStyle
};
var priori_style_shadow_PriShadowType = $hxEnums["priori.style.shadow.PriShadowType"] = { __ename__ : true, __constructs__ : ["INSET","OUTLINE"]
	,INSET: {_hx_index:0,__enum__:"priori.style.shadow.PriShadowType",toString:$estr}
	,OUTLINE: {_hx_index:1,__enum__:"priori.style.shadow.PriShadowType",toString:$estr}
};
var priori_system_PriDevice = function() { };
priori_system_PriDevice.__name__ = true;
priori_system_PriDevice.browser = function() {
	if(priori_system_PriDevice._detectedBrowser == null) {
		var navigator = window.navigator;
		var userAgent = navigator.userAgent;
		if(userAgent.toLowerCase().indexOf("edge") > -1) {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.EDGE;
		} else if(userAgent.toLowerCase().indexOf("chrome") > -1) {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.CHROME;
		} else if(userAgent.toLowerCase().indexOf("safari") > -1) {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.SAFARI;
		} else if(userAgent.toLowerCase().indexOf("opera") > -1) {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.OPERA;
		} else if(userAgent.toLowerCase().indexOf("webkit") > -1) {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.WEBKIT;
		} else if(userAgent.toLowerCase().indexOf("firefox") > -1) {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.MOZILLA;
		} else if(userAgent.toLowerCase().indexOf("msie") > -1) {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.MSIE;
		} else {
			priori_system_PriDevice._detectedBrowser = priori_system_PriDeviceBrowser.MSIE;
		}
	}
	return priori_system_PriDevice._detectedBrowser;
};
priori_system_PriDevice.deviceSystem = function() {
	var navigator = window.navigator;
	var userAgent = navigator.userAgent;
	if(userAgent.indexOf("Macintosh") > -1) {
		return priori_system_PriDeviceSystem.MAC;
	} else if(new EReg("Android","i").match(userAgent)) {
		return priori_system_PriDeviceSystem.ANDROID;
	} else if(new EReg("BlackBerry","i").match(userAgent)) {
		return priori_system_PriDeviceSystem.BLACKBERRY;
	} else if(new EReg("iPhone|iPad|iPod","i").match(userAgent)) {
		return priori_system_PriDeviceSystem.IOS;
	} else if(new EReg("Opera Mini","i").match(userAgent)) {
		return priori_system_PriDeviceSystem.OPERAMINI;
	} else if(new EReg("IEMobile|WPDesktop","i").match(userAgent)) {
		return priori_system_PriDeviceSystem.WINDOWSMOBILE;
	} else if(userAgent.indexOf("Linux") > -1) {
		return priori_system_PriDeviceSystem.LINUX;
	} else if(userAgent.indexOf("Windows") > -1) {
		return priori_system_PriDeviceSystem.WINDOWS;
	}
	return priori_system_PriDeviceSystem.UNKNOW;
};
priori_system_PriDevice.isMobileDevice = function() {
	var system = priori_system_PriDevice.deviceSystem();
	if(system == priori_system_PriDeviceSystem.ANDROID || system == priori_system_PriDeviceSystem.IOS || system == priori_system_PriDeviceSystem.BLACKBERRY || system == priori_system_PriDeviceSystem.OPERAMINI || system == priori_system_PriDeviceSystem.WINDOWSMOBILE) {
		return true;
	}
	return false;
};
var priori_system_PriDeviceBrowser = $hxEnums["priori.system.PriDeviceBrowser"] = { __ename__ : true, __constructs__ : ["SAFARI","WEBKIT","OPERA","MSIE","EDGE","MOZILLA","CHROME","UNKNOW"]
	,SAFARI: {_hx_index:0,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
	,WEBKIT: {_hx_index:1,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
	,OPERA: {_hx_index:2,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
	,MSIE: {_hx_index:3,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
	,EDGE: {_hx_index:4,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
	,MOZILLA: {_hx_index:5,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
	,CHROME: {_hx_index:6,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
	,UNKNOW: {_hx_index:7,__enum__:"priori.system.PriDeviceBrowser",toString:$estr}
};
var priori_system_PriDeviceSystem = $hxEnums["priori.system.PriDeviceSystem"] = { __ename__ : true, __constructs__ : ["WINDOWS","WINDOWSMOBILE","MAC","LINUX","IOS","ANDROID","BLACKBERRY","OPERAMINI","UNKNOW"]
	,WINDOWS: {_hx_index:0,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,WINDOWSMOBILE: {_hx_index:1,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,MAC: {_hx_index:2,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,LINUX: {_hx_index:3,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,IOS: {_hx_index:4,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,ANDROID: {_hx_index:5,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,BLACKBERRY: {_hx_index:6,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,OPERAMINI: {_hx_index:7,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
	,UNKNOW: {_hx_index:8,__enum__:"priori.system.PriDeviceSystem",toString:$estr}
};
var priori_view_container_PriScrollableContainer = function() {
	this.__mouseIsOver = false;
	priori_view_container_PriGroup.call(this);
	if(priori_system_PriDevice.isMobileDevice()) {
		this.__mouseIsOver = true;
		this.set_scrollerY(true);
	} else {
		this.__mouseIsOver = false;
		this.set_scrollerY(true);
		this.addEventListener("mouseenter",$bind(this,this.onOver));
		this.addEventListener("mouseleave",$bind(this,this.onOut));
	}
};
priori_view_container_PriScrollableContainer.__name__ = true;
priori_view_container_PriScrollableContainer.__super__ = priori_view_container_PriGroup;
priori_view_container_PriScrollableContainer.prototype = $extend(priori_view_container_PriGroup.prototype,{
	onOver: function(e) {
		this.__mouseIsOver = true;
		this.updateScrollerView();
	}
	,onOut: function(e) {
		this.__mouseIsOver = false;
		this.updateScrollerView();
	}
	,updateScrollerView: function() {
		var canUpdate = true;
		if(priori_system_PriDevice.browser() == priori_system_PriDeviceBrowser.MOZILLA) {
			if(this.getElement().find("select:focus").length > 0) {
				canUpdate = false;
			}
		}
		if(canUpdate) {
			if(this.__mouseIsOver) {
				if(this.scrollerX && this.scrollerY) {
					this.getElement().css("overflow","auto");
				} else if(this.scrollerX) {
					this.getElement().css("overflow-x","auto");
				} else if(this.scrollerY) {
					this.getElement().css("overflow-y","auto");
				} else {
					this.getElement().css("overflow","hidden");
				}
			} else {
				this.getElement().css("overflow","hidden");
			}
		}
	}
	,get_clipping: function() {
		return true;
	}
	,set_clipping: function(value) {
		return value;
	}
	,set_scrollerX: function(value) {
		this.scrollerX = value;
		if(this.__mouseIsOver) {
			this.updateScrollerView();
		}
		return value;
	}
	,set_scrollerY: function(value) {
		this.scrollerY = value;
		if(this.__mouseIsOver) {
			this.updateScrollerView();
		}
		return value;
	}
	,set_scroller: function(value) {
		this.set_scrollerX(value);
		this.set_scrollerY(value);
		return value;
	}
	,get_scrollY: function() {
		return this.getElement().scrollTop();
	}
	,set_scrollY: function(value) {
		this.getElement().scrollTop(value);
		return value;
	}
	,get_scrollX: function() {
		return this.getElement().scrollLeft();
	}
	,set_scrollX: function(value) {
		this.getElement().scrollLeft(value);
		return value;
	}
	,get_maxScrollY: function() {
		var result = parseFloat(this.getElement().prop("scrollHeight"));
		if(result == null || isNaN(result)) {
			result = 0;
		}
		return result;
	}
	,get_maxScrollX: function() {
		var result = parseFloat(this.getElement().prop("scrollWidth"));
		if(result == null || isNaN(result)) {
			result = 0;
		}
		return result;
	}
	,__class__: priori_view_container_PriScrollableContainer
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{get_maxScrollX:"get_maxScrollX",get_maxScrollY:"get_maxScrollY",set_scrollX:"set_scrollX",get_scrollX:"get_scrollX",set_scrollY:"set_scrollY",get_scrollY:"get_scrollY",set_scrollerY:"set_scrollerY",set_scrollerX:"set_scrollerX",set_scroller:"set_scroller"})
});
var priori_view_grid_PriDataGrid = function() {
	this.lastRenderTime = 0;
	this.asyncRow = true;
	priori_view_container_PriGroup.call(this);
	this.set_rowHeight(40);
	this.set_headerHeight(40);
	this.verticalLinesList = [];
	this.set_selection(null);
	this.sort = new priori_view_grid_column_PriGridColumnSort();
	this.header = new priori_view_grid_header_PriGridHeader();
	this.scrollerContainer = new priori_view_container_PriScrollableContainer();
	this.scrollerContainer.addEventListener("prievent_base_scroll",$bind(this,this.onScroll));
	this.__renderRowIndexStart = -1;
	this.__renderRowIndexEnd = -1;
	this.__data_originalList = [];
	this.__data_waitingInsertion = [];
	this.__usedRows = [];
	this.__pooledRows = [];
	this.__rowContainer = new priori_view_container_PriContainer();
	this.__rowContainer.set_clipping(false);
	this.set_horizontalGridLines(true);
	this.set_verticalGridLines(true);
	this.set_horizontalGridLineColor(14540253);
	this.set_verticalGridLineColor(14540253);
	this.set_border(new priori_style_border_PriBorderStyle());
	this.set_rowPointer(true);
	this.set_rowColorSequence([16777215]);
	this.set_bgColor(16777215);
	this.addEventListener(priori_view_grid_PriDataGridEvent.SORT,$bind(this,this.onDataGridSort));
};
priori_view_grid_PriDataGrid.__name__ = true;
priori_view_grid_PriDataGrid.__super__ = priori_view_container_PriGroup;
priori_view_grid_PriDataGrid.prototype = $extend(priori_view_container_PriGroup.prototype,{
	set_scrollY: function(value) {
		if(this.scrollerContainer != null) {
			this.scrollerContainer.set_scrollY(value);
		}
		return value;
	}
	,get_scrollY: function() {
		if(this.scrollerContainer != null) {
			return this.scrollerContainer.get_scrollY();
		}
		return 0;
	}
	,get_maxScrollY: function() {
		if(this.scrollerContainer != null) {
			return this.scrollerContainer.get_maxScrollY();
		}
		return 0;
	}
	,onDataGridSort: function(e) {
		e.stopBubble();
		e.stopPropagation();
		var field = e.data.field;
		var order = e.data.order;
		this.sort.order = order;
		this.sort.dataField = field;
		this.set_data(this.__data_originalList);
	}
	,resetSort: function() {
		this.header.applySort("",priori_view_grid_column_PriGridColumnSortOrder.NONE);
	}
	,applySort: function(field,order) {
		this.header.applySort(field,order);
	}
	,setup: function() {
		this.addChild(this.header);
		this.addChild(this.scrollerContainer);
		this.scrollerContainer.addChild(this.__rowContainer);
	}
	,paint: function() {
		this.header.set_width(this.get_width());
		this.header.set_height(this.headerHeight);
		this.scrollerContainer.set_x(0);
		this.scrollerContainer.set_y(this.headerHeight);
		this.scrollerContainer.set_width(this.get_width());
		this.scrollerContainer.set_height(this.get_height() - this.headerHeight);
		this.generateRows();
		this.organizeRowPosition();
		var i = 0;
		var n = this.__usedRows.length;
		var rowSizes = priori_view_grid_column_PriGridColumnSize.calculate(this.get_width(),this.columns);
		while(i < n) {
			this.__usedRows[i].set_x(0);
			this.__usedRows[i].applyPreCalcColumns(rowSizes);
			this.__usedRows[i].set_width(this.get_width());
			this.__usedRows[i].validate();
			++i;
		}
		this.__rowContainer.set_x(0);
		this.__rowContainer.set_y(0);
		this.__rowContainer.set_width(this.scrollerContainer.get_width());
		this.updateVerticalLines();
	}
	,updateRowContainerHeight: function() {
		var rowHeightCalculated = this.calculateRowHeight();
		var n = this.data == null ? 0 : this.data.length;
		var rowContainerHeight = 0;
		if(this.horizontalGridLines) {
			rowContainerHeight = n * (rowHeightCalculated.all + 1);
			if(this.__rowAutoSize || rowContainerHeight > this.scrollerContainer.get_height()) {
				--rowContainerHeight;
			}
		} else {
			rowContainerHeight = n * rowHeightCalculated.all;
		}
		this.__rowContainer.set_height(rowContainerHeight);
	}
	,organizeRowPosition: function() {
		var i = 0;
		var n = this.__usedRows.length;
		var rowHeightCalculated = this.calculateRowHeight();
		while(i < n) {
			var index = this.__usedRows[i].rowIndex;
			if(this.horizontalGridLines) {
				this.__usedRows[i].set_y((rowHeightCalculated.all + 1) * index);
			} else {
				this.__usedRows[i].set_y(rowHeightCalculated.all * index);
			}
			this.__usedRows[i].set_height(index == n - 1 ? rowHeightCalculated.last : rowHeightCalculated.all);
			this.__usedRows[i].set_rowColor(this.rowColorSequence[index % this.rowColorSequence.length]);
			++i;
		}
		this.updateRowContainerHeight();
	}
	,updateVerticalLines: function() {
		var columnSize = priori_view_grid_column_PriGridColumnSize.calculate(this.get_width(),this.columns);
		var oldVerticalLines = this.verticalLinesList;
		this.verticalLinesList = [];
		if(this.verticalGridLines) {
			var lastX = 0;
			var h = this.get_height();
			var _g = 0;
			var _g1 = columnSize.widthList.length - 1;
			while(_g < _g1) {
				var i = _g++;
				this.verticalLinesList.push(oldVerticalLines.length > 0 ? oldVerticalLines.shift() : new priori_view_PriDisplay());
				this.verticalLinesList[i].set_width(1);
				this.verticalLinesList[i].set_height(h);
				lastX += columnSize.widthList[i];
				this.verticalLinesList[i].set_x(lastX);
				this.verticalLinesList[i].set_bgColor(this.verticalGridLineColor);
			}
		}
		this.addChildList(this.verticalLinesList);
		this.removeChildList(oldVerticalLines);
	}
	,getTotalRows: function() {
		return this.data.length;
	}
	,getTotalCols: function() {
		return this.columns.length;
	}
	,selectRow: function(rowIndex,color) {
		if(color == null) {
			color = 65280;
		}
		this.set_selection([new priori_view_grid_PriDataGridInterval(0,rowIndex,999999999,1,color)]);
	}
	,selectCol: function(colIndex,color) {
		if(color == null) {
			color = 65280;
		}
		this.set_selection([new priori_view_grid_PriDataGridInterval(colIndex,0,1,999999999,color)]);
	}
	,set_selection: function(value) {
		this.selection = value;
		var i = 0;
		var n = this.__usedRows == null ? 0 : this.__usedRows.length;
		while(i < n) {
			this.__usedRows[i].set_selection(value);
			++i;
		}
		return value;
	}
	,set_rowColorSequence: function(value) {
		if(value.length > 0) {
			this.rowColorSequence = value;
		} else {
			this.rowColorSequence = [16777215];
		}
		this.organizeRowPosition();
		return value;
	}
	,set_rowPointer: function(value) {
		this.rowPointer = value;
		var i = 0;
		var n = this.__usedRows.length;
		while(i < n) {
			this.__usedRows[i].set_pointer(value);
			++i;
		}
		return value;
	}
	,set_verticalGridLines: function(value) {
		this.verticalGridLines = value;
		this.invalidate();
		return value;
	}
	,set_verticalGridLineColor: function(value) {
		this.verticalGridLineColor = value;
		this.invalidate();
		return value;
	}
	,set_horizontalGridLines: function(value) {
		this.horizontalGridLines = value;
		this.invalidate();
		return value;
	}
	,set_horizontalGridLineColor: function(value) {
		this.horizontalGridLineColor = value;
		this.__rowContainer.set_bgColor(value);
		return value;
	}
	,set_rowHeight: function(value) {
		this.rowHeight = value;
		if(value == null || value < 0) {
			this.__rowAutoSize = true;
		} else {
			this.__rowAutoSize = false;
		}
		this.invalidate();
		return value;
	}
	,set_headerHeight: function(value) {
		if(value == null || value < 0) {
			this.headerHeight = 40;
		} else {
			this.headerHeight = value;
		}
		this.invalidate();
		return value;
	}
	,set_data: function(value) {
		this.__renderRowIndexStart = -1;
		this.__renderRowIndexEnd = -1;
		this.__data_originalList = value;
		var sortedList = this.sort.sort(value.slice());
		this.data = sortedList.slice();
		if(this.canPaint()) {
			this.generateRows();
		}
		return value;
	}
	,set_columns: function(value) {
		this.columns = value;
		this.sort.dataField = "";
		this.sort.order = priori_view_grid_column_PriGridColumnSortOrder.NONE;
		this.applyColumnToRows();
		this.applyColumnToHeader();
		this.updateVerticalLines();
		this.set_data(this.__data_originalList);
		return value;
	}
	,applyColumnToHeader: function() {
		this.header.set_columns(this.columns);
	}
	,applyColumnToRows: function() {
		var i = 0;
		var n = this.__usedRows.length;
		while(i < n) {
			this.__usedRows[i].set_columns(this.columns);
			++i;
		}
	}
	,calculateRowHeight: function() {
		if(this.__rowAutoSize) {
			if(this.data == null) {
				return { all : 0, last : 0};
			}
			var freeSpace = this.scrollerContainer.get_height() - (this.horizontalGridLines ? this.data.length - 1 : 0);
			var all = Math.floor(freeSpace / this.data.length);
			var last = Math.floor(freeSpace - all * (this.data.length - 1));
			return { all : all, last : last};
		}
		return { all : this.rowHeight, last : this.rowHeight};
	}
	,onScroll: function(e) {
		this.generateRows();
	}
	,generateRows: function() {
		if(this.__timer_timeToGenerate != null) {
			this.__timer_timeToGenerate.stop();
			this.__timer_timeToGenerate = null;
		}
		if(priori_system_PriDevice.browser() == priori_system_PriDeviceBrowser.MOZILLA) {
			this.updateRowContainerHeight();
			if(new Date().getTime() - this.lastRenderTime > 300) {
				this.generateRowsRun();
			} else {
				this.__timer_timeToGenerate = haxe_Timer.delay($bind(this,this.generateRowsRun),30);
			}
		} else {
			this.generateRowsRun();
		}
	}
	,generateRowsRun: function() {
		this.lastRenderTime = new Date().getTime();
		var scrollPos = this.scrollerContainer.get_scrollY();
		var viewHeight = this.scrollerContainer.get_height();
		var itemHeight = this.horizontalGridLines ? 1 : 0;
		var itemHeight1 = this.calculateRowHeight().all + itemHeight;
		var totalItens = this.data == null ? 0 : this.data.length;
		var offsetItens = 4;
		var itensPerView = Math.floor(viewHeight / itemHeight1) + offsetItens;
		var i = 0;
		var n = 0;
		i = Math.floor(scrollPos / itemHeight1 - offsetItens / 2);
		n = i + itensPerView;
		if(i < 0) {
			i = 0;
		}
		if(n > totalItens) {
			n = totalItens;
		}
		if(i != this.__renderRowIndexStart || n != this.__renderRowIndexEnd) {
			this.__renderRowIndexStart = i;
			this.__renderRowIndexEnd = n;
			this.__data_waitingInsertion = [];
			while(i < n) {
				this.__data_waitingInsertion.push(this.data[i]);
				++i;
			}
			var _g = 0;
			var _g1 = this.__usedRows.length;
			while(_g < _g1) {
				var j = _g++;
				this.__pooledRows.unshift(this.__usedRows[j]);
			}
			this.__usedRows = [];
			this.generateRowsBatch(this.__renderRowIndexStart);
		}
	}
	,generateRowsBatch: function(indexStart) {
		var _gthis = this;
		this.killInsertionTimer();
		var maxTime = 150;
		var startTime = new Date().getTime();
		var i = 0;
		var n = this.__data_waitingInsertion.length;
		var gridRow = null;
		var rowSizes = priori_view_grid_column_PriGridColumnSize.calculate(this.get_width(),this.columns);
		var rowHeightCalculated = this.calculateRowHeight();
		while(i < n) {
			var item = this.__data_waitingInsertion.shift();
			if(this.__pooledRows.length > 0) {
				gridRow = this.__pooledRows.shift();
			} else {
				gridRow = new priori_view_grid_row_PriGridRow();
			}
			this.__usedRows.push(gridRow);
			gridRow.applyPreCalcColumns(rowSizes);
			gridRow.set_rowIndex(indexStart);
			gridRow.set_columns(this.columns);
			gridRow.set_data(item);
			gridRow.set_width(this.get_width());
			gridRow.set_height(indexStart == this.data.length - 1 ? rowHeightCalculated.last : rowHeightCalculated.all);
			gridRow.set_selection(this.selection);
			gridRow.set_pointer(this.rowPointer);
			if(gridRow.get_parent() == null) {
				this.__rowContainer.addChild(gridRow);
			}
			gridRow.validate();
			++i;
			indexStart += 1;
			if(this.asyncRow == true && new Date().getTime() - startTime > maxTime) {
				i = n;
			}
		}
		this.organizeRowPosition();
		if(this.__data_waitingInsertion.length > 0) {
			this.__timer_insetionFlow = haxe_Timer.delay(function() {
				_gthis.generateRowsBatch(indexStart);
			},priori_app_PriApp.g().getMSUptate());
		} else {
			this.removeRows(this.__pooledRows);
		}
	}
	,killInsertionTimer: function() {
		if(this.__timer_insetionFlow != null) {
			this.__timer_insetionFlow.stop();
			this.__timer_insetionFlow = null;
		}
	}
	,removeRows: function(rowListToRemove) {
		this.killInsertionTimer();
		var rowList = rowListToRemove == null ? this.__usedRows : rowListToRemove;
		var i = 0;
		var n = rowList.length;
		while(i < n) {
			var item = rowList.shift();
			this.__pooledRows.push(item);
			this.__rowContainer.removeChild(item);
			++i;
		}
	}
	,kill: function() {
		this.removeRows();
		if(this.__timer_timeToGenerate != null) {
			this.__timer_timeToGenerate.stop();
			this.__timer_timeToGenerate = null;
		}
		var i = 0;
		var n = this.__pooledRows.length;
		while(i < n) {
			this.__pooledRows[i].kill();
			++i;
		}
		this.__pooledRows = [];
		priori_view_container_PriGroup.prototype.kill.call(this);
	}
	,__class__: priori_view_grid_PriDataGrid
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{get_maxScrollY:"get_maxScrollY",set_scrollY:"set_scrollY",get_scrollY:"get_scrollY",set_rowColorSequence:"set_rowColorSequence",set_rowPointer:"set_rowPointer",set_horizontalGridLineColor:"set_horizontalGridLineColor",set_horizontalGridLines:"set_horizontalGridLines",set_verticalGridLineColor:"set_verticalGridLineColor",set_verticalGridLines:"set_verticalGridLines",set_headerHeight:"set_headerHeight",set_rowHeight:"set_rowHeight",set_columns:"set_columns",set_data:"set_data",set_selection:"set_selection"})
});
var priori_view_grid_PriDataGridEvent = function(type,propagate,bubble,data) {
	this.colIndex = 0;
	this.rowIndex = 0;
	priori_event_PriEvent.call(this,type,propagate,bubble,data);
};
priori_view_grid_PriDataGridEvent.__name__ = true;
priori_view_grid_PriDataGridEvent.__super__ = priori_event_PriEvent;
priori_view_grid_PriDataGridEvent.prototype = $extend(priori_event_PriEvent.prototype,{
	clone: function() {
		var clone = new priori_view_grid_PriDataGridEvent(this.type,this.propagate,this.bubble,this.data);
		clone.target = this.target;
		clone.currentTarget = this.currentTarget;
		clone.data = this.data;
		clone.rowIndex = this.rowIndex;
		clone.colIndex = this.colIndex;
		return clone;
	}
	,__class__: priori_view_grid_PriDataGridEvent
});
var priori_view_grid_PriDataGridInterval = function(col,row,colLen,rowLen,color) {
	if(color == null) {
		color = 65280;
	}
	if(rowLen == null) {
		rowLen = 1;
	}
	if(colLen == null) {
		colLen = 1;
	}
	if(row == null) {
		row = 0;
	}
	if(col == null) {
		col = 0;
	}
	this.col = col;
	this.row = row;
	this.colLen = colLen;
	this.rowLen = rowLen;
	this.color = color;
};
priori_view_grid_PriDataGridInterval.__name__ = true;
priori_view_grid_PriDataGridInterval.prototype = {
	toString: function() {
		return "Col : " + this.col + ", Row : " + this.row + ", Color : " + this.color;
	}
	,contains: function(col,row) {
		if(row >= this.row && row < this.row + this.rowLen && (col >= this.col && col < this.col + this.colLen)) {
			return true;
		}
		return false;
	}
	,__class__: priori_view_grid_PriDataGridInterval
};
var priori_view_grid_cell_PriGridCellRendererDefault = function() {
	priori_view_grid_cell_PriGridCellRenderer.call(this);
	this.set_clipping(true);
};
priori_view_grid_cell_PriGridCellRendererDefault.__name__ = true;
priori_view_grid_cell_PriGridCellRendererDefault.__super__ = priori_view_grid_cell_PriGridCellRenderer;
priori_view_grid_cell_PriGridCellRendererDefault.prototype = $extend(priori_view_grid_cell_PriGridCellRenderer.prototype,{
	update: function() {
		if(this.canPaint()) {
			this.label.set_text(this.get_value());
			this.invalidate();
			this.validate();
		}
	}
	,setup: function() {
		this.label = new priori_view_text_PriText();
		this.label.set_text(this.get_value());
		this.label.set_fontStyle(new priori_style_font_PriFontStyle());
		this.addChild(this.label);
	}
	,paint: function() {
		var space = 10;
		this.label.set_x(space);
		this.label.set_centerY(this.get_height() / 2);
	}
	,__class__: priori_view_grid_cell_PriGridCellRendererDefault
});
var priori_view_grid_column_PriGridColumn = function(title,dataField,cellRenderer,headerRenderer,sizeType,width,cellRendererParams,headerRendererParams,sortable) {
	if(width == null) {
		width = 100;
	}
	if(cellRenderer == null) {
		this.cellRenderer = priori_view_grid_cell_PriGridCellRendererDefault;
	} else {
		this.cellRenderer = cellRenderer;
	}
	if(headerRenderer == null) {
		this.headerRenderer = priori_view_grid_header_PriGridHeaderRendererDefault;
	} else {
		this.headerRenderer = headerRenderer;
	}
	if(sizeType == null) {
		this.sizeType = priori_view_grid_column_PriGridColumnSizeType.FIT;
	} else {
		this.sizeType = sizeType;
	}
	if(sortable == null) {
		this.sortable = true;
	} else {
		this.sortable = sortable;
	}
	this.cellRendererParams = cellRendererParams;
	this.headerRendererParams = headerRendererParams;
	this.headerSortCaret = priori_view_grid_header_PriGridHeaderSortCaretDefault;
	this.width = width;
	this.title = title;
	this.dataField = dataField;
};
priori_view_grid_column_PriGridColumn.__name__ = true;
priori_view_grid_column_PriGridColumn.prototype = {
	__class__: priori_view_grid_column_PriGridColumn
};
var priori_view_grid_column_PriGridColumnSizeType = $hxEnums["priori.view.grid.column.PriGridColumnSizeType"] = { __ename__ : true, __constructs__ : ["FIXED","FIT"]
	,FIXED: {_hx_index:0,__enum__:"priori.view.grid.column.PriGridColumnSizeType",toString:$estr}
	,FIT: {_hx_index:1,__enum__:"priori.view.grid.column.PriGridColumnSizeType",toString:$estr}
};
var priori_view_grid_column_PriGridColumnSize = function() {
	this.fitWidth = 0;
	this.widthList = [];
};
priori_view_grid_column_PriGridColumnSize.__name__ = true;
priori_view_grid_column_PriGridColumnSize.calculate = function(width,columnData) {
	var result = new priori_view_grid_column_PriGridColumnSize();
	if(columnData != null) {
		var fixedColumnsWidth = 0;
		var totalFitColumns = 0;
		var i = 0;
		var n = columnData.length;
		while(i < n) {
			if(columnData[i].sizeType == priori_view_grid_column_PriGridColumnSizeType.FIT) {
				++totalFitColumns;
				result.widthList.push(null);
			} else if(columnData[i].sizeType == priori_view_grid_column_PriGridColumnSizeType.FIXED) {
				fixedColumnsWidth += Math.floor(columnData[i].width);
				result.widthList.push(Math.floor(columnData[i].width));
			}
			++i;
		}
		if(totalFitColumns > 0) {
			result.fitWidth = Math.floor((width - fixedColumnsWidth) / totalFitColumns);
			if(result.fitWidth < 0) {
				result.fitWidth = 0;
			}
		}
		i = 0;
		while(i < n) {
			if(result.widthList[i] == null) {
				result.widthList[i] = result.fitWidth;
			}
			++i;
		}
		i = 0;
		var validateFinalSize = 0;
		while(i < n) {
			validateFinalSize += result.widthList[i];
			++i;
		}
		if(validateFinalSize < width) {
			result.widthList[n - 1] += width - validateFinalSize;
		}
	}
	return result;
};
priori_view_grid_column_PriGridColumnSize.prototype = {
	__class__: priori_view_grid_column_PriGridColumnSize
};
var priori_view_grid_column_PriGridColumnSortOrder = $hxEnums["priori.view.grid.column.PriGridColumnSortOrder"] = { __ename__ : true, __constructs__ : ["ASC","DESC","NONE"]
	,ASC: {_hx_index:0,__enum__:"priori.view.grid.column.PriGridColumnSortOrder",toString:$estr}
	,DESC: {_hx_index:1,__enum__:"priori.view.grid.column.PriGridColumnSortOrder",toString:$estr}
	,NONE: {_hx_index:2,__enum__:"priori.view.grid.column.PriGridColumnSortOrder",toString:$estr}
};
var priori_view_grid_column_PriGridColumnSort = function() {
	this.dataField = "";
	this.order = priori_view_grid_column_PriGridColumnSortOrder.ASC;
};
priori_view_grid_column_PriGridColumnSort.__name__ = true;
priori_view_grid_column_PriGridColumnSort.prototype = {
	sort: function(data) {
		var _gthis = this;
		if(this.dataField == "" || this.order == priori_view_grid_column_PriGridColumnSortOrder.NONE) {
			return data;
		}
		var direction = this.order == priori_view_grid_column_PriGridColumnSortOrder.ASC ? 1 : -1;
		data.sort(function(x,y) {
			var vx = Reflect.getProperty(x,_gthis.dataField);
			var vy = Reflect.getProperty(y,_gthis.dataField);
			if(((vx) instanceof Date)) {
				vx = (js_Boot.__cast(vx , Date)).getTime();
			}
			if(((vy) instanceof Date)) {
				vy = (js_Boot.__cast(vy , Date)).getTime();
			}
			if(typeof(vx) != "number" && !(typeof(vx) == "number" && ((vx | 0) === vx))) {
				vx = Std.string(vx).toLowerCase();
				vy = Std.string(vy).toLowerCase();
			}
			if(vx > vy) {
				return direction;
			}
			if(vy > vx) {
				return -1 * direction;
			}
			return 0;
		});
		return data;
	}
	,__class__: priori_view_grid_column_PriGridColumnSort
};
var priori_view_grid_header_PriGridHeader = function() {
	priori_view_container_PriGroup.call(this);
	this.headerList = [];
	this.headerCaret = [];
};
priori_view_grid_header_PriGridHeader.__name__ = true;
priori_view_grid_header_PriGridHeader.__super__ = priori_view_container_PriGroup;
priori_view_grid_header_PriGridHeader.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
		this.set_bgColor(16777215);
	}
	,paint: function() {
		var w = this.get_width();
		var h = this.get_height();
		var columnSizes = priori_view_grid_column_PriGridColumnSize.calculate(w,this.columns);
		var i = 0;
		var n = this.headerList.length;
		while(i < n) {
			this.headerList[i].set_width(columnSizes.widthList[i]);
			this.headerList[i].set_height(h);
			if(i == 0) {
				this.headerList[i].set_x(0);
			} else {
				this.headerList[i].set_x(this.headerList[i - 1].get_maxX());
			}
			this.headerList[i].set_y(0);
			if(this.headerCaret[i] != null) {
				this.headerCaret[i].set_maxX(this.headerList[i].get_maxX() - 3);
				this.headerCaret[i].set_y(0);
				this.headerCaret[i].set_height(this.headerList[i].get_height());
			}
			++i;
		}
	}
	,set_columns: function(value) {
		this.columns = value;
		this.generateHeaders();
		return value;
	}
	,applySort: function(field,order) {
		var i = 0;
		var n = this.columns == null ? 0 : this.columns.length;
		var caret = null;
		while(i < n) {
			if(this.columns[i].dataField == field && this.columns[i].sortable) {
				caret = this.headerCaret[i];
				caret.set_order(order);
			} else if(this.headerCaret[i] != null) {
				this.headerCaret[i].set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
			}
			++i;
		}
		this.dispatchEvent(new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.SORT,false,true,{ field : field, order : order}));
		this.invalidate();
		this.validate();
	}
	,onCaretClick: function(e) {
		var caret = js_Boot.__cast(e.currentTarget , priori_view_grid_header_PriGridHeaderSortCaret);
		var index = -1;
		var i = 0;
		var n = this.headerCaret.length;
		while(i < n) {
			if(this.headerCaret[i] != null) {
				if(this.headerCaret[i] == caret) {
					index = i;
					this.headerCaret[i].toogle();
				} else {
					this.headerCaret[i].set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
				}
			}
			++i;
		}
		if(index > -1) {
			this.dispatchEvent(new priori_view_grid_PriDataGridEvent(priori_view_grid_PriDataGridEvent.SORT,false,true,{ field : this.columns[index].dataField, order : this.headerCaret[index].order}));
		}
		this.invalidate();
		this.validate();
	}
	,generateHeaders: function() {
		this.killHeaders();
		if(this.columns != null) {
			var _g = 0;
			var _g1 = this.columns.length;
			while(_g < _g1) {
				var i = _g++;
				var headerRenderer = this.columns[i].headerRenderer;
				var headerParams = this.columns[i].headerRendererParams;
				var header = helper_pool_PoolGridHead.instance.createCell(headerRenderer,headerParams);
				header.set_title(this.columns[i].title);
				this.headerList.push(header);
				if(this.columns[i].sortable) {
					this.headerCaret.push(Type.createInstance(this.columns[i].headerSortCaret,[]));
					this.headerCaret[i].addEventListener("click",$bind(this,this.onCaretClick));
				} else {
					this.headerCaret.push(null);
				}
			}
		}
		this.addChildList(this.headerList);
		this.addChildList(this.headerCaret);
		this.invalidate();
		this.validate();
	}
	,killHeaders: function() {
		this.removeChildList(this.headerList);
		var _g = 0;
		var _g1 = this.headerList.length;
		while(_g < _g1) {
			var i = _g++;
			helper_pool_PoolGridHead.instance.returnCell(this.headerList[i]);
		}
		this.headerList = [];
		this.removeChildList(this.headerCaret);
		this.headerCaret = [];
	}
	,__class__: priori_view_grid_header_PriGridHeader
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_columns:"set_columns"})
});
var priori_view_grid_header_PriGridHeaderRenderer = function() {
	priori_view_container_PriGroup.call(this);
};
priori_view_grid_header_PriGridHeaderRenderer.__name__ = true;
priori_view_grid_header_PriGridHeaderRenderer.__super__ = priori_view_container_PriGroup;
priori_view_grid_header_PriGridHeaderRenderer.prototype = $extend(priori_view_container_PriGroup.prototype,{
	update: function() {
	}
	,set_title: function(value) {
		this.title = value;
		this.update();
		return value;
	}
	,kill: function() {
	}
	,__class__: priori_view_grid_header_PriGridHeaderRenderer
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_title:"set_title"})
});
var priori_view_grid_header_PriGridHeaderRendererDefault = function() {
	priori_view_grid_header_PriGridHeaderRenderer.call(this);
};
priori_view_grid_header_PriGridHeaderRendererDefault.__name__ = true;
priori_view_grid_header_PriGridHeaderRendererDefault.__super__ = priori_view_grid_header_PriGridHeaderRenderer;
priori_view_grid_header_PriGridHeaderRendererDefault.prototype = $extend(priori_view_grid_header_PriGridHeaderRenderer.prototype,{
	update: function() {
		if(this.canPaint()) {
			this.label.set_text(this.title);
		}
	}
	,setup: function() {
		this.set_bgColor(13421772);
		this.label = new priori_view_text_PriText();
		this.label.set_autoSize(false);
		this.label.set_fontStyle(new priori_style_font_PriFontStyle());
		this.label.set_text(this.title);
		this.label.set_height(null);
		this.addChild(this.label);
	}
	,paint: function() {
		var space = 10;
		this.label.set_x(space);
		this.label.set_centerY(this.get_height() / 2);
		this.label.set_width(this.get_width() - space * 2);
	}
	,__class__: priori_view_grid_header_PriGridHeaderRendererDefault
});
var priori_view_grid_header_PriGridHeaderSortCaret = function() {
	priori_view_container_PriGroup.call(this);
	this.set_width(null);
	this.set_height(null);
	this.set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
};
priori_view_grid_header_PriGridHeaderSortCaret.__name__ = true;
priori_view_grid_header_PriGridHeaderSortCaret.__super__ = priori_view_container_PriGroup;
priori_view_grid_header_PriGridHeaderSortCaret.prototype = $extend(priori_view_container_PriGroup.prototype,{
	toogle: function() {
		if(this.order == priori_view_grid_column_PriGridColumnSortOrder.NONE) {
			this.set_order(priori_view_grid_column_PriGridColumnSortOrder.ASC);
		} else if(this.order == priori_view_grid_column_PriGridColumnSortOrder.ASC) {
			this.set_order(priori_view_grid_column_PriGridColumnSortOrder.DESC);
		} else if(this.order == priori_view_grid_column_PriGridColumnSortOrder.DESC) {
			this.set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
		}
	}
	,set_order: function(value) {
		this.order = value;
		this.invalidate();
		this.validate();
		return value;
	}
	,__class__: priori_view_grid_header_PriGridHeaderSortCaret
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_order:"set_order"})
});
var priori_view_grid_header_PriGridHeaderSortCaretDefault = function() {
	priori_view_grid_header_PriGridHeaderSortCaret.call(this);
	this.set_width(null);
	this.set_height(null);
	this.set_order(priori_view_grid_column_PriGridColumnSortOrder.NONE);
};
priori_view_grid_header_PriGridHeaderSortCaretDefault.__name__ = true;
priori_view_grid_header_PriGridHeaderSortCaretDefault.__super__ = priori_view_grid_header_PriGridHeaderSortCaret;
priori_view_grid_header_PriGridHeaderSortCaretDefault.prototype = $extend(priori_view_grid_header_PriGridHeaderSortCaret.prototype,{
	setup: function() {
		this.down = new priori_view_text_PriText();
		this.down.set_fontSize(10);
		this.down.set_text("▼");
		this.addChild(this.down);
		this.up = new priori_view_text_PriText();
		this.up.set_fontSize(10);
		this.up.set_text("▲");
		this.addChild(this.up);
	}
	,paint: function() {
		var curOrder = this.order;
		if(curOrder == priori_view_grid_column_PriGridColumnSortOrder.NONE) {
			this.up.set_alpha(1);
			this.down.set_alpha(1);
		} else if(curOrder == priori_view_grid_column_PriGridColumnSortOrder.ASC) {
			this.up.set_alpha(0.3);
			this.down.set_alpha(1);
		} else if(curOrder == priori_view_grid_column_PriGridColumnSortOrder.DESC) {
			this.up.set_alpha(1);
			this.down.set_alpha(0.3);
		}
		this.down.set_x(0);
		this.down.set_centerY(this.get_centerY());
		this.up.set_x(this.down.get_maxX() - 3);
		this.up.set_centerY(this.get_centerY());
		this.set_width(this.up.get_maxX());
	}
	,__class__: priori_view_grid_header_PriGridHeaderSortCaretDefault
});
var priori_view_grid_row_PriGridRow = function() {
	priori_view_container_PriGroup.call(this);
	this.set_selection(null);
	this.cellList = [];
	this.set_clipping(false);
	this.set_rowColor(16777215);
};
priori_view_grid_row_PriGridRow.__name__ = true;
priori_view_grid_row_PriGridRow.__super__ = priori_view_container_PriGroup;
priori_view_grid_row_PriGridRow.prototype = $extend(priori_view_container_PriGroup.prototype,{
	setup: function() {
	}
	,paint: function() {
		var h = this.get_height();
		var lastX = 0;
		if(this.preCalc != null && this.preCalc.widthList.length == this.cellList.length) {
			var _g = 0;
			var _g1 = this.cellList.length;
			while(_g < _g1) {
				var i = _g++;
				this.cellList[i].set_width(this.preCalc.widthList[i]);
				this.cellList[i].set_height(h);
				this.cellList[i].set_x(lastX);
				this.cellList[i].set_y(0);
				lastX += this.preCalc.widthList[i];
			}
		}
	}
	,applyPreCalcColumns: function(size) {
		this.preCalc = size;
	}
	,set_selection: function(value) {
		this.selection = value;
		this.updateSelection();
		return value;
	}
	,set_data: function(value) {
		this.data = value;
		this.updateData();
		return value;
	}
	,set_rowIndex: function(value) {
		this.rowIndex = value;
		this.updateSelection();
		return value;
	}
	,set_rowColor: function(value) {
		if(this.rowColor != value) {
			this.rowColor = value;
			this.set_bgColor(value);
		}
		return value;
	}
	,set_columns: function(value) {
		if(this.columns != value) {
			this.columns = value;
			this.generateCells();
		}
		return value;
	}
	,updateSelection: function() {
		if(this.cellList != null) {
			var i = 0;
			var n = this.cellList.length;
			while(i < n) {
				this.cellList[i].set_bgColor(null);
				++i;
			}
			if(this.selection != null && this.selection.length > 0) {
				i = 0;
				while(i < n) {
					var cell = this.cellList[i];
					var j = 0;
					var m = this.selection.length;
					while(j < m) {
						if(this.selection[j].contains(cell.get_colIndex(),cell.get_rowIndex())) {
							cell.set_bgColor(this.selection[j].color);
						}
						++j;
					}
					++i;
				}
			}
		}
	}
	,updateData: function() {
		var e = new priori_event_PriEvent("prievent_base_change",false,false,{ data : this.data, column : null, colIndex : null, rowIndex : this.rowIndex});
		var _g = 0;
		var _g1 = this.cellList.length;
		while(_g < _g1) {
			var i = _g++;
			e.data.column = this.columns[i];
			e.data.colIndex = i;
			this.cellList[i].dispatchEvent(e);
		}
		this.updateSelection();
	}
	,generateCells: function() {
		this.killCells();
		var _g = 0;
		var _g1 = this.columns.length;
		while(_g < _g1) {
			var i = _g++;
			var cellClass = this.columns[i].cellRenderer;
			var cellParams = this.columns[i].cellRendererParams;
			var cell = helper_pool_PoolGridCell.instance.createCell(cellClass,cellParams);
			this.cellList.push(cell);
		}
		this.addChildList(this.cellList);
		this.updateData();
	}
	,killCells: function() {
		this.removeChildList(this.cellList);
		var _g = 0;
		var _g1 = this.cellList.length;
		while(_g < _g1) {
			var i = _g++;
			helper_pool_PoolGridCell.instance.returnCell(this.cellList[i]);
		}
		this.cellList = [];
	}
	,__class__: priori_view_grid_row_PriGridRow
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_rowColor:"set_rowColor",set_rowIndex:"set_rowIndex",set_data:"set_data",set_selection:"set_selection",set_columns:"set_columns"})
});
var priori_view_layout_PriLayout = function() {
	priori_view_container_PriGroup.call(this);
	this.set_gap(10);
	this.set_alignType(priori_view_layout_PriLayoutAlignType.MIN);
	this.set_distributionType(priori_view_layout_PriLayoutDistributionType.NONE);
	this.set_autoSizeElements(false);
	this.set_autoSizeContainer(true);
};
priori_view_layout_PriLayout.__name__ = true;
priori_view_layout_PriLayout.__super__ = priori_view_container_PriGroup;
priori_view_layout_PriLayout.prototype = $extend(priori_view_container_PriGroup.prototype,{
	set_gap: function(value) {
		if(value != this.gap) {
			this.invalidate();
		}
		return this.gap = value;
	}
	,set_distributionType: function(value) {
		if(value != this.distributionType) {
			this.invalidate();
			this.validate();
		}
		return this.distributionType = value;
	}
	,set_alignType: function(value) {
		if(value != this.alignType) {
			this.invalidate();
			this.validate();
		}
		return this.alignType = value;
	}
	,set_autoSizeElements: function(value) {
		if(value != this.autoSizeElements) {
			this.invalidate();
			this.validate();
		}
		return this.autoSizeElements = value;
	}
	,set_autoSizeContainer: function(value) {
		if(value != this.autoSizeContainer) {
			this.invalidate();
			this.validate();
		}
		return this.autoSizeContainer = value;
	}
	,__class__: priori_view_layout_PriLayout
	,__properties__: $extend(priori_view_container_PriGroup.prototype.__properties__,{set_autoSizeContainer:"set_autoSizeContainer",set_autoSizeElements:"set_autoSizeElements",set_distributionType:"set_distributionType",set_alignType:"set_alignType",set_gap:"set_gap"})
});
var priori_view_layout_PriHorizontalLayout = function() {
	priori_view_layout_PriLayout.call(this);
};
priori_view_layout_PriHorizontalLayout.__name__ = true;
priori_view_layout_PriHorizontalLayout.__super__ = priori_view_layout_PriLayout;
priori_view_layout_PriHorizontalLayout.prototype = $extend(priori_view_layout_PriLayout.prototype,{
	paint: function() {
		var i = 0;
		var n = this.get_numChildren();
		var gap = this.gap;
		var lastX = gap;
		var totalSpace = this.get_width();
		var availableSpace = totalSpace - this.gap * (n - 1);
		var spacePerItem = availableSpace / n;
		var lastItemSize = totalSpace - (spacePerItem * (n - 1) + this.gap * (n - 1));
		while(i < n) {
			this.getChild(i).set_x(lastX);
			if(this.autoSizeElements) {
				this.getChild(i).set_height(this.get_height() - gap * 2);
				if(((this.getChild(i)) instanceof priori_view_container_PriGroup)) {
					(js_Boot.__cast(this.getChild(i) , priori_view_container_PriGroup)).validate();
				}
			}
			if(this.distributionType == priori_view_layout_PriLayoutDistributionType.FIT) {
				this.getChild(i).set_width(i == n - 1 ? totalSpace : spacePerItem);
			}
			if(this.alignType == priori_view_layout_PriLayoutAlignType.MIN) {
				this.getChild(i).set_y(gap);
			} else if(this.alignType == priori_view_layout_PriLayoutAlignType.CENTER) {
				this.getChild(i).set_centerY(this.get_height() / 2);
			} else if(this.alignType == priori_view_layout_PriLayoutAlignType.MAX) {
				this.getChild(i).set_maxY(this.get_height() - gap);
			}
			lastX = this.getChild(i).get_maxX() + gap;
			++i;
		}
		if(this.autoSizeContainer) {
			this.set_width(lastX);
		}
	}
	,__class__: priori_view_layout_PriHorizontalLayout
});
var priori_view_layout_PriLayoutAlignType = $hxEnums["priori.view.layout.PriLayoutAlignType"] = { __ename__ : true, __constructs__ : ["MIN","CENTER","MAX"]
	,MIN: {_hx_index:0,__enum__:"priori.view.layout.PriLayoutAlignType",toString:$estr}
	,CENTER: {_hx_index:1,__enum__:"priori.view.layout.PriLayoutAlignType",toString:$estr}
	,MAX: {_hx_index:2,__enum__:"priori.view.layout.PriLayoutAlignType",toString:$estr}
};
var priori_view_layout_PriLayoutDistributionType = $hxEnums["priori.view.layout.PriLayoutDistributionType"] = { __ename__ : true, __constructs__ : ["NONE","FIT"]
	,NONE: {_hx_index:0,__enum__:"priori.view.layout.PriLayoutDistributionType",toString:$estr}
	,FIT: {_hx_index:1,__enum__:"priori.view.layout.PriLayoutDistributionType",toString:$estr}
};
var priori_view_layout_PriVerticalLayout = function() {
	priori_view_layout_PriLayout.call(this);
};
priori_view_layout_PriVerticalLayout.__name__ = true;
priori_view_layout_PriVerticalLayout.__super__ = priori_view_layout_PriLayout;
priori_view_layout_PriVerticalLayout.prototype = $extend(priori_view_layout_PriLayout.prototype,{
	paint: function() {
		var i = 0;
		var n = this.get_numChildren();
		var gap = this.gap;
		var lastY = gap;
		var totalSpace = this.get_height();
		var availableSpace = totalSpace - this.gap * (n - 1);
		var spacePerItem = availableSpace / n;
		var lastItemSize = totalSpace - (spacePerItem * (n - 1) + this.gap * (n - 1));
		while(i < n) {
			this.getChild(i).set_y(lastY);
			if(this.autoSizeElements) {
				this.getChild(i).set_width(this.get_width() - gap * 2);
				if(((this.getChild(i)) instanceof priori_view_container_PriGroup)) {
					(js_Boot.__cast(this.getChild(i) , priori_view_container_PriGroup)).validate();
				}
			}
			if(this.distributionType == priori_view_layout_PriLayoutDistributionType.FIT) {
				this.getChild(i).set_height(i == n - 1 ? totalSpace : spacePerItem);
			}
			if(this.alignType == priori_view_layout_PriLayoutAlignType.MIN) {
				this.getChild(i).set_x(gap);
			} else if(this.alignType == priori_view_layout_PriLayoutAlignType.CENTER) {
				this.getChild(i).set_centerX(this.get_width() / 2);
			} else if(this.alignType == priori_view_layout_PriLayoutAlignType.MAX) {
				this.getChild(i).set_maxX(this.get_width() - gap);
			}
			lastY = this.getChild(i).get_maxY() + gap;
			++i;
		}
		if(this.autoSizeContainer) {
			this.set_height(lastY);
		}
	}
	,__class__: priori_view_layout_PriVerticalLayout
});
var priori_view_text_PriText = function() {
	this.dth = { text : "", fontSize : 14, autoSize : true, multiLine : false, selectable : false, ellipsis : true, editable : false};
	priori_view_PriDisplay.call(this);
	this.dh.height = null;
	this.dh.width = null;
};
priori_view_text_PriText.__name__ = true;
priori_view_text_PriText.__super__ = priori_view_PriDisplay;
priori_view_text_PriText.prototype = $extend(priori_view_PriDisplay.prototype,{
	get_text: function() {
		if(this.dth.editable) {
			this.dth.text = this.dh.jselement.innerText;
		}
		return this.dth.text;
	}
	,set_text: function(value) {
		this.dth.text = value;
		this.dh.jselement.innerText = value;
		return value;
	}
	,get_html: function() {
		return this.dh.jselement.innerHTML;
	}
	,set_html: function(value) {
		this.dh.jselement.innerHTML = value;
		this.dth.text = this.dh.jselement.innerText;
		return value;
	}
	,set_fontStyle: function(value) {
		this.fontStyle = value;
		if(value == null) {
			helper_browser_StyleHelper.applyCleanFontStyle(this.dh.jselement);
		} else {
			helper_browser_StyleHelper.applyFontStyle(this.dh.jselement,value);
		}
		return value;
	}
	,get_fontSize: function() {
		return this.dth.fontSize;
	}
	,set_fontSize: function(value) {
		if(this.dth.fontSize != value) {
			if(value == null) {
				this.dth.fontSize = 14;
				this.dh.jselement.style.fontSize = "" + 14 + "px";
			} else {
				this.dth.fontSize = value;
				this.dh.jselement.style.fontSize = (value | 0) + "px";
			}
		}
		return value;
	}
	,get_autoSize: function() {
		return this.dth.autoSize;
	}
	,set_autoSize: function(value) {
		if(this.dth.autoSize != value) {
			this.dth.autoSize = value;
			if(!this.dth.multiLine) {
				priori_view_PriDisplay.prototype.set_width.call(this,null);
			}
			if(this.dth.autoSize) {
				priori_view_PriDisplay.prototype.set_height.call(this,null);
			}
		}
		return value;
	}
	,get_ellipsis: function() {
		return this.dth.ellipsis;
	}
	,set_ellipsis: function(value) {
		if(this.dth.ellipsis != value) {
			this.dth.ellipsis = value;
			if(this.dth.ellipsis) {
				this.dh.jselement.style.textOverflow = "ellipsis";
			} else {
				this.dh.jselement.style.textOverflow = "";
			}
		}
		return value;
	}
	,get_multiLine: function() {
		return this.dth.multiLine;
	}
	,set_multiLine: function(value) {
		if(this.dth.multiLine != value) {
			this.dth.multiLine = value;
			if(value) {
				this.dh.jselement.style.whiteSpace = "";
			} else {
				this.dh.jselement.style.whiteSpace = "nowrap";
			}
		}
		return value;
	}
	,get_editable: function() {
		return this.dth.editable;
	}
	,set_editable: function(value) {
		if(this.dth.editable != value) {
			this.dth.editable = value;
			if(value) {
				this.dh.jselement.setAttribute("contentEditable","true");
				if(priori_system_PriDevice.browser() == priori_system_PriDeviceBrowser.MSIE) {
					this.dh.jselement.onkeydown = $bind(this,this.___onchange);
					this.dh.jselement.onkeyup = $bind(this,this.___onchange);
					this.dh.jselement.onpaste = $bind(this,this.___onchange);
				} else {
					this.dh.jselement.oninput = $bind(this,this.___onchange);
				}
			} else {
				this.dh.jselement.removeAttribute("contentEditable");
				this.dh.jselement.oninput = null;
				this.dh.jselement.onkeydown = null;
				this.dh.jselement.onkeyup = null;
				this.dh.jselement.onpaste = null;
			}
			if(this.dth.selectable || this.dth.editable) {
				this.__setSelectableField();
			} else {
				this.__setNotSelectableField();
			}
		}
		return value;
	}
	,___onchange: function() {
		this.dispatchEvent(new priori_event_PriEvent("prievent_base_change"));
	}
	,get_selectable: function() {
		return this.dth.selectable;
	}
	,set_selectable: function(value) {
		if(this.dth.selectable != value) {
			this.dth.selectable = value;
			if(this.dth.selectable || this.dth.editable) {
				this.__setSelectableField();
			} else {
				this.__setNotSelectableField();
			}
		}
		return value;
	}
	,__setSelectableField: function() {
		this.dh.jselement.style.setProperty("-webkit-touch-callout","default");
		this.dh.jselement.style.setProperty("-webkit-user-select","text");
		this.dh.jselement.style.setProperty("-khtml-user-select","text");
		this.dh.jselement.style.setProperty("-moz-user-select","text");
		this.dh.jselement.style.setProperty("-ms-user-select","text");
		this.dh.jselement.style.setProperty("user-select","text");
	}
	,__setNotSelectableField: function() {
		this.dh.jselement.style.removeProperty("-webkit-touch-callout");
		this.dh.jselement.style.removeProperty("-webkit-user-select");
		this.dh.jselement.style.removeProperty("-khtml-user-select");
		this.dh.jselement.style.removeProperty("-moz-user-select");
		this.dh.jselement.style.removeProperty("-ms-user-select");
		this.dh.jselement.style.removeProperty("user-select");
	}
	,set_width: function(value) {
		if(this.dth.autoSize == false || this.dth.multiLine == true) {
			priori_view_PriDisplay.prototype.set_width.call(this,value);
		}
		return value;
	}
	,set_height: function(value) {
		if(this.dth.autoSize == false) {
			priori_view_PriDisplay.prototype.set_height.call(this,value);
		}
		return value;
	}
	,set_shadow: function(value) {
		this.shadow = value;
		var shadowString = "";
		if(value != null && value.length > 0) {
			var _g = 0;
			var _g1 = value.length;
			while(_g < _g1) {
				var i = _g++;
				if(i > 0) {
					shadowString += ",";
				}
				shadowString += value[i].toString(1);
			}
		}
		this.dh.jselement.style.textShadow = shadowString;
		return value;
	}
	,createElement: function() {
		priori_view_PriDisplay.prototype.createElement.call(this);
		this.dh.jselement.style.whiteSpace = "nowrap";
		this.dh.jselement.style.fontSize = "" + 14 + "px";
		this.dh.jselement.style.width = "";
		this.dh.jselement.style.height = "";
		this.dh.jselement.style.textOverflow = "ellipsis";
	}
	,kill: function() {
		this.dh.jselement.oninput = null;
		this.dh.jselement.onkeydown = null;
		this.dh.jselement.onkeyup = null;
		this.dh.jselement.onpaste = null;
		priori_view_PriDisplay.prototype.kill.call(this);
	}
	,__class__: priori_view_text_PriText
	,__properties__: $extend(priori_view_PriDisplay.prototype.__properties__,{set_editable:"set_editable",get_editable:"get_editable",set_ellipsis:"set_ellipsis",get_ellipsis:"get_ellipsis",set_selectable:"set_selectable",get_selectable:"get_selectable",set_multiLine:"set_multiLine",get_multiLine:"get_multiLine",set_autoSize:"set_autoSize",get_autoSize:"get_autoSize",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_text:"set_text",get_text:"get_text",set_fontStyle:"set_fontStyle",set_html:"set_html",get_html:"get_html"})
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
var typeofJQuery = typeof($);
if(typeofJQuery != "undefined" && $.fn != null) {
	$.fn.elements = function() {
		return new js_jquery_JqEltsIterator(this);
	};
}
var typeofJQuery = typeof($);
if(typeofJQuery != "undefined" && $.fn != null) {
	$.fn.iterator = function() {
		return new js_jquery_JqIterator(this);
	};
}
client_Constants.LOCAL_STORAGE_LOG = "locallog";
client_Constants.ITEM_DELETE = -268435457;
client_Constants.SERVER_DEST = "https://myhost:8000";
client_Constants.TOKEN_HEADER = "X-Auth-Token";
client_Constants.RESET_FORM_DATA_ID = "item";
client_Constants.RESET_FORM_DATA_NAME = "name";
client_Constants.RESET_FORM_DATA_PROD = "prod";
client_Constants.RESET_FORM_DATA_QUANTITY = "quantity";
client_Constants.RESET_FORM_DATA_PRICE = "price";
client_Constants.RESPONSE_STATUS_UNAUTH = 403;
client_Constants.RESPONSE_STATUS_OK = 200;
client_Constants.ACTION_EDIT = "edit";
client_Constants.ACTION_DELETE = "delete";
client_views_AddItemForm.NAME = "additem";
client_views_ItemList.NAME = "itemlist";
priori_view_grid_cell_PriGridCellRenderer.SPECIAL_COLUMN_INDEX = "#COL_INDEX";
priori_view_grid_cell_PriGridCellRenderer.SPECIAL_ROW_LINE = "#ROW_LINE";
client_views_LoginForm.NAME = "login";
client_views_RegisterForm.NAME = "register";
helper_browser_BrowserEventEngine.SPECIAL_EVENT_LIST = ["mouseleave","mouseenter","mousedown","mouseup","mousemove","click","prievent_base_scroll","keyup","keydown","focusin","focusout"];
helper_display_DisplayHelperIgnition.INITIAL_FONT_SIZE = 14;
helper_pool_PoolGridCell.instance = new helper_pool_PoolGridCell();
helper_pool_PoolGridHead.instance = new helper_pool_PoolGridHead();
priori_event_PriEvent.ADD_ITEM = "prievent_base_add_item";
priori_event_PriEvent.ADDED = "prievent_base_addedToContainer";
priori_event_PriEvent.ADDED_TO_APP = "prievent_base_addedToApp";
priori_event_PriEvent.CANCEL = "prievent_base_cancel";
priori_event_PriEvent.CHANGE = "prievent_base_change";
priori_event_PriEvent.CLOSE = "prievent_base_close";
priori_event_PriEvent.COMPLETE = "prievent_base_complete";
priori_event_PriEvent.DELETE = "prievent_base_delete";
priori_event_PriEvent.DRAG = "prievent_base_drag";
priori_event_PriEvent.ERROR = "prievent_base_error";
priori_event_PriEvent.OK = "prievent_base_ok";
priori_event_PriEvent.OPEN = "prievent_base_open";
priori_event_PriEvent.PRESS_ENTER = "prievent_base_pressenter";
priori_event_PriEvent.RESIZE = "prievent_base_resize";
priori_event_PriEvent.REMOVED = "prievent_base_removedFromContainer";
priori_event_PriEvent.REMOVE_ITEM = "prievent_base_remove_item";
priori_event_PriEvent.REMOVED_FROM_APP = "prievent_base_removedFromApp";
priori_event_PriEvent.SAVE = "prievent_base_save";
priori_event_PriEvent.START = "prievent_base_start";
priori_event_PriEvent.SCROLL = "prievent_base_scroll";
priori_event_PriEvent.STOP = "prievent_base_stop";
priori_event_PriEvent.TICK = "prievent_base_tick";
priori_event_PriEvent.UPDATE = "prievent_base_update";
priori_assets_AssetManagerEvent.ASSET_COMPLETE = "AssetManagerComplete";
priori_assets_AssetManagerEvent.ASSET_ERROR = "AssetManagerError";
priori_assets_AssetManagerEvent.ASSET_PROGRESS = "AssetManagerProgress";
priori_view_form_PriFormElementBase.__meta__ = { fields : { get_fieldId : { noCompletion : null}}};
priori_view_form_PriFormElementBase.INITIAL_FONT_SIZE = 14;
priori_event_PriFocusEvent.FOCUS_IN = "focusin";
priori_event_PriFocusEvent.FOCUS_OUT = "focusout";
priori_event_PriKeyboardEvent.KEY_DOWN = "keydown";
priori_event_PriKeyboardEvent.KEY_UP = "keyup";
priori_event_PriMouseEvent.MOUSE_OVER = "mouseenter";
priori_event_PriMouseEvent.MOUSE_OUT = "mouseleave";
priori_event_PriMouseEvent.MOUSE_MOVE = "mousemove";
priori_event_PriTapEvent.TAP = "click";
priori_event_PriTapEvent.TAP_DOWN = "mousedown";
priori_event_PriTapEvent.TAP_UP = "mouseup";
priori_net_PriRequestContentType.FORM_URLENCODED = "application/x-www-form-urlencoded";
priori_net_PriRequestContentType.MULTIPART_FORM_DATA = "multipart/form-data";
priori_net_PriRequestContentType.APPLICATION_JSON = "application/json";
priori_net_PriRequestContentType.TEXT_PLAIN = "text/plain";
priori_net_PriRequestMethod.POST = "POST";
priori_net_PriRequestMethod.GET = "GET";
priori_net_PriRequestMethod.DELETE = "DELETE";
priori_net_PriRequestMethod.PUT = "PUT";
priori_net_PriRequestMethod.HEAD = "HEAD";
priori_net_PriRequestMethod.OPTIONS = "OPTIONS";
priori_style_font_PriFontStyle.DEFAULT_COLOR = 0;
priori_style_font_PriFontStyle.DEFAULT_FAMILY = "Arial, Helvetica, sans-serif";
priori_view_grid_PriDataGridEvent.GRID_CLICK = "PRI_DATA_GRID_CLICK";
priori_view_grid_PriDataGridEvent.CELL_OVER = "PRI_DATA_GRID_CELL_OVER";
priori_view_grid_PriDataGridEvent.SORT = "PRI_DATA_GRID_SORT";
priori_view_grid_header_PriGridHeaderRenderer.__meta__ = { fields : { set_title : { noCompletion : null}}};
Priori_$auto_$main_$builder.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
